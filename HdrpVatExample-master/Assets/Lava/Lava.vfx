%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &114340500867371532
MonoBehaviour:
  m_ObjectHideFlags: 1
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: d01270efd3285ea4a9d6c555cb0a8027, type: 3}
  m_Name: VFXUI
  m_EditorClassIdentifier: 
  groupInfos: []
  stickyNoteInfos: []
  systemInfos: []
  categories: []
  uiBounds:
    serializedVersion: 2
    x: 161
    y: -133
    width: 1167
    height: 1400
--- !u!114 &114350483966674976
MonoBehaviour:
  m_ObjectHideFlags: 1
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 7d4c867f6b72b714dbb5fd1780afe208, type: 3}
  m_Name: Lava
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 0}
  m_Children:
  - {fileID: 8926484042661614555}
  - {fileID: 8926484042661614558}
  - {fileID: 8926484042661614583}
  - {fileID: 8926484042661614842}
  - {fileID: 8926484042661614866}
  - {fileID: 8926484042661614879}
  - {fileID: 8926484042661614881}
  - {fileID: 8926484042661614883}
  - {fileID: 8926484042661614887}
  - {fileID: 8926484042661614893}
  - {fileID: 8926484042661615019}
  - {fileID: 8926484042661615021}
  - {fileID: 8926484042661615033}
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_UIInfos: {fileID: 114340500867371532}
  m_ParameterInfo:
  - name: PositionTexture
    path: PositionTexture
    tooltip: 
    sheetType: m_NamedObject
    realType: Texture2D
    defaultValue:
      m_Type:
        m_SerializableType: UnityEngine.Texture2D, UnityEngine.CoreModule, Version=0.0.0.0,
          Culture=neutral, PublicKeyToken=null
      m_SerializableObject: '{"obj":{"fileID":2800000,"guid":"9e3a6c2a6197ced2089a19d171616e45","type":3}}'
    min: -Infinity
    max: Infinity
    descendantCount: 0
  - name: ColorTexture
    path: ColorTexture
    tooltip: 
    sheetType: m_NamedObject
    realType: Texture2D
    defaultValue:
      m_Type:
        m_SerializableType: UnityEngine.Texture2D, UnityEngine.CoreModule, Version=0.0.0.0,
          Culture=neutral, PublicKeyToken=null
      m_SerializableObject: '{"obj":{"fileID":2800000,"guid":"30889caeccb0bf753b00a4067eab9e40","type":3}}'
    min: -Infinity
    max: Infinity
    descendantCount: 0
  - name: TextureDimensions
    path: TextureDimensions
    tooltip: Input dimensions of PositionTexture.
    sheetType: m_Vector2f
    realType: Vector2
    defaultValue:
      m_Type:
        m_SerializableType: UnityEngine.Vector2, UnityEngine.CoreModule, Version=0.0.0.0,
          Culture=neutral, PublicKeyToken=null
      m_SerializableObject: '{"x":2048.0,"y":573.0}'
    min: -Infinity
    max: Infinity
    descendantCount: 0
  - name: BBox Min
    path: BBox Min
    tooltip: Input BBOX MIN value shown in the VAT exporter.
    sheetType: m_Float
    realType: Single
    defaultValue:
      m_Type:
        m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
          PublicKeyToken=b77a5c561934e089
      m_SerializableObject: -227.9119
    min: -Infinity
    max: Infinity
    descendantCount: 0
  - name: BBox Max
    path: BBox Max
    tooltip: Input BBOX MAX value shown in the VAT exporter.
    sheetType: m_Float
    realType: Single
    defaultValue:
      m_Type:
        m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
          PublicKeyToken=b77a5c561934e089
      m_SerializableObject: 240.0912
    min: -Infinity
    max: Infinity
    descendantCount: 0
  - name: Time
    path: Time
    tooltip: 
    sheetType: m_Float
    realType: Single
    defaultValue:
      m_Type:
        m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
          PublicKeyToken=b77a5c561934e089
      m_SerializableObject: 1
    min: 0
    max: 1
    descendantCount: 0
  m_GraphVersion: 4
  m_saved: 1
  m_SubgraphDependencies:
  - {fileID: 5371698748595113096, guid: e7ef0664bfe29194ea86c7690aa09e40, type: 3}
  m_CategoryPath: 
--- !u!2058629511 &8926484042661614527
VisualEffectResource:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_Name: Lava
  m_Graph: {fileID: 114350483966674976}
  m_ShaderSources:
  - compute: 1
    name: '[System 1]Initialize Particle'
    source: "#pragma kernel CSMain\r\n#define NB_THREADS_PER_GROUP 64\n#define HAS_ATTRIBUTES
      1\n#define VFX_PASSDEPTH_ACTUAL (0)\n#define VFX_PASSDEPTH_MOTION_VECTOR (1)\n#define
      VFX_PASSDEPTH_SELECTION (2)\n#define VFX_USE_SIZE_CURRENT 1\n#define VFX_USE_POSITION_CURRENT
      1\n#define VFX_USE_COLOR_CURRENT 1\n#define VFX_USE_ALPHA_CURRENT 1\n#define
      VFX_USE_PARTICLEID_CURRENT 1\n#define VFX_LOCAL_SPACE 1\n#include \"Packages/com.unity.render-pipelines.high-definition/Runtime/VFXGraph/Shaders/VFXDefines.hlsl\"\n\n\r\n\nstruct
      Attributes\n{\n    float size;\n    float3 position;\n    float3 color;\n   
      float alpha;\n    uint particleId;\n};\n\nstruct SourceAttributes\n{\n};\n\n\n\r\n\r\n#define
      USE_DEAD_LIST (VFX_USE_ALIVE_CURRENT && !HAS_STRIPS)\r\n\r\nRWByteAddressBuffer
      attributeBuffer;\r\nByteAddressBuffer sourceAttributeBuffer;\r\n\r\nCBUFFER_START(initParams)\r\n#if
      !VFX_USE_SPAWNER_FROM_GPU\r\n    uint nbSpawned;\t\t\t\t\t// Numbers of particle
      spawned\r\n    uint spawnIndex;\t\t\t\t// Index of the first particle spawned\r\n   
      uint dispatchWidth;\r\n#else\r\n    uint offsetInAdditionalOutput;\r\n\tuint
      nbMax;\r\n#endif\r\n\tuint systemSeed;\r\nCBUFFER_END\r\n\r\n#if USE_DEAD_LIST\r\nRWStructuredBuffer<uint>
      deadListIn;\r\nByteAddressBuffer deadListCount; // This is bad to use a SRV
      to fetch deadList count but Unity API currently prevent from copying to CB\r\n#endif\r\n\r\n#if
      VFX_USE_SPAWNER_FROM_GPU\r\nStructuredBuffer<uint> eventList;\r\nByteAddressBuffer
      inputAdditional;\r\n#endif\r\n\r\n#if HAS_STRIPS\r\nRWBuffer<uint> stripDataBuffer;\r\n#endif\r\n\r\n#include
      \"Packages/com.unity.visualeffectgraph/Shaders/Common/VFXCommonCompute.hlsl\"\n#include
      \"Packages/com.unity.visualeffectgraph/Shaders/VFXCommon.hlsl\"\n\n\r\n\r\nvoid
      SetAttribute_3278B22F(inout float size, float Size) /*attribute:size Composition:Overwrite
      Source:Slot Random:Off channels:XYZ */\n{\n    size = Size;\n}\n\n\r\n\r\n#if
      HAS_STRIPS\r\nbool GetParticleIndex(inout uint particleIndex, uint stripIndex)\r\n{\r\n\tuint
      relativeIndex;\r\n\tInterlockedAdd(STRIP_DATA(STRIP_NEXT_INDEX, stripIndex),
      1, relativeIndex);\r\n\tif (relativeIndex >= PARTICLE_PER_STRIP_COUNT) // strip
      is full\r\n\t{\r\n\t\tInterlockedAdd(STRIP_DATA(STRIP_NEXT_INDEX, stripIndex),
      -1); // Remove previous increment\r\n\t\treturn false;\r\n\t}\r\n\r\n\tparticleIndex
      = stripIndex * PARTICLE_PER_STRIP_COUNT + ((STRIP_DATA(STRIP_FIRST_INDEX, stripIndex)
      + relativeIndex) % PARTICLE_PER_STRIP_COUNT);\r\n    return true;\r\n}\r\n#endif\r\n\r\n[numthreads(NB_THREADS_PER_GROUP,1,1)]\r\nvoid
      CSMain(uint3 groupId          : SV_GroupID,\r\n            uint3 groupThreadId   
      : SV_GroupThreadID)\r\n{\r\n    uint id = groupThreadId.x + groupId.x * NB_THREADS_PER_GROUP;\r\n#if
      !VFX_USE_SPAWNER_FROM_GPU\r\n    id += groupId.y * dispatchWidth * NB_THREADS_PER_GROUP;\r\n#endif\r\n\r\n#if
      VFX_USE_SPAWNER_FROM_GPU\r\n    uint maxThreadId = inputAdditional.Load((offsetInAdditionalOutput
      * 2 + 0) << 2);\r\n    uint currentSpawnIndex = inputAdditional.Load((offsetInAdditionalOutput
      * 2 + 1) << 2) - maxThreadId;\r\n#else\r\n    uint maxThreadId = nbSpawned;\r\n   
      uint currentSpawnIndex = spawnIndex;\r\n#endif\r\n\r\n#if USE_DEAD_LIST\r\n   
      maxThreadId = min(maxThreadId, deadListCount.Load(0x0));\r\n#elif VFX_USE_SPAWNER_FROM_GPU\r\n   
      maxThreadId = min(maxThreadId, nbMax); //otherwise, nbSpawned already clamped
      on CPU\r\n#endif\r\n\r\n    if (id < maxThreadId)\r\n    {\r\n#if VFX_USE_SPAWNER_FROM_GPU\r\n       
      int sourceIndex = eventList[id];\r\n#endif\r\n\t\tuint particleIndex = id +
      currentSpawnIndex;\r\n\t\t\r\n#if !VFX_USE_SPAWNER_FROM_GPU\r\n        int
      sourceIndex = 0;\n        /*//Loop with 1 iteration generate a wrong IL Assembly
      (and actually, useless code)\n        uint currentSumSpawnCount = 0u;\n       
      for (sourceIndex=0; sourceIndex<1; sourceIndex++)\n        {\n            currentSumSpawnCount
      += uint(asfloat(sourceAttributeBuffer.Load((sourceIndex * 0x1 + 0x0) << 2)));\n           
      if (id < currentSumSpawnCount)\n            {\n                break;\n           
      }\n        }\n        */\n        \n\r\n#endif\r\n\r\n\t\tAttributes attributes
      = (Attributes)0;\r\n\t\tSourceAttributes sourceAttributes = (SourceAttributes)0;\r\n\t\t\r\n       
      attributes.size = (float)0.100000001;\n        attributes.position = float3(0,
      0, 0);\n        attributes.color = float3(1, 1, 1);\n        attributes.alpha
      = (float)1;\n        attributes.particleId = (uint)0;\n        \n\r\n#if VFX_USE_PARTICLEID_CURRENT\r\n        
      attributes.particleId = particleIndex;\r\n#endif\r\n#if VFX_USE_SEED_CURRENT\r\n       
      attributes.seed = WangHash(particleIndex ^ systemSeed);\r\n#endif\r\n#if VFX_USE_SPAWNINDEX_CURRENT\r\n       
      attributes.spawnIndex = id;\r\n#endif\r\n#if HAS_STRIPS\r\n#if !VFX_USE_SPAWNER_FROM_GPU\r\n\t\t\r\n#else\r\n       
      uint stripIndex = sourceIndex;\r\n#endif\r\n\t\tstripIndex = min(stripIndex,
      STRIP_COUNT);\r\n\r\n        if (!GetParticleIndex(particleIndex, stripIndex))\r\n           
      return;\r\n\r\n        const StripData stripData = GetStripDataFromStripIndex(stripIndex,
      PARTICLE_PER_STRIP_COUNT);\r\n\t\tInitStripAttributes(particleIndex, attributes,
      stripData);\r\n\t\t// TODO Change seed to be sure we're deterministic on random
      with strip\r\n#endif\r\n        \r\n        {\n            SetAttribute_3278B22F(
      /*inout */attributes.size, (float)0.159999996);\n        }\n        \n\r\n\t\t\r\n#if
      VFX_USE_ALIVE_CURRENT\r\n        if (attributes.alive)\r\n#endif       \r\n       
      {\r\n#if USE_DEAD_LIST\r\n\t        uint deadIndex = deadListIn.DecrementCounter();\r\n           
      uint index = deadListIn[deadIndex];\r\n#else\r\n            uint index = particleIndex;\r\n#endif\r\n           
      attributeBuffer.Store((index * 0x1 + 0x0) << 2,asuint(attributes.size));\n           
      attributeBuffer.Store3((index * 0x8 + 0x10000) << 2,asuint(attributes.position));\n           
      attributeBuffer.Store3((index * 0x8 + 0x10004) << 2,asuint(attributes.color));\n           
      attributeBuffer.Store((index * 0x8 + 0x10003) << 2,asuint(attributes.alpha));\n           
      attributeBuffer.Store((index * 0x1 + 0x90000) << 2,asuint(attributes.particleId));\n           
      \n\r\n        }\r\n    }\r\n}\r\n"
  - compute: 1
    name: '[System 1]Update Particle'
    source: "#pragma kernel CSMain\r\n#define NB_THREADS_PER_GROUP 64\n#define HAS_ATTRIBUTES
      1\n#define VFX_PASSDEPTH_ACTUAL (0)\n#define VFX_PASSDEPTH_MOTION_VECTOR (1)\n#define
      VFX_PASSDEPTH_SELECTION (2)\n#define VFX_USE_POSITION_CURRENT 1\n#define VFX_USE_COLOR_CURRENT
      1\n#define VFX_USE_ALPHA_CURRENT 1\n#define VFX_USE_PARTICLEID_CURRENT 1\n#define
      VFX_LOCAL_SPACE 1\n#include \"Packages/com.unity.render-pipelines.high-definition/Runtime/VFXGraph/Shaders/VFXDefines.hlsl\"\n\n\r\nCBUFFER_START(parameters)\n   
      float3 uniform_b;\n    float uniform_c;\n    float3 uniform_f;\n    uint PADDING_0;\n   
      float2 uniform_d;\n    float2 uniform_e;\nCBUFFER_END\n\nstruct Attributes\n{\n   
      float3 position;\n    float3 color;\n    float alpha;\n    uint particleId;\n};\n\nstruct
      SourceAttributes\n{\n};\n\nTexture2D texture_b;\nSamplerState samplertexture_b;\nfloat4
      texture_b_TexelSize;\nTexture2D texture_c;\nSamplerState samplertexture_c;\nfloat4
      texture_c_TexelSize;\n\n\r\n\r\n#define USE_DEAD_LIST (VFX_USE_ALIVE_CURRENT
      && !HAS_STRIPS)\r\n\r\nRWByteAddressBuffer attributeBuffer;\r\n\r\n#if USE_DEAD_LIST\r\nRWStructuredBuffer<uint>
      deadListOut;\r\n#endif\r\n\r\n#if VFX_HAS_INDIRECT_DRAW\r\nRWStructuredBuffer<uint>
      indirectBuffer;\r\n#endif\r\n\r\n#if HAS_STRIPS\r\nRWBuffer<uint> stripDataBuffer;\r\n#endif\r\n\r\n#if
      VFX_USE_STRIPALIVE_CURRENT\r\nBuffer<uint> attachedStripDataBuffer;\r\n#endif\r\n\r\nCBUFFER_START(updateParams)\r\n   
      uint nbMax;\r\n\tuint dispatchWidth;\r\n\tuint systemSeed;\r\nCBUFFER_END\r\n\r\n#include
      \"Packages/com.unity.visualeffectgraph/Shaders/Common/VFXCommonCompute.hlsl\"\n#include
      \"Packages/com.unity.visualeffectgraph/Shaders/VFXCommon.hlsl\"\n\n\r\n\r\nvoid
      SetAttribute_CAC29747(inout float3 position, float3 Position) /*attribute:position
      Composition:Overwrite Source:Slot Random:Off channels:XYZ */\n{\n    position
      = Position;\n}\nvoid SetAttribute_FDD06EC7(inout float3 color, float3 Color)
      /*attribute:color Composition:Overwrite Source:Slot Random:Off channels:XYZ
      */\n{\n    color = Color;\n}\nvoid SetAttribute_CEEAF35C(inout float alpha,
      float Alpha) /*attribute:alpha Composition:Overwrite Source:Slot Random:Off
      channels:XYZ */\n{\n    alpha = Alpha;\n}\n\n\r\n\r\n[numthreads(NB_THREADS_PER_GROUP,1,1)]\r\nvoid
      CSMain(uint3 groupId          : SV_GroupID,\r\n            uint3 groupThreadId   
      : SV_GroupThreadID)\r\n{\r\n\tuint id = groupThreadId.x + groupId.x * NB_THREADS_PER_GROUP
      + groupId.y * dispatchWidth * NB_THREADS_PER_GROUP;\r\n\tuint index = id;\r\n\tif
      (id < nbMax)\r\n\t{\r\n        Attributes attributes = (Attributes)0;\r\n\t\tSourceAttributes
      sourceAttributes = (SourceAttributes)0;\r\n\r\n#if VFX_USE_ALIVE_CURRENT\r\n\t\t\r\n\t\tif
      (attributes.alive)\r\n\t\t{\r\n\t\t\tattributes.position = asfloat(attributeBuffer.Load3((index
      * 0x8 + 0x10000) << 2));\n\t\t\tattributes.color = asfloat(attributeBuffer.Load3((index
      * 0x8 + 0x10004) << 2));\n\t\t\tattributes.alpha = asfloat(attributeBuffer.Load((index
      * 0x8 + 0x10003) << 2));\n\t\t\tattributes.particleId = (attributeBuffer.Load((index
      * 0x1 + 0x90000) << 2));\n\t\t\t\n\r\n\r\n// Initialize built-in needed attributes\r\n#if
      VFX_USE_OLDPOSITION_CURRENT\r\n\t\t\tattributes.oldPosition = attributes.position;\r\n#endif\r\n#if
      HAS_STRIPS\r\n            const StripData stripData = GetStripDataFromParticleIndex(index,
      PARTICLE_PER_STRIP_COUNT);\r\n            InitStripAttributes(index, attributes,
      stripData);\r\n#endif\r\n\t\t\t\r\n\t\t\t{\n\t\t\t    uint tmp_z = attributes.particleId
      / asuint(uniform_c);\n\t\t\t    uint tmp_ba = tmp_z * asuint(uniform_c);\n\t\t\t   
      uint tmp_bb = attributes.particleId - tmp_ba;\n\t\t\t    float tmp_bc = (float)tmp_bb;\n\t\t\t   
      float tmp_bd = (float)tmp_z;\n\t\t\t    float2 tmp_be = float2(tmp_bc, tmp_bd);\n\t\t\t   
      float2 tmp_bg = tmp_be + float2(0.5, 0.5);\n\t\t\t    float2 tmp_bh = tmp_bg
      / uniform_d;\n\t\t\t    float2 tmp_bi = tmp_bh + uniform_e;\n\t\t\t    float4
      tmp_bk = SampleTexture(VFX_SAMPLER(texture_b),tmp_bi,(float)0);\n\t\t\t   
      float tmp_bl = tmp_bk[0];\n\t\t\t    float tmp_bm = tmp_bk[2];\n\t\t\t    float
      tmp_bn = tmp_bk[1];\n\t\t\t    float3 tmp_bo = float3(tmp_bl, tmp_bm, tmp_bn);\n\t\t\t   
      float3 tmp_bp = tmp_bo * uniform_f;\n\t\t\t    float3 tmp_bq = uniform_b +
      tmp_bp;\n\t\t\t    SetAttribute_CAC29747( /*inout */attributes.position, tmp_bq);\n\t\t\t}\n\t\t\t{\n\t\t\t   
      uint tmp_z = attributes.particleId / asuint(uniform_c);\n\t\t\t    uint tmp_ba
      = tmp_z * asuint(uniform_c);\n\t\t\t    uint tmp_bb = attributes.particleId
      - tmp_ba;\n\t\t\t    float tmp_bc = (float)tmp_bb;\n\t\t\t    float tmp_bd
      = (float)tmp_z;\n\t\t\t    float2 tmp_be = float2(tmp_bc, tmp_bd);\n\t\t\t   
      float2 tmp_bg = tmp_be + float2(0.5, 0.5);\n\t\t\t    float2 tmp_bh = tmp_bg
      / uniform_d;\n\t\t\t    float2 tmp_bi = tmp_bh + uniform_e;\n\t\t\t    float4
      tmp_bk = SampleTexture(VFX_SAMPLER(texture_c),tmp_bi,(float)0);\n\t\t\t   
      float tmp_bl = tmp_bk[0];\n\t\t\t    float tmp_bm = tmp_bk[1];\n\t\t\t    float
      tmp_bn = tmp_bk[2];\n\t\t\t    float3 tmp_bo = float3(tmp_bl, tmp_bm, tmp_bn);\n\t\t\t   
      SetAttribute_FDD06EC7( /*inout */attributes.color, tmp_bo);\n\t\t\t}\n\t\t\t{\n\t\t\t   
      uint tmp_z = attributes.particleId / asuint(uniform_c);\n\t\t\t    uint tmp_ba
      = tmp_z * asuint(uniform_c);\n\t\t\t    uint tmp_bb = attributes.particleId
      - tmp_ba;\n\t\t\t    float tmp_bc = (float)tmp_bb;\n\t\t\t    float tmp_bd
      = (float)tmp_z;\n\t\t\t    float2 tmp_be = float2(tmp_bc, tmp_bd);\n\t\t\t   
      float2 tmp_bg = tmp_be + float2(0.5, 0.5);\n\t\t\t    float2 tmp_bh = tmp_bg
      / uniform_d;\n\t\t\t    float2 tmp_bi = tmp_bh + uniform_e;\n\t\t\t    float4
      tmp_bk = SampleTexture(VFX_SAMPLER(texture_c),tmp_bi,(float)0);\n\t\t\t   
      float tmp_bl = tmp_bk[3];\n\t\t\t    SetAttribute_CEEAF35C( /*inout */attributes.alpha,
      tmp_bl);\n\t\t\t}\n\t\t\t\n\r\n\r\n\t\t\tif (attributes.alive)\r\n\t\t\t{\r\n\t\t\t\tattributeBuffer.Store3((index
      * 0x8 + 0x10000) << 2,asuint(attributes.position));\n\t\t\t\tattributeBuffer.Store3((index
      * 0x8 + 0x10004) << 2,asuint(attributes.color));\n\t\t\t\tattributeBuffer.Store((index
      * 0x8 + 0x10003) << 2,asuint(attributes.alpha));\n\t\t\t\t\n\r\n#if VFX_HAS_INDIRECT_DRAW\r\n               
      uint indirectIndex = indirectBuffer.IncrementCounter();\r\n\t\t\t\tindirectBuffer[indirectIndex]
      = index;\r\n#endif\r\n\r\n#if HAS_STRIPS\t\t\t\r\n\t\t\t\tuint relativeIndexInStrip
      = GetRelativeIndex(index, stripData);\r\n\t\t\t\tInterlockedMin(STRIP_DATA(STRIP_MIN_ALIVE,
      stripData.stripIndex), relativeIndexInStrip);\r\n\t\t\t\tInterlockedMax(STRIP_DATA(STRIP_MAX_ALIVE,
      stripData.stripIndex), relativeIndexInStrip);\r\n#endif\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t\r\n#if
      USE_DEAD_LIST && !VFX_USE_STRIPALIVE_CURRENT\r\n\t\t\t\tuint deadIndex = deadListOut.IncrementCounter();\r\n\t\t\t\tdeadListOut[deadIndex]
      = index;\r\n#endif\r\n\t\t\t}\r\n\t\t}\r\n#if USE_DEAD_LIST && VFX_USE_STRIPALIVE_CURRENT\r\n       
      else if (attributes.stripAlive)\r\n        {\r\n            if (STRIP_DATA_X(attachedStripDataBuffer,
      STRIP_MIN_ALIVE, index) == ~1) // Attached strip is no longer alive, recycle
      the particle \r\n            {\r\n                uint deadIndex = deadListOut.IncrementCounter();\r\n\t\t\t\tdeadListOut[deadIndex]
      = index;\r\n                attributes.stripAlive = false;\r\n               
      \r\n            }            \r\n        }\r\n#endif\r\n#else\r\n\t\tattributes.position
      = asfloat(attributeBuffer.Load3((index * 0x8 + 0x10000) << 2));\n\t\tattributes.color
      = asfloat(attributeBuffer.Load3((index * 0x8 + 0x10004) << 2));\n\t\tattributes.alpha
      = asfloat(attributeBuffer.Load((index * 0x8 + 0x10003) << 2));\n\t\tattributes.particleId
      = (attributeBuffer.Load((index * 0x1 + 0x90000) << 2));\n\t\t\n\r\n\t\t\r\n#if
      VFX_USE_OLDPOSITION_CURRENT\r\n\t\tattributes.oldPosition = attributes.position;\r\n#endif\r\n#if
      HAS_STRIPS\r\n        const StripData stripData = GetStripDataFromParticleIndex(index,
      PARTICLE_PER_STRIP_COUNT);\r\n        InitStripAttributes(index, attributes,
      stripData);\r\n#endif\r\n\t\t\r\n\t\t{\n\t\t    uint tmp_z = attributes.particleId
      / asuint(uniform_c);\n\t\t    uint tmp_ba = tmp_z * asuint(uniform_c);\n\t\t   
      uint tmp_bb = attributes.particleId - tmp_ba;\n\t\t    float tmp_bc = (float)tmp_bb;\n\t\t   
      float tmp_bd = (float)tmp_z;\n\t\t    float2 tmp_be = float2(tmp_bc, tmp_bd);\n\t\t   
      float2 tmp_bg = tmp_be + float2(0.5, 0.5);\n\t\t    float2 tmp_bh = tmp_bg
      / uniform_d;\n\t\t    float2 tmp_bi = tmp_bh + uniform_e;\n\t\t    float4 tmp_bk
      = SampleTexture(VFX_SAMPLER(texture_b),tmp_bi,(float)0);\n\t\t    float tmp_bl
      = tmp_bk[0];\n\t\t    float tmp_bm = tmp_bk[2];\n\t\t    float tmp_bn = tmp_bk[1];\n\t\t   
      float3 tmp_bo = float3(tmp_bl, tmp_bm, tmp_bn);\n\t\t    float3 tmp_bp = tmp_bo
      * uniform_f;\n\t\t    float3 tmp_bq = uniform_b + tmp_bp;\n\t\t    SetAttribute_CAC29747(
      /*inout */attributes.position, tmp_bq);\n\t\t}\n\t\t{\n\t\t    uint tmp_z =
      attributes.particleId / asuint(uniform_c);\n\t\t    uint tmp_ba = tmp_z * asuint(uniform_c);\n\t\t   
      uint tmp_bb = attributes.particleId - tmp_ba;\n\t\t    float tmp_bc = (float)tmp_bb;\n\t\t   
      float tmp_bd = (float)tmp_z;\n\t\t    float2 tmp_be = float2(tmp_bc, tmp_bd);\n\t\t   
      float2 tmp_bg = tmp_be + float2(0.5, 0.5);\n\t\t    float2 tmp_bh = tmp_bg
      / uniform_d;\n\t\t    float2 tmp_bi = tmp_bh + uniform_e;\n\t\t    float4 tmp_bk
      = SampleTexture(VFX_SAMPLER(texture_c),tmp_bi,(float)0);\n\t\t    float tmp_bl
      = tmp_bk[0];\n\t\t    float tmp_bm = tmp_bk[1];\n\t\t    float tmp_bn = tmp_bk[2];\n\t\t   
      float3 tmp_bo = float3(tmp_bl, tmp_bm, tmp_bn);\n\t\t    SetAttribute_FDD06EC7(
      /*inout */attributes.color, tmp_bo);\n\t\t}\n\t\t{\n\t\t    uint tmp_z = attributes.particleId
      / asuint(uniform_c);\n\t\t    uint tmp_ba = tmp_z * asuint(uniform_c);\n\t\t   
      uint tmp_bb = attributes.particleId - tmp_ba;\n\t\t    float tmp_bc = (float)tmp_bb;\n\t\t   
      float tmp_bd = (float)tmp_z;\n\t\t    float2 tmp_be = float2(tmp_bc, tmp_bd);\n\t\t   
      float2 tmp_bg = tmp_be + float2(0.5, 0.5);\n\t\t    float2 tmp_bh = tmp_bg
      / uniform_d;\n\t\t    float2 tmp_bi = tmp_bh + uniform_e;\n\t\t    float4 tmp_bk
      = SampleTexture(VFX_SAMPLER(texture_c),tmp_bi,(float)0);\n\t\t    float tmp_bl
      = tmp_bk[3];\n\t\t    SetAttribute_CEEAF35C( /*inout */attributes.alpha, tmp_bl);\n\t\t}\n\t\t\n\r\n\t\tattributeBuffer.Store3((index
      * 0x8 + 0x10000) << 2,asuint(attributes.position));\n\t\tattributeBuffer.Store3((index
      * 0x8 + 0x10004) << 2,asuint(attributes.color));\n\t\tattributeBuffer.Store((index
      * 0x8 + 0x10003) << 2,asuint(attributes.alpha));\n\t\t\n\r\n#if VFX_HAS_INDIRECT_DRAW\r\n       
      uint indirectIndex = indirectBuffer.IncrementCounter();\r\n\t\tindirectBuffer[indirectIndex]
      = index;\r\n#endif\r\n#endif\r\n\t}\r\n}\r\n"
  - compute: 0
    name: '[System 1]Output Particle Lit Mesh'
    source: "Shader \"Hidden/VFX/Lava/System 1/Output Particle Lit Mesh\"\n{\r\n\tSubShader\r\n\t{\t\r\n\t\tTags
      { \"Queue\"=\"Geometry+0\" \"IgnoreProjector\"=\"False\" \"RenderType\"=\"Opaque\"
      }\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\n\t\t\r\n\t\tZTest
      LEqual\n\t\tZWrite On\n\t\tCull Back\n\t\t\n\t\r\n\t\t\t\r\n\t\tHLSLINCLUDE\r\n\t\t\r\n\t\t#define
      NB_THREADS_PER_GROUP 64\n\t\t#define HAS_ATTRIBUTES 1\n\t\t#define VFX_PASSDEPTH_ACTUAL
      (0)\n\t\t#define VFX_PASSDEPTH_MOTION_VECTOR (1)\n\t\t#define VFX_PASSDEPTH_SELECTION
      (2)\n\t\t#define VFX_USE_SIZE_CURRENT 1\n\t\t#define VFX_USE_POSITION_CURRENT
      1\n\t\t#define VFX_USE_COLOR_CURRENT 1\n\t\t#define VFX_USE_ALPHA_CURRENT 1\n\t\t#define
      VFX_USE_ALIVE_CURRENT 1\n\t\t#define VFX_USE_AXISX_CURRENT 1\n\t\t#define VFX_USE_AXISY_CURRENT
      1\n\t\t#define VFX_USE_AXISZ_CURRENT 1\n\t\t#define VFX_USE_ANGLEX_CURRENT
      1\n\t\t#define VFX_USE_ANGLEY_CURRENT 1\n\t\t#define VFX_USE_ANGLEZ_CURRENT
      1\n\t\t#define VFX_USE_PIVOTX_CURRENT 1\n\t\t#define VFX_USE_PIVOTY_CURRENT
      1\n\t\t#define VFX_USE_PIVOTZ_CURRENT 1\n\t\t#define VFX_USE_SCALEX_CURRENT
      1\n\t\t#define VFX_USE_SCALEY_CURRENT 1\n\t\t#define VFX_USE_SCALEZ_CURRENT
      1\n\t\t#define VFX_COLORMAPPING_DEFAULT 1\n\t\t#define IS_OPAQUE_PARTICLE 1\n\t\t#define
      USE_CAST_SHADOWS_PASS 1\n\t\t#define HDRP_LIT 1\n\t\t#define HDRP_MATERIAL_TYPE_STANDARD
      1\n\t\t#define HDRP_USE_BASE_COLOR 1\n\t\t#define HDRP_USE_ADDITIONAL_EMISSIVE_COLOR
      1\n\t\t#define IS_OPAQUE_NOT_SIMPLE_LIT_PARTICLE 1\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t#define
      VFX_LOCAL_SPACE 1\n\t\t#include \"Packages/com.unity.render-pipelines.high-definition/Runtime/VFXGraph/Shaders/VFXDefines.hlsl\"\n\t\t\n\r\n\t\tCBUFFER_START(parameters)\n\t\t   
      float uniform_b;\n\t\t    uint3 PADDING_0;\n\t\tCBUFFER_END\n\t\t\n\t\tstruct
      Attributes\n\t\t{\n\t\t    float size;\n\t\t    float3 position;\n\t\t    float3
      color;\n\t\t    float alpha;\n\t\t    bool alive;\n\t\t    float3 axisX;\n\t\t   
      float3 axisY;\n\t\t    float3 axisZ;\n\t\t    float angleX;\n\t\t    float
      angleY;\n\t\t    float angleZ;\n\t\t    float pivotX;\n\t\t    float pivotY;\n\t\t   
      float pivotZ;\n\t\t    float scaleX;\n\t\t    float scaleY;\n\t\t    float
      scaleZ;\n\t\t};\n\t\t\n\t\tstruct SourceAttributes\n\t\t{\n\t\t};\n\t\t\n\t\t\n\r\n\t\t\r\n\t\t#define
      VFX_NEEDS_COLOR_INTERPOLATOR (VFX_USE_COLOR_CURRENT || VFX_USE_ALPHA_CURRENT)\r\n\t\t#if
      HAS_STRIPS\r\n\t\t#define VFX_OPTIONAL_INTERPOLATION \r\n\t\t#else\r\n\t\t#define
      VFX_OPTIONAL_INTERPOLATION nointerpolation\r\n\t\t#endif\r\n\t\t\r\n\t\tByteAddressBuffer
      attributeBuffer;\t\r\n\t\t\r\n\t\t#if VFX_HAS_INDIRECT_DRAW\r\n\t\tStructuredBuffer<uint>
      indirectBuffer;\t\r\n\t\t#endif\t\r\n\t\t\r\n\t\t#if USE_DEAD_LIST_COUNT\r\n\t\tByteAddressBuffer
      deadListCount;\r\n\t\t#endif\r\n\t\t\r\n\t\t#if HAS_STRIPS\r\n\t\tBuffer<uint>
      stripDataBuffer;\r\n\t\t#endif\r\n\t\t\r\n\t\t#if WRITE_MOTION_VECTOR_IN_FORWARD
      || USE_MOTION_VECTORS_PASS\r\n\t\tByteAddressBuffer elementToVFXBufferPrevious;\r\n\t\t#endif\r\n\t\t\r\n\t\tCBUFFER_START(outputParams)\r\n\t\t\tfloat
      nbMax;\r\n\t\t\tfloat systemSeed;\r\n\t\tCBUFFER_END\r\n\t\t\r\n\t\t// Helper
      macros to always use a valid instanceID\r\n\t\t#if defined(UNITY_STEREO_INSTANCING_ENABLED)\r\n\t\t\t#define
      VFX_DECLARE_INSTANCE_ID     UNITY_VERTEX_INPUT_INSTANCE_ID\r\n\t\t\t#define
      VFX_GET_INSTANCE_ID(i)      unity_InstanceID\r\n\t\t#else\r\n\t\t\t#define
      VFX_DECLARE_INSTANCE_ID     uint instanceID : SV_InstanceID;\r\n\t\t\t#define
      VFX_GET_INSTANCE_ID(i)      i.instanceID\r\n\t\t#endif\r\n\t\t\r\n\t\tENDHLSL\r\n\t\t\n\r\n\t\tPass\r\n\t\t{\t\t\r\n\t\t\tTags
      { \"LightMode\"=\"SceneSelectionPass\" }\r\n\t\t\r\n\t\t\tZWrite On\r\n\t\t\tBlend
      Off\r\n\t\t\t\r\n\t\t\tHLSLPROGRAM\r\n\t\t\t#define VFX_PASSDEPTH VFX_PASSDEPTH_SELECTION\r\n\t\t\t\r\n\t\t\t#pragma
      target 4.5\r\n\t\t\t#define UNITY_MATERIAL_LIT\r\n\t\t\t#pragma multi_compile
      _ WRITE_NORMAL_BUFFER\r\n\t\t\t\r\n\t\t\tstruct ps_input\r\n\t\t\t{\t\t\r\n\t\t\t\tfloat4
      pos : SV_POSITION;\r\n\t\t\t\tfloat2 uv : TEXCOORD0;\t\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_UV1\r\n\t\t\t   
      float4 uv1 : COLOR2;\r\n\t\t\t    #endif\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_UV2\r\n\t\t\t   
      float4 uv2 : COLOR3;\r\n\t\t\t    #endif\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_UV3\r\n\t\t\t   
      float4 uv3 : COLOR4;\r\n\t\t\t    #endif\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_COLOR\r\n\t\t\t   
      float4 vertexColor : COLOR1;\r\n\t\t\t    #endif\r\n\t\t\t\t#if USE_ALPHA_TEST
      || USE_FLIPBOOK_INTERPOLATION || VFX_USE_ALPHA_CURRENT\r\n\t\t\t\t// x: alpha
      threshold\r\n\t\t\t\t// y: frame blending factor\r\n\t\t\t\t// z: alpha\r\n\t\t\t\t//
      w: smoothness\r\n\t\t\t\tnointerpolation float4 builtInInterpolants : TEXCOORD1;\r\n\t\t\t\t#endif\r\n\t\t\t\t#if
      USE_FLIPBOOK_MOTIONVECTORS\r\n\t\t\t\t// x: motion vector scale u\r\n\t\t\t\t//
      y: motion vector scale v\r\n\t\t\t\tnointerpolation float2 builtInInterpolants2
      : TEXCOORD3;\r\n\t\t\t\t#endif\r\n\t\t\t\t#if defined(WRITE_NORMAL_BUFFER)
      || SHADERGRAPH_NEEDS_NORMAL_DEPTHONLY\r\n\t\t\t\tfloat3 normal : TEXCOORD4;\r\n\t\t\t\t#if
      SHADERGRAPH_NEEDS_TANGENT_DEPTHONLY\r\n\t\t\t\tfloat4 tangent : TEXCOORD5;\r\n\t\t\t\t#endif\r\n\t\t\t\t#endif\r\n\t\t\t\t\r\n\t\t\t\t#if
      VFX_PASSDEPTH == VFX_PASSDEPTH_MOTION_VECTOR\r\n\t\t\t\tfloat4 cPosPrevious
      : TEXCOORD6;\r\n\t\t\t\tfloat4 cPosNonJiterred : TEXCOORD7;\r\n\t\t\t\t#endif\r\n\t\t\t   
      \r\n\t\t\t\t\r\n\t\t\t\tUNITY_VERTEX_OUTPUT_STEREO\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t#define
      VFX_VARYING_PS_INPUTS ps_input\r\n\t\t\t#define VFX_VARYING_POSCS pos\r\n\t\t\t#define
      VFX_VARYING_ALPHA builtInInterpolants.z\r\n\t\t\t#define VFX_VARYING_ALPHATHRESHOLD
      builtInInterpolants.x\r\n\t\t\t#define VFX_VARYING_FRAMEBLEND builtInInterpolants.y\r\n\t\t\t#define
      VFX_VARYING_MOTIONVECTORSCALE builtInInterpolants2.xy\r\n\t\t\t#define VFX_VARYING_UV
      uv\r\n\t\t\t\r\n\t\t\t#if VFX_PASSDEPTH == VFX_PASSDEPTH_MOTION_VECTOR\r\n\t\t\t#define
      VFX_VARYING_VELOCITY_CPOS cPosNonJiterred\r\n\t\t\t#define VFX_VARYING_VELOCITY_CPOS_PREVIOUS
      cPosPrevious\r\n\t\t\t#endif\r\n\t\t\t\r\n\t\t\t#if defined(WRITE_NORMAL_BUFFER)
      || SHADERGRAPH_NEEDS_NORMAL_DEPTHONLY\r\n\t\t\t#define VFX_VARYING_NORMAL normal\r\n\t\t\t#endif\r\n\t\t\t#ifdef
      WRITE_NORMAL_BUFFER\r\n\t\t\t#define VFX_VARYING_SMOOTHNESS builtInInterpolants.w\r\n\t\t\t#endif\r\n\t\t\t#if
      SHADERGRAPH_NEEDS_TANGENT_DEPTHONLY\r\n\t\t\t#define VFX_VARYING_TANGENT tangent\r\n\t\t\t#endif\r\n\t\t\t\t\t\r\n\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t#if
      !(defined(VFX_VARYING_PS_INPUTS) && defined(VFX_VARYING_POSCS))\r\n\t\t\t#error
      VFX_VARYING_PS_INPUTS, VFX_VARYING_POSCS and VFX_VARYING_UV must be defined.\r\n\t\t\t#endif\r\n\t\t\t\r\n\t\t\t#include
      \"Packages/com.unity.render-pipelines.high-definition/Runtime/VFXGraph/Shaders/VFXCommon.hlsl\"\n\t\t\t#include
      \"Packages/com.unity.visualeffectgraph/Shaders/VFXCommon.hlsl\"\n\t\t\t\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tstruct
      vs_input\r\n\t\t\t{\r\n\t\t\t\tfloat3 pos : POSITION;\r\n\t\t\t\tfloat2 uv
      : TEXCOORD0;\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_UV1\r\n\t\t\t    float4 uv1
      : TEXCOORD1;\r\n\t\t\t    #endif\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_UV2\r\n\t\t\t   
      float4 uv2 : TEXCOORD2;\r\n\t\t\t    #endif\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_UV3\r\n\t\t\t   
      float4 uv3 : TEXCOORD3;\r\n\t\t\t    #endif\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_COLOR\r\n\t\t\t   
      float4 vertexColor : COLOR;\r\n\t\t\t    #endif\r\n\t\t\t\tfloat3 normal :
      NORMAL;\r\n\t\t\t\t#if defined(VFX_VARYING_TANGENT) || SHADERGRAPH_HAS_NORMAL\r\n\t\t\t\tfloat4
      tangent : TANGENT;\r\n\t\t\t\t#endif\r\n\t\t\t\tVFX_DECLARE_INSTANCE_ID\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t#pragma
      vertex vert\r\n\t\t\tVFX_VARYING_PS_INPUTS vert(vs_input i)\r\n\t\t\t{\r\n\t\t\t   
      VFX_VARYING_PS_INPUTS o = (VFX_VARYING_PS_INPUTS)0;\r\n\t\t\t\r\n\t\t\t\tUNITY_SETUP_INSTANCE_ID(i);\r\n\t\t\t\tUNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(o);\r\n\t\t\t\r\n\t\t\t\tuint
      index = VFX_GET_INSTANCE_ID(i);\t\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\tuint
      deadCount = 0;\r\n\t\t\t\t\t\t#if USE_DEAD_LIST_COUNT\r\n\t\t\t\t\t\tdeadCount
      = deadListCount.Load(0);\r\n\t\t\t\t\t\t#endif\t\r\n\t\t\t\t\t\tif (index >=
      asuint(nbMax) - deadCount)\r\n\t\t\t\t\t\t#if USE_GEOMETRY_SHADER\r\n\t\t\t\t\t\t\treturn;
      // cull\r\n\t\t\t\t\t\t#else\r\n\t\t\t\t\t\t\treturn o; // cull\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tAttributes
      attributes = (Attributes)0;\r\n\t\t\t\t\t\tSourceAttributes sourceAttributes
      = (SourceAttributes)0;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#if VFX_HAS_INDIRECT_DRAW\r\n\t\t\t\t\t\tindex
      = indirectBuffer[index];\r\n\t\t\t\t\t\tattributes.size = asfloat(attributeBuffer.Load((index
      * 0x1 + 0x0) << 2));\n\t\t\t\t\t\tattributes.position = asfloat(attributeBuffer.Load3((index
      * 0x8 + 0x10000) << 2));\n\t\t\t\t\t\tattributes.color = asfloat(attributeBuffer.Load3((index
      * 0x8 + 0x10004) << 2));\n\t\t\t\t\t\tattributes.alpha = asfloat(attributeBuffer.Load((index
      * 0x8 + 0x10003) << 2));\n\t\t\t\t\t\tattributes.alive = (bool)true;\n\t\t\t\t\t\tattributes.axisX
      = float3(1, 0, 0);\n\t\t\t\t\t\tattributes.axisY = float3(0, 1, 0);\n\t\t\t\t\t\tattributes.axisZ
      = float3(0, 0, 1);\n\t\t\t\t\t\tattributes.angleX = (float)0;\n\t\t\t\t\t\tattributes.angleY
      = (float)0;\n\t\t\t\t\t\tattributes.angleZ = (float)0;\n\t\t\t\t\t\tattributes.pivotX
      = (float)0;\n\t\t\t\t\t\tattributes.pivotY = (float)0;\n\t\t\t\t\t\tattributes.pivotZ
      = (float)0;\n\t\t\t\t\t\tattributes.scaleX = (float)1;\n\t\t\t\t\t\tattributes.scaleY
      = (float)1;\n\t\t\t\t\t\tattributes.scaleZ = (float)1;\n\t\t\t\t\t\t\n\t\t\t\t\r\n\t\t\t\t\t\t#else\r\n\t\t\t\t\t\tattributes.alive
      = (bool)true;\n\t\t\t\t\t\t\n\t\t\t\t\r\n\t\t\t\t\t\t#if !HAS_STRIPS\r\n\t\t\t\t\t\tif
      (!attributes.alive)\r\n\t\t\t\t\t\t\treturn o;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tattributes.size
      = asfloat(attributeBuffer.Load((index * 0x1 + 0x0) << 2));\n\t\t\t\t\t\tattributes.position
      = asfloat(attributeBuffer.Load3((index * 0x8 + 0x10000) << 2));\n\t\t\t\t\t\tattributes.color
      = asfloat(attributeBuffer.Load3((index * 0x8 + 0x10004) << 2));\n\t\t\t\t\t\tattributes.alpha
      = asfloat(attributeBuffer.Load((index * 0x8 + 0x10003) << 2));\n\t\t\t\t\t\tattributes.axisX
      = float3(1, 0, 0);\n\t\t\t\t\t\tattributes.axisY = float3(0, 1, 0);\n\t\t\t\t\t\tattributes.axisZ
      = float3(0, 0, 1);\n\t\t\t\t\t\tattributes.angleX = (float)0;\n\t\t\t\t\t\tattributes.angleY
      = (float)0;\n\t\t\t\t\t\tattributes.angleZ = (float)0;\n\t\t\t\t\t\tattributes.pivotX
      = (float)0;\n\t\t\t\t\t\tattributes.pivotY = (float)0;\n\t\t\t\t\t\tattributes.pivotZ
      = (float)0;\n\t\t\t\t\t\tattributes.scaleX = (float)1;\n\t\t\t\t\t\tattributes.scaleY
      = (float)1;\n\t\t\t\t\t\tattributes.scaleZ = (float)1;\n\t\t\t\t\t\t\n\t\t\t\t\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//
      Initialize built-in needed attributes\r\n\t\t\t\t\t\t#if HAS_STRIPS\r\n\t\t\t\t\t\tInitStripAttributes(index,
      attributes, stripData);\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\tif
      (!attributes.alive)\r\n\t\t\t\t\treturn o;\r\n\t\t\t\t\r\n\t\t\t\to.VFX_VARYING_UV.xy
      = i.uv;\r\n\t\t\t    \r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_UV1\r\n\t\t\t   
      o.uv1 = i.uv1;\r\n\t\t\t    #endif\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_UV2\r\n\t\t\t   
      o.uv2 = i.uv2;\r\n\t\t\t    #endif\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_UV3\r\n\t\t\t   
      o.uv3 = i.uv3;\r\n\t\t\t    #endif\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_COLOR\r\n\t\t\t   
      o.vertexColor = i.vertexColor;\r\n\t\t\t    #endif\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\tfloat3
      size3 = float3(attributes.size,attributes.size,attributes.size);\r\n\t\t\t\t\t\t#if
      VFX_USE_SCALEX_CURRENT\r\n\t\t\t\t\t\tsize3.x *= attributes.scaleX;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t#if
      VFX_USE_SCALEY_CURRENT\r\n\t\t\t\t\t\tsize3.y *= attributes.scaleY;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t#if
      VFX_USE_SCALEZ_CURRENT\r\n\t\t\t\t\t\tsize3.z *= attributes.scaleZ;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tfloat3
      inputVertexPosition = i.pos;\r\n\t\t\t\tfloat4x4 elementToVFX = GetElementToVFXMatrix(\r\n\t\t\t\t\tattributes.axisX,\r\n\t\t\t\t\tattributes.axisY,\r\n\t\t\t\t\tattributes.axisZ,\r\n\t\t\t\t\tfloat3(attributes.angleX,attributes.angleY,attributes.angleZ),\r\n\t\t\t\t\tfloat3(attributes.pivotX,attributes.pivotY,attributes.pivotZ),\r\n\t\t\t\t\tsize3,\r\n\t\t\t\t\tattributes.position);\r\n\t\t\t\t\t\r\n\t\t\t\tfloat3
      vPos = mul(elementToVFX,float4(inputVertexPosition,1.0f)).xyz;\r\n\t\t\t\tfloat4
      csPos = TransformPositionVFXToClip(vPos);\r\n\t\t\t\to.VFX_VARYING_POSCS =
      csPos;\r\n\t\t\t\t\r\n\t\t\t\tfloat3 normalWS = normalize(TransformDirectionVFXToWorld(mul((float3x3)elementToVFX,
      i.normal)));\r\n\t\t\t\t#ifdef VFX_VARYING_NORMAL // TODO Should use inverse
      transpose\r\n\t\t\t\to.VFX_VARYING_NORMAL = normalWS;\r\n\t\t\t\t#endif\r\n\t\t\t\t#ifdef
      VFX_VARYING_TANGENT\r\n\t\t\t\to.VFX_VARYING_TANGENT = float4(normalize(TransformDirectionVFXToWorld(mul((float3x3)elementToVFX,i.tangent.xyz))),i.tangent.w);\r\n\t\t\t\t#endif\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\t#if
      defined(VFX_VARYING_VELOCITY_CPOS) && defined(VFX_VARYING_VELOCITY_CPOS_PREVIOUS)\r\n\t\t\t\t\t\tfloat4x4
      previousElementToVFX = (float4x4)0;\r\n\t\t\t\t\t\tpreviousElementToVFX[3]
      = float4(0,0,0,1);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tUNITY_UNROLL\r\n\t\t\t\t\t\tfor
      (int itIndexMatrixRow = 0; itIndexMatrixRow < 3; ++itIndexMatrixRow)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tUNITY_UNROLL\r\n\t\t\t\t\t\t\tfor
      (int itIndexMatrixCol = 0; itIndexMatrixCol < 4; ++itIndexMatrixCol)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tuint
      itIndexMatrix = itIndexMatrixCol * 4 + itIndexMatrixRow;\r\n\t\t\t\t\t\t\t\tuint
      read = elementToVFXBufferPrevious.Load((index * 16 + itIndexMatrix) << 2);\r\n\t\t\t\t\t\t\t\tpreviousElementToVFX[itIndexMatrixRow][itIndexMatrixCol]
      = asfloat(read);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tuint
      previousFrameIndex = elementToVFXBufferPrevious.Load((index * 16 + 15) << 2);\r\n\t\t\t\t\t\to.VFX_VARYING_VELOCITY_CPOS
      = o.VFX_VARYING_VELOCITY_CPOS_PREVIOUS = float4(0.0f, 0.0f, 0.0f, 1.0f);\r\n\t\t\t\t\t\tif
      (asuint(currentFrameIndex) - previousFrameIndex == 1u)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tfloat3
      oldvPos = mul(previousElementToVFX,float4(inputVertexPosition, 1.0f)).xyz;\r\n\t\t\t\t\t\t\to.VFX_VARYING_VELOCITY_CPOS_PREVIOUS
      = TransformPositionVFXToPreviousClip(oldvPos);\r\n\t\t\t\t\t\t\to.VFX_VARYING_VELOCITY_CPOS
      = TransformPositionVFXToNonJitteredClip(vPos);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\t#if
      VFX_USE_COLOR_CURRENT && defined(VFX_VARYING_COLOR)\r\n\t\t\t\t\t\to.VFX_VARYING_COLOR
      = attributes.color;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t#if VFX_USE_ALPHA_CURRENT
      && defined(VFX_VARYING_ALPHA) \r\n\t\t\t\t\t\to.VFX_VARYING_ALPHA = attributes.alpha;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#ifdef
      VFX_VARYING_EXPOSUREWEIGHT\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\to.VFX_VARYING_EXPOSUREWEIGHT
      = exposureWeight;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#if
      USE_SOFT_PARTICLE && defined(VFX_VARYING_INVSOFTPARTICLEFADEDISTANCE)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\to.VFX_VARYING_INVSOFTPARTICLEFADEDISTANCE
      = invSoftParticlesFadeDistance;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#if
      (USE_ALPHA_TEST || WRITE_MOTION_VECTOR_IN_FORWARD) && (!VFX_SHADERGRAPH ||
      !HAS_SHADERGRAPH_PARAM_ALPHATHRESHOLD) && defined(VFX_VARYING_ALPHATHRESHOLD)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\to.VFX_VARYING_ALPHATHRESHOLD
      = alphaThreshold;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#if
      USE_UV_SCALE_BIAS\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#if defined
      (VFX_VARYING_UV)\r\n\t\t\t\t\t\to.VFX_VARYING_UV.xy = o.VFX_VARYING_UV.xy *
      uvScale + uvBias;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#if
      defined(VFX_VARYING_POSWS)\r\n\t\t\t\t\t\to.VFX_VARYING_POSWS = TransformPositionVFXToWorld(vPos);\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\t#if
      USE_FLIPBOOK && defined(VFX_VARYING_UV)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tVFXUVData
      uvData = GetUVData(flipBookSize, invFlipBookSize, o.VFX_VARYING_UV.xy, attributes.texIndex);\r\n\t\t\t\t\t\to.VFX_VARYING_UV.xy
      = uvData.uvs.xy;\r\n\t\t\t\t\t\t#if USE_FLIPBOOK_INTERPOLATION && defined(VFX_VARYING_UV)
      && defined (VFX_VARYING_FRAMEBLEND)\r\n\t\t\t\t\t\to.VFX_VARYING_UV.zw = uvData.uvs.zw;\r\n\t\t\t\t\t\to.VFX_VARYING_FRAMEBLEND
      = uvData.blend;\r\n\t\t\t\t\t\t#if USE_FLIPBOOK_MOTIONVECTORS && defined(VFX_VARYING_MOTIONVECTORSCALE)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\to.VFX_VARYING_MOTIONVECTORSCALE
      = motionVectorScale * invFlipBookSize;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t   
      \r\n\t\t\t    \r\n\t\t\t\t\r\n\t\t\t\treturn o;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t#include
      \"Packages/com.unity.visualeffectgraph/Shaders/VFXCommonOutput.hlsl\"\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\n\t\t\t\t\r\n\t\t\t#if
      VFX_PASSDEPTH == VFX_PASSDEPTH_MOTION_VECTOR\r\n\t\t\t#define SHADERPASS SHADERPASS_MOTION_VECTORS\r\n\t\t\t#else\r\n\t\t\t#define
      SHADERPASS SHADERPASS_DEPTH_ONLY\r\n\t\t\t#endif\r\n\t\t\t#include \"Packages/com.unity.render-pipelines.high-definition/Runtime/VFXGraph/Shaders/VFXLit.hlsl\"\r\n\t\t\t\r\n\t\t\t#ifndef
      VFX_SHADERGRAPH\r\n\t\t\t\r\n\t\t\tvoid VFXGetHDRPLitData(out SurfaceData surfaceData,
      out BuiltinData builtinData, out BSDFData bsdfData, out PreLightData preLightData,
      VFX_VARYING_PS_INPUTS i, float3 normalWS, const VFXUVData uvData, uint2 tileIndex)\r\n\t\t\t{\t\r\n\t\t\t\t#if
      HDRP_MATERIAL_TYPE_TRANSLUCENT\r\n\t\t\t\t // Loads diffusion profile\r\n\t\t\t\t#else\r\n\t\t\t\tconst
      uint diffusionProfileHash = 0;\r\n\t\t\t\t#endif\r\n\t\t\t\t\r\n\t\t\t\tfloat3
      posRWS = VFXGetPositionRWS(i);\r\n\t\t\t\tfloat4 posSS = i.VFX_VARYING_POSCS;\r\n\t\t\t\tPositionInputs
      posInput = GetPositionInput(posSS.xy, _ScreenSize.zw, posSS.z, posSS.w, posRWS,
      tileIndex);\r\n\t\t\t\t\r\n\t\t\t\tfloat alpha;\r\n\t\t\t\tsurfaceData = VFXGetSurfaceData(i,normalWS,uvData,diffusionProfileHash,alpha);\t\r\n\t\t\t\tbsdfData
      = ConvertSurfaceDataToBSDFData(posSS.xy, surfaceData);\r\n\t\t\t\r\n\t\t\t\tpreLightData
      = GetPreLightData(GetWorldSpaceNormalizeViewDir(posRWS),posInput,bsdfData);\r\n\t\t\t\t\r\n\t\t\t\tpreLightData.diffuseFGD
      = 1.0f;\r\n\t\t\t    //TODO: investigate why this is needed\r\n\t\t\t    preLightData.coatPartLambdaV
      = 0;\r\n\t\t\t    preLightData.coatIblR = 0;\r\n\t\t\t    preLightData.coatIblF
      = 0;\r\n\t\t\t    \r\n\t\t\t\tbuiltinData = VFXGetBuiltinData(i,posInput,surfaceData,uvData,alpha);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvoid
      VFXGetHDRPLitData(out SurfaceData surfaceData, out BuiltinData builtinData,
      VFX_VARYING_PS_INPUTS i, float3 normalWS, const VFXUVData uvData)\r\n\t\t\t{\r\n\t\t\t\tBSDFData
      bsdfData = (BSDFData)0;\r\n\t\t\t\tPreLightData preLightData = (PreLightData)0;\r\n\t\t\t\tpreLightData.diffuseFGD
      = 1.0f;\r\n\t\t\t\tVFXGetHDRPLitData(surfaceData,builtinData,bsdfData,preLightData,i,normalWS,uvData,uint2(0,0));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t#endif\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t#include
      \"Packages/com.unity.render-pipelines.high-definition/Runtime/VFXGraph/Shaders/VFXLitPixelOutput.hlsl\"\r\n\t\t\t\r\n\t\t\t\n\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t#if
      VFX_PASSDEPTH == VFX_PASSDEPTH_SELECTION\r\n\t\t\tint _ObjectId;\r\n\t\t\tint
      _PassValue;\r\n\t\t\t#endif\r\n\t\t\t\r\n\t\t\t#pragma fragment frag\r\n\t\t\tvoid
      frag(ps_input i\r\n\t\t\t#if USE_DOUBLE_SIDED\r\n\t\t\t\t, bool frontFace :
      SV_IsFrontFace\r\n\t\t\t#endif\r\n\t\t\t\r\n\t\t\t#if VFX_PASSDEPTH == VFX_PASSDEPTH_MOTION_VECTOR\r\n\t\t\t\t,
      out float4 outMotionVector : SV_Target0\r\n\t\t\t\t#ifdef WRITE_NORMAL_BUFFER\r\n\t\t\t\t\t,
      out float4 outNormalBuffer : SV_Target1\r\n\t\t\t\t#endif\r\n\t\t\t#else\r\n\t\t\t\t#ifdef
      WRITE_NORMAL_BUFFER\r\n\t\t\t\t\t, out float4 outNormalBuffer : SV_Target0\r\n\t\t\t\t#elif
      VFX_PASSDEPTH == VFX_PASSDEPTH_SELECTION\r\n\t\t\t\t\t, out float4 outColor
      : SV_Target0\r\n\t\t\t\t#endif\r\n\t\t\t#endif\r\n\t\t\t\t)\r\n\t\t\t{\r\n\t\t\t\tUNITY_SETUP_STEREO_EYE_INDEX_POST_VERTEX(i);\r\n\t\t\t\tVFXTransformPSInputs(i);\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t#ifdef
      VFX_VARYING_NORMAL\r\n\t\t\t\t\t\t\t#if USE_DOUBLE_SIDED\r\n\t\t\t\t\t\t\tconst
      float faceMul = frontFace ? 1.0f : -1.0f;\r\n\t\t\t\t\t\t\t#else\r\n\t\t\t\t\t\t\tconst
      float faceMul = 1.0f;\r\n\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tfloat3
      normalWS = normalize(i.VFX_VARYING_NORMAL * faceMul);\r\n\t\t\t\t\t\t\tconst
      VFXUVData uvData = GetUVData(i);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t#ifdef
      VFX_VARYING_TANGENT\r\n\t\t\t\t\t\t\tfloat3 tangentWS = normalize(i.VFX_VARYING_TANGENT.xyz);\r\n\t\t\t\t\t\t\tfloat3
      bitangentWS = cross(normalWS,tangentWS) * (i.VFX_VARYING_TANGENT.w * faceMul);\r\n\t\t\t\t\t\t\tfloat3x3
      tbn = float3x3(tangentWS,bitangentWS,normalWS);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t#if
      USE_NORMAL_MAP\r\n\t\t\t\t\t\t\tfloat3 n = SampleNormalMap(VFX_SAMPLER(normalMap),uvData);\r\n\t\t\t\t\t\t\tfloat
      normalScale = 1.0f;\r\n\t\t\t\t\t\t\t#ifdef VFX_VARYING_NORMALSCALE\r\n\t\t\t\t\t\t\tnormalScale
      = i.VFX_VARYING_NORMALSCALE;\r\n\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\tnormalWS
      = normalize(lerp(normalWS,mul(n,tbn),normalScale));\r\n\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t#ifdef
      VFX_SHADERGRAPH\r\n\t\t\t        \r\n\t\t\t        \r\n\t\t\t\t\r\n\t\t\t       
      float alpha = OUTSG.;\r\n\t\t\t    #else\r\n\t\t\t\tfloat alpha = VFXGetFragmentColor(i).a;\r\n\t\t\t\t#if
      HDRP_USE_BASE_COLOR_MAP_ALPHA\r\n\t\t\t\t\talpha *= VFXGetTextureColor(VFX_SAMPLER(baseColorMap),i).a;\r\n\t\t\t\t#endif\r\n\t\t\t   
      #endif\r\n\t\t\t\tVFXClipFragmentColor(alpha,i);\r\n\t\t\t\t\r\n\t\t\t\t#ifdef
      WRITE_NORMAL_BUFFER\r\n\t\t\t        #ifndef VFX_SHADERGRAPH\r\n\t\t\t           
      VFXComputePixelOutputToNormalBuffer(i,normalWS,uvData,outNormalBuffer);\r\n\t\t\t       
      #else\r\n\t\t\t           #if HAS_SHADERGRAPH_PARAM_NORMAL\r\n\t\t\t              
      float3 n =  OUTSG.Normal_8;\r\n\t\t\t               normalWS = mul(n,tbn);\r\n\t\t\t          
      #endif\r\n\t\t\t           SurfaceData surface = (SurfaceData)0;\r\n\t\t\t          
      \r\n\t\t\t           surface.normalWS = normalWS;\r\n\t\t\t           \r\n\t\t\t          
      EncodeIntoNormalBuffer(ConvertSurfaceDataToNormalData(surface), i.VFX_VARYING_POSCS.xy,
      outNormalBuffer);\r\n\t\t\t        #endif\r\n\t\t\t\t#endif\r\n\t\t\t\r\n\t\t\t\t#if
      VFX_PASSDEPTH == VFX_PASSDEPTH_MOTION_VECTOR\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\tfloat2
      velocity = (i.VFX_VARYING_VELOCITY_CPOS.xy/i.VFX_VARYING_VELOCITY_CPOS.w) -
      (i.VFX_VARYING_VELOCITY_CPOS_PREVIOUS.xy/i.VFX_VARYING_VELOCITY_CPOS_PREVIOUS.w);\r\n\t\t\t\t\t\t\t#if
      UNITY_UV_STARTS_AT_TOP\r\n\t\t\t\t\t\t\t\tvelocity.y = -velocity.y;\r\n\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\tfloat4
      encodedMotionVector = 0.0f;\r\n\t\t\t\t\t\t\tVFXEncodeMotionVector(velocity
      * 0.5f, encodedMotionVector);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\toutMotionVector
      = encodedMotionVector;\r\n\t\t\t\t#elif VFX_PASSDEPTH == VFX_PASSDEPTH_SELECTION\r\n\t\t\t\t\t//
      We use depth prepass for scene selection in the editor, this code allow to
      output the outline correctly\r\n\t\t\t\t\toutColor = float4(_ObjectId, _PassValue,
      1.0, 1.0);\r\n\t\t\t\t#elif VFX_PASSDEPTH == VFX_PASSDEPTH_ACTUAL\r\n\t\t\t\t\t//void\r\n\t\t\t\t#else\r\n\t\t\t\t\t#error
      VFX_PASSDEPTH undefined\r\n\t\t\t\t#endif\r\n\t\t\t}\r\n\t\t\t\n\t\t\r\n\t\t\r\n\t\t\tENDHLSL\r\n\t\t}\r\n\t\t\n\r\n\t\tPass\r\n\t\t{\t\t\r\n\t\t\tTags
      { \"LightMode\"=\"DepthOnly\" }\r\n\t\t\r\n\t\t\tZWrite On\r\n\t\t\tBlend Off\r\n\t\t\t\r\n\t\t\tHLSLPROGRAM\r\n\t\t\t#define
      VFX_PASSDEPTH VFX_PASSDEPTH_ACTUAL\r\n\t\t\t\r\n\t\t\t#pragma target 4.5\r\n\t\t\t#define
      UNITY_MATERIAL_LIT\r\n\t\t\t#pragma multi_compile _ WRITE_NORMAL_BUFFER\r\n\t\t\t\r\n\t\t\tstruct
      ps_input\r\n\t\t\t{\t\t\r\n\t\t\t\tfloat4 pos : SV_POSITION;\r\n\t\t\t\tfloat2
      uv : TEXCOORD0;\t\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_UV1\r\n\t\t\t    float4
      uv1 : COLOR2;\r\n\t\t\t    #endif\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_UV2\r\n\t\t\t   
      float4 uv2 : COLOR3;\r\n\t\t\t    #endif\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_UV3\r\n\t\t\t   
      float4 uv3 : COLOR4;\r\n\t\t\t    #endif\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_COLOR\r\n\t\t\t   
      float4 vertexColor : COLOR1;\r\n\t\t\t    #endif\r\n\t\t\t\t#if USE_ALPHA_TEST
      || USE_FLIPBOOK_INTERPOLATION || VFX_USE_ALPHA_CURRENT\r\n\t\t\t\t// x: alpha
      threshold\r\n\t\t\t\t// y: frame blending factor\r\n\t\t\t\t// z: alpha\r\n\t\t\t\t//
      w: smoothness\r\n\t\t\t\tnointerpolation float4 builtInInterpolants : TEXCOORD1;\r\n\t\t\t\t#endif\r\n\t\t\t\t#if
      USE_FLIPBOOK_MOTIONVECTORS\r\n\t\t\t\t// x: motion vector scale u\r\n\t\t\t\t//
      y: motion vector scale v\r\n\t\t\t\tnointerpolation float2 builtInInterpolants2
      : TEXCOORD3;\r\n\t\t\t\t#endif\r\n\t\t\t\t#if defined(WRITE_NORMAL_BUFFER)
      || SHADERGRAPH_NEEDS_NORMAL_DEPTHONLY\r\n\t\t\t\tfloat3 normal : TEXCOORD4;\r\n\t\t\t\t#if
      SHADERGRAPH_NEEDS_TANGENT_DEPTHONLY\r\n\t\t\t\tfloat4 tangent : TEXCOORD5;\r\n\t\t\t\t#endif\r\n\t\t\t\t#endif\r\n\t\t\t\t\r\n\t\t\t\t#if
      VFX_PASSDEPTH == VFX_PASSDEPTH_MOTION_VECTOR\r\n\t\t\t\tfloat4 cPosPrevious
      : TEXCOORD6;\r\n\t\t\t\tfloat4 cPosNonJiterred : TEXCOORD7;\r\n\t\t\t\t#endif\r\n\t\t\t   
      \r\n\t\t\t\t\r\n\t\t\t\tUNITY_VERTEX_OUTPUT_STEREO\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t#define
      VFX_VARYING_PS_INPUTS ps_input\r\n\t\t\t#define VFX_VARYING_POSCS pos\r\n\t\t\t#define
      VFX_VARYING_ALPHA builtInInterpolants.z\r\n\t\t\t#define VFX_VARYING_ALPHATHRESHOLD
      builtInInterpolants.x\r\n\t\t\t#define VFX_VARYING_FRAMEBLEND builtInInterpolants.y\r\n\t\t\t#define
      VFX_VARYING_MOTIONVECTORSCALE builtInInterpolants2.xy\r\n\t\t\t#define VFX_VARYING_UV
      uv\r\n\t\t\t\r\n\t\t\t#if VFX_PASSDEPTH == VFX_PASSDEPTH_MOTION_VECTOR\r\n\t\t\t#define
      VFX_VARYING_VELOCITY_CPOS cPosNonJiterred\r\n\t\t\t#define VFX_VARYING_VELOCITY_CPOS_PREVIOUS
      cPosPrevious\r\n\t\t\t#endif\r\n\t\t\t\r\n\t\t\t#if defined(WRITE_NORMAL_BUFFER)
      || SHADERGRAPH_NEEDS_NORMAL_DEPTHONLY\r\n\t\t\t#define VFX_VARYING_NORMAL normal\r\n\t\t\t#endif\r\n\t\t\t#ifdef
      WRITE_NORMAL_BUFFER\r\n\t\t\t#define VFX_VARYING_SMOOTHNESS builtInInterpolants.w\r\n\t\t\t#endif\r\n\t\t\t#if
      SHADERGRAPH_NEEDS_TANGENT_DEPTHONLY\r\n\t\t\t#define VFX_VARYING_TANGENT tangent\r\n\t\t\t#endif\r\n\t\t\t\t\t\r\n\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t#if
      !(defined(VFX_VARYING_PS_INPUTS) && defined(VFX_VARYING_POSCS))\r\n\t\t\t#error
      VFX_VARYING_PS_INPUTS, VFX_VARYING_POSCS and VFX_VARYING_UV must be defined.\r\n\t\t\t#endif\r\n\t\t\t\r\n\t\t\t#include
      \"Packages/com.unity.render-pipelines.high-definition/Runtime/VFXGraph/Shaders/VFXCommon.hlsl\"\n\t\t\t#include
      \"Packages/com.unity.visualeffectgraph/Shaders/VFXCommon.hlsl\"\n\t\t\t\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tstruct
      vs_input\r\n\t\t\t{\r\n\t\t\t\tfloat3 pos : POSITION;\r\n\t\t\t\tfloat2 uv
      : TEXCOORD0;\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_UV1\r\n\t\t\t    float4 uv1
      : TEXCOORD1;\r\n\t\t\t    #endif\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_UV2\r\n\t\t\t   
      float4 uv2 : TEXCOORD2;\r\n\t\t\t    #endif\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_UV3\r\n\t\t\t   
      float4 uv3 : TEXCOORD3;\r\n\t\t\t    #endif\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_COLOR\r\n\t\t\t   
      float4 vertexColor : COLOR;\r\n\t\t\t    #endif\r\n\t\t\t\tfloat3 normal :
      NORMAL;\r\n\t\t\t\t#if defined(VFX_VARYING_TANGENT) || SHADERGRAPH_HAS_NORMAL\r\n\t\t\t\tfloat4
      tangent : TANGENT;\r\n\t\t\t\t#endif\r\n\t\t\t\tVFX_DECLARE_INSTANCE_ID\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t#pragma
      vertex vert\r\n\t\t\tVFX_VARYING_PS_INPUTS vert(vs_input i)\r\n\t\t\t{\r\n\t\t\t   
      VFX_VARYING_PS_INPUTS o = (VFX_VARYING_PS_INPUTS)0;\r\n\t\t\t\r\n\t\t\t\tUNITY_SETUP_INSTANCE_ID(i);\r\n\t\t\t\tUNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(o);\r\n\t\t\t\r\n\t\t\t\tuint
      index = VFX_GET_INSTANCE_ID(i);\t\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\tuint
      deadCount = 0;\r\n\t\t\t\t\t\t#if USE_DEAD_LIST_COUNT\r\n\t\t\t\t\t\tdeadCount
      = deadListCount.Load(0);\r\n\t\t\t\t\t\t#endif\t\r\n\t\t\t\t\t\tif (index >=
      asuint(nbMax) - deadCount)\r\n\t\t\t\t\t\t#if USE_GEOMETRY_SHADER\r\n\t\t\t\t\t\t\treturn;
      // cull\r\n\t\t\t\t\t\t#else\r\n\t\t\t\t\t\t\treturn o; // cull\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tAttributes
      attributes = (Attributes)0;\r\n\t\t\t\t\t\tSourceAttributes sourceAttributes
      = (SourceAttributes)0;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#if VFX_HAS_INDIRECT_DRAW\r\n\t\t\t\t\t\tindex
      = indirectBuffer[index];\r\n\t\t\t\t\t\tattributes.size = asfloat(attributeBuffer.Load((index
      * 0x1 + 0x0) << 2));\n\t\t\t\t\t\tattributes.position = asfloat(attributeBuffer.Load3((index
      * 0x8 + 0x10000) << 2));\n\t\t\t\t\t\tattributes.color = asfloat(attributeBuffer.Load3((index
      * 0x8 + 0x10004) << 2));\n\t\t\t\t\t\tattributes.alpha = asfloat(attributeBuffer.Load((index
      * 0x8 + 0x10003) << 2));\n\t\t\t\t\t\tattributes.alive = (bool)true;\n\t\t\t\t\t\tattributes.axisX
      = float3(1, 0, 0);\n\t\t\t\t\t\tattributes.axisY = float3(0, 1, 0);\n\t\t\t\t\t\tattributes.axisZ
      = float3(0, 0, 1);\n\t\t\t\t\t\tattributes.angleX = (float)0;\n\t\t\t\t\t\tattributes.angleY
      = (float)0;\n\t\t\t\t\t\tattributes.angleZ = (float)0;\n\t\t\t\t\t\tattributes.pivotX
      = (float)0;\n\t\t\t\t\t\tattributes.pivotY = (float)0;\n\t\t\t\t\t\tattributes.pivotZ
      = (float)0;\n\t\t\t\t\t\tattributes.scaleX = (float)1;\n\t\t\t\t\t\tattributes.scaleY
      = (float)1;\n\t\t\t\t\t\tattributes.scaleZ = (float)1;\n\t\t\t\t\t\t\n\t\t\t\t\r\n\t\t\t\t\t\t#else\r\n\t\t\t\t\t\tattributes.alive
      = (bool)true;\n\t\t\t\t\t\t\n\t\t\t\t\r\n\t\t\t\t\t\t#if !HAS_STRIPS\r\n\t\t\t\t\t\tif
      (!attributes.alive)\r\n\t\t\t\t\t\t\treturn o;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tattributes.size
      = asfloat(attributeBuffer.Load((index * 0x1 + 0x0) << 2));\n\t\t\t\t\t\tattributes.position
      = asfloat(attributeBuffer.Load3((index * 0x8 + 0x10000) << 2));\n\t\t\t\t\t\tattributes.color
      = asfloat(attributeBuffer.Load3((index * 0x8 + 0x10004) << 2));\n\t\t\t\t\t\tattributes.alpha
      = asfloat(attributeBuffer.Load((index * 0x8 + 0x10003) << 2));\n\t\t\t\t\t\tattributes.axisX
      = float3(1, 0, 0);\n\t\t\t\t\t\tattributes.axisY = float3(0, 1, 0);\n\t\t\t\t\t\tattributes.axisZ
      = float3(0, 0, 1);\n\t\t\t\t\t\tattributes.angleX = (float)0;\n\t\t\t\t\t\tattributes.angleY
      = (float)0;\n\t\t\t\t\t\tattributes.angleZ = (float)0;\n\t\t\t\t\t\tattributes.pivotX
      = (float)0;\n\t\t\t\t\t\tattributes.pivotY = (float)0;\n\t\t\t\t\t\tattributes.pivotZ
      = (float)0;\n\t\t\t\t\t\tattributes.scaleX = (float)1;\n\t\t\t\t\t\tattributes.scaleY
      = (float)1;\n\t\t\t\t\t\tattributes.scaleZ = (float)1;\n\t\t\t\t\t\t\n\t\t\t\t\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//
      Initialize built-in needed attributes\r\n\t\t\t\t\t\t#if HAS_STRIPS\r\n\t\t\t\t\t\tInitStripAttributes(index,
      attributes, stripData);\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\tif
      (!attributes.alive)\r\n\t\t\t\t\treturn o;\r\n\t\t\t\t\r\n\t\t\t\to.VFX_VARYING_UV.xy
      = i.uv;\r\n\t\t\t    \r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_UV1\r\n\t\t\t   
      o.uv1 = i.uv1;\r\n\t\t\t    #endif\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_UV2\r\n\t\t\t   
      o.uv2 = i.uv2;\r\n\t\t\t    #endif\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_UV3\r\n\t\t\t   
      o.uv3 = i.uv3;\r\n\t\t\t    #endif\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_COLOR\r\n\t\t\t   
      o.vertexColor = i.vertexColor;\r\n\t\t\t    #endif\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\tfloat3
      size3 = float3(attributes.size,attributes.size,attributes.size);\r\n\t\t\t\t\t\t#if
      VFX_USE_SCALEX_CURRENT\r\n\t\t\t\t\t\tsize3.x *= attributes.scaleX;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t#if
      VFX_USE_SCALEY_CURRENT\r\n\t\t\t\t\t\tsize3.y *= attributes.scaleY;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t#if
      VFX_USE_SCALEZ_CURRENT\r\n\t\t\t\t\t\tsize3.z *= attributes.scaleZ;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tfloat3
      inputVertexPosition = i.pos;\r\n\t\t\t\tfloat4x4 elementToVFX = GetElementToVFXMatrix(\r\n\t\t\t\t\tattributes.axisX,\r\n\t\t\t\t\tattributes.axisY,\r\n\t\t\t\t\tattributes.axisZ,\r\n\t\t\t\t\tfloat3(attributes.angleX,attributes.angleY,attributes.angleZ),\r\n\t\t\t\t\tfloat3(attributes.pivotX,attributes.pivotY,attributes.pivotZ),\r\n\t\t\t\t\tsize3,\r\n\t\t\t\t\tattributes.position);\r\n\t\t\t\t\t\r\n\t\t\t\tfloat3
      vPos = mul(elementToVFX,float4(inputVertexPosition,1.0f)).xyz;\r\n\t\t\t\tfloat4
      csPos = TransformPositionVFXToClip(vPos);\r\n\t\t\t\to.VFX_VARYING_POSCS =
      csPos;\r\n\t\t\t\t\r\n\t\t\t\tfloat3 normalWS = normalize(TransformDirectionVFXToWorld(mul((float3x3)elementToVFX,
      i.normal)));\r\n\t\t\t\t#ifdef VFX_VARYING_NORMAL // TODO Should use inverse
      transpose\r\n\t\t\t\to.VFX_VARYING_NORMAL = normalWS;\r\n\t\t\t\t#endif\r\n\t\t\t\t#ifdef
      VFX_VARYING_TANGENT\r\n\t\t\t\to.VFX_VARYING_TANGENT = float4(normalize(TransformDirectionVFXToWorld(mul((float3x3)elementToVFX,i.tangent.xyz))),i.tangent.w);\r\n\t\t\t\t#endif\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\t#if
      defined(VFX_VARYING_VELOCITY_CPOS) && defined(VFX_VARYING_VELOCITY_CPOS_PREVIOUS)\r\n\t\t\t\t\t\tfloat4x4
      previousElementToVFX = (float4x4)0;\r\n\t\t\t\t\t\tpreviousElementToVFX[3]
      = float4(0,0,0,1);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tUNITY_UNROLL\r\n\t\t\t\t\t\tfor
      (int itIndexMatrixRow = 0; itIndexMatrixRow < 3; ++itIndexMatrixRow)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tUNITY_UNROLL\r\n\t\t\t\t\t\t\tfor
      (int itIndexMatrixCol = 0; itIndexMatrixCol < 4; ++itIndexMatrixCol)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tuint
      itIndexMatrix = itIndexMatrixCol * 4 + itIndexMatrixRow;\r\n\t\t\t\t\t\t\t\tuint
      read = elementToVFXBufferPrevious.Load((index * 16 + itIndexMatrix) << 2);\r\n\t\t\t\t\t\t\t\tpreviousElementToVFX[itIndexMatrixRow][itIndexMatrixCol]
      = asfloat(read);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tuint
      previousFrameIndex = elementToVFXBufferPrevious.Load((index * 16 + 15) << 2);\r\n\t\t\t\t\t\to.VFX_VARYING_VELOCITY_CPOS
      = o.VFX_VARYING_VELOCITY_CPOS_PREVIOUS = float4(0.0f, 0.0f, 0.0f, 1.0f);\r\n\t\t\t\t\t\tif
      (asuint(currentFrameIndex) - previousFrameIndex == 1u)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tfloat3
      oldvPos = mul(previousElementToVFX,float4(inputVertexPosition, 1.0f)).xyz;\r\n\t\t\t\t\t\t\to.VFX_VARYING_VELOCITY_CPOS_PREVIOUS
      = TransformPositionVFXToPreviousClip(oldvPos);\r\n\t\t\t\t\t\t\to.VFX_VARYING_VELOCITY_CPOS
      = TransformPositionVFXToNonJitteredClip(vPos);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\t#if
      VFX_USE_COLOR_CURRENT && defined(VFX_VARYING_COLOR)\r\n\t\t\t\t\t\to.VFX_VARYING_COLOR
      = attributes.color;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t#if VFX_USE_ALPHA_CURRENT
      && defined(VFX_VARYING_ALPHA) \r\n\t\t\t\t\t\to.VFX_VARYING_ALPHA = attributes.alpha;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#ifdef
      VFX_VARYING_EXPOSUREWEIGHT\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\to.VFX_VARYING_EXPOSUREWEIGHT
      = exposureWeight;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#if
      USE_SOFT_PARTICLE && defined(VFX_VARYING_INVSOFTPARTICLEFADEDISTANCE)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\to.VFX_VARYING_INVSOFTPARTICLEFADEDISTANCE
      = invSoftParticlesFadeDistance;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#if
      (USE_ALPHA_TEST || WRITE_MOTION_VECTOR_IN_FORWARD) && (!VFX_SHADERGRAPH ||
      !HAS_SHADERGRAPH_PARAM_ALPHATHRESHOLD) && defined(VFX_VARYING_ALPHATHRESHOLD)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\to.VFX_VARYING_ALPHATHRESHOLD
      = alphaThreshold;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#if
      USE_UV_SCALE_BIAS\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#if defined
      (VFX_VARYING_UV)\r\n\t\t\t\t\t\to.VFX_VARYING_UV.xy = o.VFX_VARYING_UV.xy *
      uvScale + uvBias;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#if
      defined(VFX_VARYING_POSWS)\r\n\t\t\t\t\t\to.VFX_VARYING_POSWS = TransformPositionVFXToWorld(vPos);\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\t#if
      USE_FLIPBOOK && defined(VFX_VARYING_UV)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tVFXUVData
      uvData = GetUVData(flipBookSize, invFlipBookSize, o.VFX_VARYING_UV.xy, attributes.texIndex);\r\n\t\t\t\t\t\to.VFX_VARYING_UV.xy
      = uvData.uvs.xy;\r\n\t\t\t\t\t\t#if USE_FLIPBOOK_INTERPOLATION && defined(VFX_VARYING_UV)
      && defined (VFX_VARYING_FRAMEBLEND)\r\n\t\t\t\t\t\to.VFX_VARYING_UV.zw = uvData.uvs.zw;\r\n\t\t\t\t\t\to.VFX_VARYING_FRAMEBLEND
      = uvData.blend;\r\n\t\t\t\t\t\t#if USE_FLIPBOOK_MOTIONVECTORS && defined(VFX_VARYING_MOTIONVECTORSCALE)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\to.VFX_VARYING_MOTIONVECTORSCALE
      = motionVectorScale * invFlipBookSize;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t   
      \r\n\t\t\t    \r\n\t\t\t\t\r\n\t\t\t\treturn o;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t#include
      \"Packages/com.unity.visualeffectgraph/Shaders/VFXCommonOutput.hlsl\"\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\n\t\t\t\t\r\n\t\t\t#if
      VFX_PASSDEPTH == VFX_PASSDEPTH_MOTION_VECTOR\r\n\t\t\t#define SHADERPASS SHADERPASS_MOTION_VECTORS\r\n\t\t\t#else\r\n\t\t\t#define
      SHADERPASS SHADERPASS_DEPTH_ONLY\r\n\t\t\t#endif\r\n\t\t\t#include \"Packages/com.unity.render-pipelines.high-definition/Runtime/VFXGraph/Shaders/VFXLit.hlsl\"\r\n\t\t\t\r\n\t\t\t#ifndef
      VFX_SHADERGRAPH\r\n\t\t\t\r\n\t\t\tvoid VFXGetHDRPLitData(out SurfaceData surfaceData,
      out BuiltinData builtinData, out BSDFData bsdfData, out PreLightData preLightData,
      VFX_VARYING_PS_INPUTS i, float3 normalWS, const VFXUVData uvData, uint2 tileIndex)\r\n\t\t\t{\t\r\n\t\t\t\t#if
      HDRP_MATERIAL_TYPE_TRANSLUCENT\r\n\t\t\t\t // Loads diffusion profile\r\n\t\t\t\t#else\r\n\t\t\t\tconst
      uint diffusionProfileHash = 0;\r\n\t\t\t\t#endif\r\n\t\t\t\t\r\n\t\t\t\tfloat3
      posRWS = VFXGetPositionRWS(i);\r\n\t\t\t\tfloat4 posSS = i.VFX_VARYING_POSCS;\r\n\t\t\t\tPositionInputs
      posInput = GetPositionInput(posSS.xy, _ScreenSize.zw, posSS.z, posSS.w, posRWS,
      tileIndex);\r\n\t\t\t\t\r\n\t\t\t\tfloat alpha;\r\n\t\t\t\tsurfaceData = VFXGetSurfaceData(i,normalWS,uvData,diffusionProfileHash,alpha);\t\r\n\t\t\t\tbsdfData
      = ConvertSurfaceDataToBSDFData(posSS.xy, surfaceData);\r\n\t\t\t\r\n\t\t\t\tpreLightData
      = GetPreLightData(GetWorldSpaceNormalizeViewDir(posRWS),posInput,bsdfData);\r\n\t\t\t\t\r\n\t\t\t\tpreLightData.diffuseFGD
      = 1.0f;\r\n\t\t\t    //TODO: investigate why this is needed\r\n\t\t\t    preLightData.coatPartLambdaV
      = 0;\r\n\t\t\t    preLightData.coatIblR = 0;\r\n\t\t\t    preLightData.coatIblF
      = 0;\r\n\t\t\t    \r\n\t\t\t\tbuiltinData = VFXGetBuiltinData(i,posInput,surfaceData,uvData,alpha);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvoid
      VFXGetHDRPLitData(out SurfaceData surfaceData, out BuiltinData builtinData,
      VFX_VARYING_PS_INPUTS i, float3 normalWS, const VFXUVData uvData)\r\n\t\t\t{\r\n\t\t\t\tBSDFData
      bsdfData = (BSDFData)0;\r\n\t\t\t\tPreLightData preLightData = (PreLightData)0;\r\n\t\t\t\tpreLightData.diffuseFGD
      = 1.0f;\r\n\t\t\t\tVFXGetHDRPLitData(surfaceData,builtinData,bsdfData,preLightData,i,normalWS,uvData,uint2(0,0));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t#endif\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t#include
      \"Packages/com.unity.render-pipelines.high-definition/Runtime/VFXGraph/Shaders/VFXLitPixelOutput.hlsl\"\r\n\t\t\t\r\n\t\t\t\n\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t#if
      VFX_PASSDEPTH == VFX_PASSDEPTH_SELECTION\r\n\t\t\tint _ObjectId;\r\n\t\t\tint
      _PassValue;\r\n\t\t\t#endif\r\n\t\t\t\r\n\t\t\t#pragma fragment frag\r\n\t\t\tvoid
      frag(ps_input i\r\n\t\t\t#if USE_DOUBLE_SIDED\r\n\t\t\t\t, bool frontFace :
      SV_IsFrontFace\r\n\t\t\t#endif\r\n\t\t\t\r\n\t\t\t#if VFX_PASSDEPTH == VFX_PASSDEPTH_MOTION_VECTOR\r\n\t\t\t\t,
      out float4 outMotionVector : SV_Target0\r\n\t\t\t\t#ifdef WRITE_NORMAL_BUFFER\r\n\t\t\t\t\t,
      out float4 outNormalBuffer : SV_Target1\r\n\t\t\t\t#endif\r\n\t\t\t#else\r\n\t\t\t\t#ifdef
      WRITE_NORMAL_BUFFER\r\n\t\t\t\t\t, out float4 outNormalBuffer : SV_Target0\r\n\t\t\t\t#elif
      VFX_PASSDEPTH == VFX_PASSDEPTH_SELECTION\r\n\t\t\t\t\t, out float4 outColor
      : SV_Target0\r\n\t\t\t\t#endif\r\n\t\t\t#endif\r\n\t\t\t\t)\r\n\t\t\t{\r\n\t\t\t\tUNITY_SETUP_STEREO_EYE_INDEX_POST_VERTEX(i);\r\n\t\t\t\tVFXTransformPSInputs(i);\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t#ifdef
      VFX_VARYING_NORMAL\r\n\t\t\t\t\t\t\t#if USE_DOUBLE_SIDED\r\n\t\t\t\t\t\t\tconst
      float faceMul = frontFace ? 1.0f : -1.0f;\r\n\t\t\t\t\t\t\t#else\r\n\t\t\t\t\t\t\tconst
      float faceMul = 1.0f;\r\n\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tfloat3
      normalWS = normalize(i.VFX_VARYING_NORMAL * faceMul);\r\n\t\t\t\t\t\t\tconst
      VFXUVData uvData = GetUVData(i);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t#ifdef
      VFX_VARYING_TANGENT\r\n\t\t\t\t\t\t\tfloat3 tangentWS = normalize(i.VFX_VARYING_TANGENT.xyz);\r\n\t\t\t\t\t\t\tfloat3
      bitangentWS = cross(normalWS,tangentWS) * (i.VFX_VARYING_TANGENT.w * faceMul);\r\n\t\t\t\t\t\t\tfloat3x3
      tbn = float3x3(tangentWS,bitangentWS,normalWS);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t#if
      USE_NORMAL_MAP\r\n\t\t\t\t\t\t\tfloat3 n = SampleNormalMap(VFX_SAMPLER(normalMap),uvData);\r\n\t\t\t\t\t\t\tfloat
      normalScale = 1.0f;\r\n\t\t\t\t\t\t\t#ifdef VFX_VARYING_NORMALSCALE\r\n\t\t\t\t\t\t\tnormalScale
      = i.VFX_VARYING_NORMALSCALE;\r\n\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\tnormalWS
      = normalize(lerp(normalWS,mul(n,tbn),normalScale));\r\n\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t#ifdef
      VFX_SHADERGRAPH\r\n\t\t\t        \r\n\t\t\t        \r\n\t\t\t\t\r\n\t\t\t       
      float alpha = OUTSG.;\r\n\t\t\t    #else\r\n\t\t\t\tfloat alpha = VFXGetFragmentColor(i).a;\r\n\t\t\t\t#if
      HDRP_USE_BASE_COLOR_MAP_ALPHA\r\n\t\t\t\t\talpha *= VFXGetTextureColor(VFX_SAMPLER(baseColorMap),i).a;\r\n\t\t\t\t#endif\r\n\t\t\t   
      #endif\r\n\t\t\t\tVFXClipFragmentColor(alpha,i);\r\n\t\t\t\t\r\n\t\t\t\t#ifdef
      WRITE_NORMAL_BUFFER\r\n\t\t\t        #ifndef VFX_SHADERGRAPH\r\n\t\t\t           
      VFXComputePixelOutputToNormalBuffer(i,normalWS,uvData,outNormalBuffer);\r\n\t\t\t       
      #else\r\n\t\t\t           #if HAS_SHADERGRAPH_PARAM_NORMAL\r\n\t\t\t              
      float3 n =  OUTSG.Normal_8;\r\n\t\t\t               normalWS = mul(n,tbn);\r\n\t\t\t          
      #endif\r\n\t\t\t           SurfaceData surface = (SurfaceData)0;\r\n\t\t\t          
      \r\n\t\t\t           surface.normalWS = normalWS;\r\n\t\t\t           \r\n\t\t\t          
      EncodeIntoNormalBuffer(ConvertSurfaceDataToNormalData(surface), i.VFX_VARYING_POSCS.xy,
      outNormalBuffer);\r\n\t\t\t        #endif\r\n\t\t\t\t#endif\r\n\t\t\t\r\n\t\t\t\t#if
      VFX_PASSDEPTH == VFX_PASSDEPTH_MOTION_VECTOR\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\tfloat2
      velocity = (i.VFX_VARYING_VELOCITY_CPOS.xy/i.VFX_VARYING_VELOCITY_CPOS.w) -
      (i.VFX_VARYING_VELOCITY_CPOS_PREVIOUS.xy/i.VFX_VARYING_VELOCITY_CPOS_PREVIOUS.w);\r\n\t\t\t\t\t\t\t#if
      UNITY_UV_STARTS_AT_TOP\r\n\t\t\t\t\t\t\t\tvelocity.y = -velocity.y;\r\n\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\tfloat4
      encodedMotionVector = 0.0f;\r\n\t\t\t\t\t\t\tVFXEncodeMotionVector(velocity
      * 0.5f, encodedMotionVector);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\toutMotionVector
      = encodedMotionVector;\r\n\t\t\t\t#elif VFX_PASSDEPTH == VFX_PASSDEPTH_SELECTION\r\n\t\t\t\t\t//
      We use depth prepass for scene selection in the editor, this code allow to
      output the outline correctly\r\n\t\t\t\t\toutColor = float4(_ObjectId, _PassValue,
      1.0, 1.0);\r\n\t\t\t\t#elif VFX_PASSDEPTH == VFX_PASSDEPTH_ACTUAL\r\n\t\t\t\t\t//void\r\n\t\t\t\t#else\r\n\t\t\t\t\t#error
      VFX_PASSDEPTH undefined\r\n\t\t\t\t#endif\r\n\t\t\t}\r\n\t\t\t\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\tENDHLSL\r\n\t\t}\r\n\t\t\n\r\n\t\t\r\n\t\tPass\r\n\t\t{\t\t\r\n\t\t\tTags
      { \"LightMode\"=\"GBuffer\" }\r\n\t\t\t\r\n\t\t\tStencil\r\n\t\t\t{\r\n\t\t\t\tWriteMask
      7\r\n\t\t\t\tRef  2\r\n\t\t\t\tComp Always\r\n\t\t\t\tPass Replace\r\n\t\t\t}\t\r\n\t\t\t\t\r\n\t\t\tHLSLPROGRAM\r\n\t\t\t#pragma
      target 4.5\r\n\t\t\t\r\n\t\t\t#pragma multi_compile _ LIGHT_LAYERS\r\n\t\t\t#pragma
      multi_compile _ DEBUG_DISPLAY\r\n\t\t\t\r\n\t\t\t#define UNITY_MATERIAL_LIT\r\n\t\t\t\r\n\t\t\t#define
      HDRP_NEEDS_UVS (HDRP_USE_BASE_COLOR_MAP || HDRP_USE_MASK_MAP || USE_NORMAL_MAP
      || HDRP_USE_EMISSIVE_MAP)\r\n\t\t\t#define HDRP_USE_EMISSIVE (HDRP_USE_EMISSIVE_MAP
      || HDRP_USE_EMISSIVE_COLOR || HDRP_USE_ADDITIONAL_EMISSIVE_COLOR)\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\n\t\t\t\r\n\t\t\t\r\n\t\t\tstruct
      ps_input\r\n\t\t\t{\r\n\t\t\t\tfloat4 pos : SV_POSITION;\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t#if
      (VFX_NEEDS_COLOR_INTERPOLATOR && HDRP_USE_BASE_COLOR) || HDRP_USE_ADDITIONAL_BASE_COLOR\r\n\t\t\t\t\t\t\tVFX_OPTIONAL_INTERPOLATION
      float4 color : COLOR0;\r\n\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t#if HDRP_MATERIAL_TYPE_SPECULAR\r\n\t\t\t\t\t\t\tVFX_OPTIONAL_INTERPOLATION
      float3 specularColor : COLOR1;\r\n\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t#if
      HDRP_USE_EMISSIVE\t\r\n\t\t\t\t\t\t\tVFX_OPTIONAL_INTERPOLATION float4 emissiveColor
      : COLOR2;\r\n\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// x:
      smoothness\r\n\t\t\t\t\t\t\t// y: metallic/thickness\r\n\t\t\t\t\t\t\t// z:
      normal scale\r\n\t\t\t\t\t\t\t// w: emissive scale\r\n\t\t\t\t\t\t\tVFX_OPTIONAL_INTERPOLATION
      float4 materialProperties : TEXCOORD0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t#if
      USE_FLIPBOOK_INTERPOLATION\r\n\t\t\t\tfloat4 uv : TEXCOORD1;\r\n\t\t\t\t#else\r\n\t\t\t\tfloat2
      uv : TEXCOORD1;\t\r\n\t\t\t\t#endif\r\n\t\t        #if VFX_SHADERGRAPH_HAS_UV1\r\n\t\t       
      float4 uv1 : COLOR2;\r\n\t\t        #endif\r\n\t\t        #if VFX_SHADERGRAPH_HAS_UV2\r\n\t\t       
      float4 uv2 : COLOR3;\r\n\t\t        #endif\r\n\t\t        #if VFX_SHADERGRAPH_HAS_UV3\r\n\t\t       
      float4 uv3 : COLOR4;\r\n\t\t        #endif\r\n\t\t        #if VFX_SHADERGRAPH_HAS_COLOR\r\n\t\t       
      float4 vertexColor : COLOR1;\r\n\t\t        #endif\r\n\t\t\t\tfloat3 normal
      : TEXCOORD2;\r\n\t\t\t\t#if USE_NORMAL_MAP || SHADERGRAPH_NEEDS_TANGENT_GBUFFER\r\n\t\t\t\tfloat4
      tangent : TEXCOORD3;\r\n\t\t\t\t#endif\r\n\t\t\t\t#if USE_SOFT_PARTICLE ||
      USE_ALPHA_TEST || USE_FLIPBOOK_INTERPOLATION\r\n\t\t\t\t// x: inverse soft
      particles fade distance\r\n\t\t\t\t// y: alpha threshold\r\n\t\t\t\t// z: frame
      blending factor\r\n\t\t\t\tnointerpolation float3 builtInInterpolants : TEXCOORD4;\r\n\t\t\t\t#endif\r\n\t\t\t\t#if
      USE_FLIPBOOK_MOTIONVECTORS\r\n\t\t\t\t// x: motion vector scale u\r\n\t\t\t\t//
      y: motion vector scale v\r\n\t\t\t\tnointerpolation float2 builtInInterpolants2
      : TEXCOORD5;\r\n\t\t\t\t#endif\r\n\t\t        \r\n\t\t#if VFX_NEEDS_POSWS_INTERPOLATOR\r\n\t\t\t\tfloat3
      posWS : TEXCOORD6;\r\n\t\t#endif\r\n\t\t\r\n\t\t        \r\n\t\t    \r\n\t\t\t\tUNITY_VERTEX_OUTPUT_STEREO\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tstruct
      ps_output\r\n\t\t\t{\r\n\t\t\t\tfloat4 color : SV_Target0;\r\n\t\t\t};\r\n\t\t\r\n\t\t\r\n\t\t\t\t\t#if
      (VFX_NEEDS_COLOR_INTERPOLATOR && HDRP_USE_BASE_COLOR) || HDRP_USE_ADDITIONAL_BASE_COLOR\r\n\t\t\t\t\t#define
      VFX_VARYING_COLOR color.rgb\r\n\t\t\t\t\t#define VFX_VARYING_ALPHA color.a\r\n\t\t\t\t\t#endif\r\n\t\t\t\t\t\r\n\t\t\t\t\t#define
      VFX_VARYING_SMOOTHNESS materialProperties.x\r\n\t\t\t\t\t\r\n\t\t\t\t\t#if
      HDRP_MATERIAL_TYPE_STANDARD\r\n\t\t\t\t\t#define VFX_VARYING_METALLIC materialProperties.y\r\n\t\t\t\t\t#elif
      HDRP_MATERIAL_TYPE_SPECULAR\r\n\t\t\t\t\t#define VFX_VARYING_SPECULAR specularColor\r\n\t\t\t\t\t#elif
      HDRP_MATERIAL_TYPE_TRANSLUCENT\r\n\t\t\t\t\t#define VFX_VARYING_THICKNESS materialProperties.y\r\n\t\t\t\t\t#endif\r\n\t\t\t\t\t\r\n\t\t\t\t\t#if
      USE_NORMAL_MAP\r\n\t\t\t\t\t#define VFX_VARYING_NORMALSCALE materialProperties.z\r\n\t\t\t\t\t#endif\r\n\t\t\t\t\t\r\n\t\t\t\t\t#if
      HDRP_USE_EMISSIVE_MAP\r\n\t\t\t\t\t#define VFX_VARYING_EMISSIVESCALE materialProperties.w\r\n\t\t\t\t\t#endif\r\n\t\t\t\t\t\r\n\t\t\t\t\t#if
      HDRP_USE_EMISSIVE_COLOR || HDRP_USE_ADDITIONAL_EMISSIVE_COLOR\r\n\t\t\t\t\t#define
      VFX_VARYING_EMISSIVE emissiveColor.rgb\r\n\t\t\t\t\t#endif\r\n\t\t\t\t\t\r\n\t\t\t\t\t#if
      USE_EXPOSURE_WEIGHT\r\n\t\t\t\t\t#define VFX_VARYING_EXPOSUREWEIGHT emissiveColor.a\r\n\t\t\t\t\t#endif\r\n\t\t\t\t\t\r\n\t\t\t\r\n\t\t#define
      VFX_VARYING_PS_INPUTS ps_input\r\n\t\t#define VFX_VARYING_POSCS pos\r\n\t\t#define
      VFX_VARYING_UV uv\r\n\t\t#define VFX_VARYING_INVSOFTPARTICLEFADEDISTANCE builtInInterpolants.x\r\n\t\t#define
      VFX_VARYING_ALPHATHRESHOLD builtInInterpolants.y\r\n\t\t#define VFX_VARYING_FRAMEBLEND
      builtInInterpolants.z\r\n\t\t#define VFX_VARYING_MOTIONVECTORSCALE builtInInterpolants2.xy\r\n\t\t#define
      VFX_VARYING_NORMAL normal\r\n\t\t\r\n\t\t#if USE_NORMAL_MAP || SHADERGRAPH_NEEDS_TANGENT_GBUFFER\r\n\t\t#define
      VFX_VARYING_TANGENT tangent\r\n\t\t#endif\r\n\t\t#if VFX_NEEDS_POSWS_INTERPOLATOR\r\n\t\t#define
      VFX_VARYING_POSWS posWS\r\n\t\t#endif\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\t#if
      !(defined(VFX_VARYING_PS_INPUTS) && defined(VFX_VARYING_POSCS))\r\n\t\t\t#error
      VFX_VARYING_PS_INPUTS, VFX_VARYING_POSCS and VFX_VARYING_UV must be defined.\r\n\t\t\t#endif\r\n\t\t\t\r\n\t\t\t#include
      \"Packages/com.unity.render-pipelines.high-definition/Runtime/VFXGraph/Shaders/VFXCommon.hlsl\"\n\t\t\t#include
      \"Packages/com.unity.visualeffectgraph/Shaders/VFXCommon.hlsl\"\n\t\t\t\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tstruct
      vs_input\r\n\t\t\t{\r\n\t\t\t\tfloat3 pos : POSITION;\r\n\t\t\t\tfloat2 uv
      : TEXCOORD0;\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_UV1\r\n\t\t\t    float4 uv1
      : TEXCOORD1;\r\n\t\t\t    #endif\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_UV2\r\n\t\t\t   
      float4 uv2 : TEXCOORD2;\r\n\t\t\t    #endif\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_UV3\r\n\t\t\t   
      float4 uv3 : TEXCOORD3;\r\n\t\t\t    #endif\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_COLOR\r\n\t\t\t   
      float4 vertexColor : COLOR;\r\n\t\t\t    #endif\r\n\t\t\t\tfloat3 normal :
      NORMAL;\r\n\t\t\t\t#if defined(VFX_VARYING_TANGENT) || SHADERGRAPH_HAS_NORMAL\r\n\t\t\t\tfloat4
      tangent : TANGENT;\r\n\t\t\t\t#endif\r\n\t\t\t\tVFX_DECLARE_INSTANCE_ID\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t#pragma
      vertex vert\r\n\t\t\tVFX_VARYING_PS_INPUTS vert(vs_input i)\r\n\t\t\t{\r\n\t\t\t   
      VFX_VARYING_PS_INPUTS o = (VFX_VARYING_PS_INPUTS)0;\r\n\t\t\t\r\n\t\t\t\tUNITY_SETUP_INSTANCE_ID(i);\r\n\t\t\t\tUNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(o);\r\n\t\t\t\r\n\t\t\t\tuint
      index = VFX_GET_INSTANCE_ID(i);\t\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\tuint
      deadCount = 0;\r\n\t\t\t\t\t\t#if USE_DEAD_LIST_COUNT\r\n\t\t\t\t\t\tdeadCount
      = deadListCount.Load(0);\r\n\t\t\t\t\t\t#endif\t\r\n\t\t\t\t\t\tif (index >=
      asuint(nbMax) - deadCount)\r\n\t\t\t\t\t\t#if USE_GEOMETRY_SHADER\r\n\t\t\t\t\t\t\treturn;
      // cull\r\n\t\t\t\t\t\t#else\r\n\t\t\t\t\t\t\treturn o; // cull\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tAttributes
      attributes = (Attributes)0;\r\n\t\t\t\t\t\tSourceAttributes sourceAttributes
      = (SourceAttributes)0;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#if VFX_HAS_INDIRECT_DRAW\r\n\t\t\t\t\t\tindex
      = indirectBuffer[index];\r\n\t\t\t\t\t\tattributes.size = asfloat(attributeBuffer.Load((index
      * 0x1 + 0x0) << 2));\n\t\t\t\t\t\tattributes.position = asfloat(attributeBuffer.Load3((index
      * 0x8 + 0x10000) << 2));\n\t\t\t\t\t\tattributes.color = asfloat(attributeBuffer.Load3((index
      * 0x8 + 0x10004) << 2));\n\t\t\t\t\t\tattributes.alpha = asfloat(attributeBuffer.Load((index
      * 0x8 + 0x10003) << 2));\n\t\t\t\t\t\tattributes.alive = (bool)true;\n\t\t\t\t\t\tattributes.axisX
      = float3(1, 0, 0);\n\t\t\t\t\t\tattributes.axisY = float3(0, 1, 0);\n\t\t\t\t\t\tattributes.axisZ
      = float3(0, 0, 1);\n\t\t\t\t\t\tattributes.angleX = (float)0;\n\t\t\t\t\t\tattributes.angleY
      = (float)0;\n\t\t\t\t\t\tattributes.angleZ = (float)0;\n\t\t\t\t\t\tattributes.pivotX
      = (float)0;\n\t\t\t\t\t\tattributes.pivotY = (float)0;\n\t\t\t\t\t\tattributes.pivotZ
      = (float)0;\n\t\t\t\t\t\tattributes.scaleX = (float)1;\n\t\t\t\t\t\tattributes.scaleY
      = (float)1;\n\t\t\t\t\t\tattributes.scaleZ = (float)1;\n\t\t\t\t\t\t\n\t\t\t\t\r\n\t\t\t\t\t\t#else\r\n\t\t\t\t\t\tattributes.alive
      = (bool)true;\n\t\t\t\t\t\t\n\t\t\t\t\r\n\t\t\t\t\t\t#if !HAS_STRIPS\r\n\t\t\t\t\t\tif
      (!attributes.alive)\r\n\t\t\t\t\t\t\treturn o;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tattributes.size
      = asfloat(attributeBuffer.Load((index * 0x1 + 0x0) << 2));\n\t\t\t\t\t\tattributes.position
      = asfloat(attributeBuffer.Load3((index * 0x8 + 0x10000) << 2));\n\t\t\t\t\t\tattributes.color
      = asfloat(attributeBuffer.Load3((index * 0x8 + 0x10004) << 2));\n\t\t\t\t\t\tattributes.alpha
      = asfloat(attributeBuffer.Load((index * 0x8 + 0x10003) << 2));\n\t\t\t\t\t\tattributes.axisX
      = float3(1, 0, 0);\n\t\t\t\t\t\tattributes.axisY = float3(0, 1, 0);\n\t\t\t\t\t\tattributes.axisZ
      = float3(0, 0, 1);\n\t\t\t\t\t\tattributes.angleX = (float)0;\n\t\t\t\t\t\tattributes.angleY
      = (float)0;\n\t\t\t\t\t\tattributes.angleZ = (float)0;\n\t\t\t\t\t\tattributes.pivotX
      = (float)0;\n\t\t\t\t\t\tattributes.pivotY = (float)0;\n\t\t\t\t\t\tattributes.pivotZ
      = (float)0;\n\t\t\t\t\t\tattributes.scaleX = (float)1;\n\t\t\t\t\t\tattributes.scaleY
      = (float)1;\n\t\t\t\t\t\tattributes.scaleZ = (float)1;\n\t\t\t\t\t\t\n\t\t\t\t\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//
      Initialize built-in needed attributes\r\n\t\t\t\t\t\t#if HAS_STRIPS\r\n\t\t\t\t\t\tInitStripAttributes(index,
      attributes, stripData);\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\tif
      (!attributes.alive)\r\n\t\t\t\t\treturn o;\r\n\t\t\t\t\r\n\t\t\t\to.VFX_VARYING_UV.xy
      = i.uv;\r\n\t\t\t    \r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_UV1\r\n\t\t\t   
      o.uv1 = i.uv1;\r\n\t\t\t    #endif\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_UV2\r\n\t\t\t   
      o.uv2 = i.uv2;\r\n\t\t\t    #endif\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_UV3\r\n\t\t\t   
      o.uv3 = i.uv3;\r\n\t\t\t    #endif\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_COLOR\r\n\t\t\t   
      o.vertexColor = i.vertexColor;\r\n\t\t\t    #endif\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\tfloat3
      size3 = float3(attributes.size,attributes.size,attributes.size);\r\n\t\t\t\t\t\t#if
      VFX_USE_SCALEX_CURRENT\r\n\t\t\t\t\t\tsize3.x *= attributes.scaleX;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t#if
      VFX_USE_SCALEY_CURRENT\r\n\t\t\t\t\t\tsize3.y *= attributes.scaleY;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t#if
      VFX_USE_SCALEZ_CURRENT\r\n\t\t\t\t\t\tsize3.z *= attributes.scaleZ;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tfloat3
      inputVertexPosition = i.pos;\r\n\t\t\t\tfloat4x4 elementToVFX = GetElementToVFXMatrix(\r\n\t\t\t\t\tattributes.axisX,\r\n\t\t\t\t\tattributes.axisY,\r\n\t\t\t\t\tattributes.axisZ,\r\n\t\t\t\t\tfloat3(attributes.angleX,attributes.angleY,attributes.angleZ),\r\n\t\t\t\t\tfloat3(attributes.pivotX,attributes.pivotY,attributes.pivotZ),\r\n\t\t\t\t\tsize3,\r\n\t\t\t\t\tattributes.position);\r\n\t\t\t\t\t\r\n\t\t\t\tfloat3
      vPos = mul(elementToVFX,float4(inputVertexPosition,1.0f)).xyz;\r\n\t\t\t\tfloat4
      csPos = TransformPositionVFXToClip(vPos);\r\n\t\t\t\to.VFX_VARYING_POSCS =
      csPos;\r\n\t\t\t\t\r\n\t\t\t\tfloat3 normalWS = normalize(TransformDirectionVFXToWorld(mul((float3x3)elementToVFX,
      i.normal)));\r\n\t\t\t\t#ifdef VFX_VARYING_NORMAL // TODO Should use inverse
      transpose\r\n\t\t\t\to.VFX_VARYING_NORMAL = normalWS;\r\n\t\t\t\t#endif\r\n\t\t\t\t#ifdef
      VFX_VARYING_TANGENT\r\n\t\t\t\to.VFX_VARYING_TANGENT = float4(normalize(TransformDirectionVFXToWorld(mul((float3x3)elementToVFX,i.tangent.xyz))),i.tangent.w);\r\n\t\t\t\t#endif\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\t#if
      defined(VFX_VARYING_VELOCITY_CPOS) && defined(VFX_VARYING_VELOCITY_CPOS_PREVIOUS)\r\n\t\t\t\t\t\tfloat4x4
      previousElementToVFX = (float4x4)0;\r\n\t\t\t\t\t\tpreviousElementToVFX[3]
      = float4(0,0,0,1);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tUNITY_UNROLL\r\n\t\t\t\t\t\tfor
      (int itIndexMatrixRow = 0; itIndexMatrixRow < 3; ++itIndexMatrixRow)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tUNITY_UNROLL\r\n\t\t\t\t\t\t\tfor
      (int itIndexMatrixCol = 0; itIndexMatrixCol < 4; ++itIndexMatrixCol)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tuint
      itIndexMatrix = itIndexMatrixCol * 4 + itIndexMatrixRow;\r\n\t\t\t\t\t\t\t\tuint
      read = elementToVFXBufferPrevious.Load((index * 16 + itIndexMatrix) << 2);\r\n\t\t\t\t\t\t\t\tpreviousElementToVFX[itIndexMatrixRow][itIndexMatrixCol]
      = asfloat(read);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tuint
      previousFrameIndex = elementToVFXBufferPrevious.Load((index * 16 + 15) << 2);\r\n\t\t\t\t\t\to.VFX_VARYING_VELOCITY_CPOS
      = o.VFX_VARYING_VELOCITY_CPOS_PREVIOUS = float4(0.0f, 0.0f, 0.0f, 1.0f);\r\n\t\t\t\t\t\tif
      (asuint(currentFrameIndex) - previousFrameIndex == 1u)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tfloat3
      oldvPos = mul(previousElementToVFX,float4(inputVertexPosition, 1.0f)).xyz;\r\n\t\t\t\t\t\t\to.VFX_VARYING_VELOCITY_CPOS_PREVIOUS
      = TransformPositionVFXToPreviousClip(oldvPos);\r\n\t\t\t\t\t\t\to.VFX_VARYING_VELOCITY_CPOS
      = TransformPositionVFXToNonJitteredClip(vPos);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\t#if
      VFX_USE_COLOR_CURRENT && defined(VFX_VARYING_COLOR)\r\n\t\t\t\t\t\to.VFX_VARYING_COLOR
      = attributes.color;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t#if VFX_USE_ALPHA_CURRENT
      && defined(VFX_VARYING_ALPHA) \r\n\t\t\t\t\t\to.VFX_VARYING_ALPHA = attributes.alpha;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#ifdef
      VFX_VARYING_EXPOSUREWEIGHT\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\to.VFX_VARYING_EXPOSUREWEIGHT
      = exposureWeight;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#if
      USE_SOFT_PARTICLE && defined(VFX_VARYING_INVSOFTPARTICLEFADEDISTANCE)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\to.VFX_VARYING_INVSOFTPARTICLEFADEDISTANCE
      = invSoftParticlesFadeDistance;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#if
      (USE_ALPHA_TEST || WRITE_MOTION_VECTOR_IN_FORWARD) && (!VFX_SHADERGRAPH ||
      !HAS_SHADERGRAPH_PARAM_ALPHATHRESHOLD) && defined(VFX_VARYING_ALPHATHRESHOLD)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\to.VFX_VARYING_ALPHATHRESHOLD
      = alphaThreshold;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#if
      USE_UV_SCALE_BIAS\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#if defined
      (VFX_VARYING_UV)\r\n\t\t\t\t\t\to.VFX_VARYING_UV.xy = o.VFX_VARYING_UV.xy *
      uvScale + uvBias;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#if
      defined(VFX_VARYING_POSWS)\r\n\t\t\t\t\t\to.VFX_VARYING_POSWS = TransformPositionVFXToWorld(vPos);\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\t#if
      USE_FLIPBOOK && defined(VFX_VARYING_UV)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tVFXUVData
      uvData = GetUVData(flipBookSize, invFlipBookSize, o.VFX_VARYING_UV.xy, attributes.texIndex);\r\n\t\t\t\t\t\to.VFX_VARYING_UV.xy
      = uvData.uvs.xy;\r\n\t\t\t\t\t\t#if USE_FLIPBOOK_INTERPOLATION && defined(VFX_VARYING_UV)
      && defined (VFX_VARYING_FRAMEBLEND)\r\n\t\t\t\t\t\to.VFX_VARYING_UV.zw = uvData.uvs.zw;\r\n\t\t\t\t\t\to.VFX_VARYING_FRAMEBLEND
      = uvData.blend;\r\n\t\t\t\t\t\t#if USE_FLIPBOOK_MOTIONVECTORS && defined(VFX_VARYING_MOTIONVECTORSCALE)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\to.VFX_VARYING_MOTIONVECTORSCALE
      = motionVectorScale * invFlipBookSize;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t#ifndef
      VFX_SHADERGRAPH\r\n\t\t\t\t\t\t\t\t\t#ifdef VFX_VARYING_SMOOTHNESS\r\n\t\t\t\t\t\t\t\t\tfloat
      smoothness = (float)0;\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t    \n\t\t\t\t\t\t\t\t\t   
      smoothness = (float)0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\to.VFX_VARYING_SMOOTHNESS
      = smoothness;\r\n\t\t\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\t\t#if HDRP_MATERIAL_TYPE_STANDARD\r\n\t\t\t\t\t\t\t\t\t#ifdef
      VFX_VARYING_METALLIC\r\n\t\t\t\t\t\t\t\t\tfloat metallic = (float)0;\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t   
      \n\t\t\t\t\t\t\t\t\t    metallic = (float)0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\to.VFX_VARYING_METALLIC
      = metallic;\r\n\t\t\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\t\t#elif HDRP_MATERIAL_TYPE_SPECULAR\r\n\t\t\t\t\t\t\t\t\t#ifdef
      VFX_VARYING_SPECULAR\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\to.VFX_VARYING_SPECULAR
      = specularColor;\r\n\t\t\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\t\t#elif HDRP_MATERIAL_TYPE_TRANSLUCENT\r\n\t\t\t\t\t\t\t\t\t#ifdef
      VFX_VARYING_THICKNESS\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\to.VFX_VARYING_THICKNESS
      = thickness;\r\n\t\t\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\t\t#if
      USE_NORMAL_MAP\r\n\t\t\t\t\t\t\t\t\t#ifdef VFX_VARYING_NORMALSCALE\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\to.VFX_VARYING_NORMALSCALE
      = normalScale;\r\n\t\t\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\t\t#if
      HDRP_USE_EMISSIVE_MAP\r\n\t\t\t\t\t\t\t\t\t#ifdef VFX_VARYING_EMISSIVESCALE\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\to.VFX_VARYING_EMISSIVESCALE
      = emissiveScale;\r\n\t\t\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\t\t#ifdef
      VFX_VARYING_EMISSIVE\r\n\t\t\t\t\t\t\t\t\t#if HDRP_USE_EMISSIVE_COLOR\r\n\t\t\t\t\t\t\t\t\to.VFX_VARYING_EMISSIVE
      = attributes.color;\r\n\t\t\t\t\t\t\t\t\t#elif HDRP_USE_ADDITIONAL_EMISSIVE_COLOR\r\n\t\t\t\t\t\t\t\t\tfloat4
      emissiveColor = (float4)0;\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t    float
      tmp_t = attributes.color[0];\n\t\t\t\t\t\t\t\t\t    float tmp_u = saturate(tmp_t);\n\t\t\t\t\t\t\t\t\t   
      float4 tmp_v = SampleGradient(uniform_b,tmp_u);\n\t\t\t\t\t\t\t\t\t    \n\t\t\t\t\t\t\t\t\t   
      emissiveColor = tmp_v;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\to.VFX_VARYING_EMISSIVE
      = emissiveColor;\r\n\t\t\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\t\t#if
      HDRP_USE_ADDITIONAL_BASE_COLOR\r\n\t\t\t\t\t\t\t\t\t#ifdef VFX_VARYING_COLOR\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\to.VFX_VARYING_COLOR
      = baseColor;\r\n\t\t\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t   
      \r\n\t\t\t    \r\n\t\t\t\t\r\n\t\t\t\treturn o;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t#include
      \"Packages/com.unity.visualeffectgraph/Shaders/VFXCommonOutput.hlsl\"\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\n\t\t\t\r\n\t\t\t#define
      SHADERPASS SHADERPASS_GBUFFER\t\r\n\t\t\t#include \"Packages/com.unity.render-pipelines.high-definition/Runtime/VFXGraph/Shaders/VFXLit.hlsl\"\r\n\t\t\t\r\n\t\t\t#ifndef
      VFX_SHADERGRAPH\r\n\t\t\t\r\n\t\t\tvoid VFXGetHDRPLitData(out SurfaceData surfaceData,
      out BuiltinData builtinData, out BSDFData bsdfData, out PreLightData preLightData,
      VFX_VARYING_PS_INPUTS i, float3 normalWS, const VFXUVData uvData, uint2 tileIndex)\r\n\t\t\t{\t\r\n\t\t\t\t#if
      HDRP_MATERIAL_TYPE_TRANSLUCENT\r\n\t\t\t\t // Loads diffusion profile\r\n\t\t\t\t#else\r\n\t\t\t\tconst
      uint diffusionProfileHash = 0;\r\n\t\t\t\t#endif\r\n\t\t\t\t\r\n\t\t\t\tfloat3
      posRWS = VFXGetPositionRWS(i);\r\n\t\t\t\tfloat4 posSS = i.VFX_VARYING_POSCS;\r\n\t\t\t\tPositionInputs
      posInput = GetPositionInput(posSS.xy, _ScreenSize.zw, posSS.z, posSS.w, posRWS,
      tileIndex);\r\n\t\t\t\t\r\n\t\t\t\tfloat alpha;\r\n\t\t\t\tsurfaceData = VFXGetSurfaceData(i,normalWS,uvData,diffusionProfileHash,alpha);\t\r\n\t\t\t\tbsdfData
      = ConvertSurfaceDataToBSDFData(posSS.xy, surfaceData);\r\n\t\t\t\r\n\t\t\t\tpreLightData
      = GetPreLightData(GetWorldSpaceNormalizeViewDir(posRWS),posInput,bsdfData);\r\n\t\t\t\t\r\n\t\t\t\tpreLightData.diffuseFGD
      = 1.0f;\r\n\t\t\t    //TODO: investigate why this is needed\r\n\t\t\t    preLightData.coatPartLambdaV
      = 0;\r\n\t\t\t    preLightData.coatIblR = 0;\r\n\t\t\t    preLightData.coatIblF
      = 0;\r\n\t\t\t    \r\n\t\t\t\tbuiltinData = VFXGetBuiltinData(i,posInput,surfaceData,uvData,alpha);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvoid
      VFXGetHDRPLitData(out SurfaceData surfaceData, out BuiltinData builtinData,
      VFX_VARYING_PS_INPUTS i, float3 normalWS, const VFXUVData uvData)\r\n\t\t\t{\r\n\t\t\t\tBSDFData
      bsdfData = (BSDFData)0;\r\n\t\t\t\tPreLightData preLightData = (PreLightData)0;\r\n\t\t\t\tpreLightData.diffuseFGD
      = 1.0f;\r\n\t\t\t\tVFXGetHDRPLitData(surfaceData,builtinData,bsdfData,preLightData,i,normalWS,uvData,uint2(0,0));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t#endif\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t#include
      \"Packages/com.unity.render-pipelines.high-definition/Runtime/VFXGraph/Shaders/VFXLitPixelOutput.hlsl\"\r\n\t\t\t\r\n\t\t\t\n\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t   
      \r\n\t\t\t#pragma fragment frag\r\n\t\t\tvoid frag(ps_input i, OUTPUT_GBUFFER(outGBuffer)\r\n\t\t#if
      USE_DOUBLE_SIDED\r\n\t\t\t, bool frontFace : SV_IsFrontFace\r\n\t\t#endif\r\n\t\t\t)\r\n\t\t\t{\r\n\t\t\t\tUNITY_SETUP_STEREO_EYE_INDEX_POST_VERTEX(i);\r\n\t\t\t\tVFXTransformPSInputs(i);\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t#ifdef
      VFX_VARYING_NORMAL\r\n\t\t\t\t\t\t\t#if USE_DOUBLE_SIDED\r\n\t\t\t\t\t\t\tconst
      float faceMul = frontFace ? 1.0f : -1.0f;\r\n\t\t\t\t\t\t\t#else\r\n\t\t\t\t\t\t\tconst
      float faceMul = 1.0f;\r\n\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tfloat3
      normalWS = normalize(i.VFX_VARYING_NORMAL * faceMul);\r\n\t\t\t\t\t\t\tconst
      VFXUVData uvData = GetUVData(i);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t#ifdef
      VFX_VARYING_TANGENT\r\n\t\t\t\t\t\t\tfloat3 tangentWS = normalize(i.VFX_VARYING_TANGENT.xyz);\r\n\t\t\t\t\t\t\tfloat3
      bitangentWS = cross(normalWS,tangentWS) * (i.VFX_VARYING_TANGENT.w * faceMul);\r\n\t\t\t\t\t\t\tfloat3x3
      tbn = float3x3(tangentWS,bitangentWS,normalWS);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t#if
      USE_NORMAL_MAP\r\n\t\t\t\t\t\t\tfloat3 n = SampleNormalMap(VFX_SAMPLER(normalMap),uvData);\r\n\t\t\t\t\t\t\tfloat
      normalScale = 1.0f;\r\n\t\t\t\t\t\t\t#ifdef VFX_VARYING_NORMALSCALE\r\n\t\t\t\t\t\t\tnormalScale
      = i.VFX_VARYING_NORMALSCALE;\r\n\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\tnormalWS
      = normalize(lerp(normalWS,mul(n,tbn),normalScale));\r\n\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\r\n\t\t       
      \r\n\t\t        #ifdef VFX_SHADERGRAPH\r\n\t\t            \r\n\t\t           
      \r\n\t\t\r\n\t\t            SurfaceData surface;\r\n\t\t            BuiltinData
      builtin;\r\n\t\t            surface = (SurfaceData)0;\r\n\t\t            builtin
      = (BuiltinData)0;\r\n\t\t            \r\n\t\t            surface.materialFeatures
      = MATERIALFEATUREFLAGS_LIT_STANDARD;\r\n\t\t            surface.specularOcclusion
      = 1.0f;\r\n\t\t            surface.ambientOcclusion = 1.0f;\r\n\t\t           
      surface.subsurfaceMask = 1.0f;\r\n\t\t            \r\n\t\t            #if HAS_SHADERGRAPH_PARAM_ALPHA\r\n\t\t               
      builtin.opacity = OUTSG.;\r\n\t\t                VFXClipFragmentColor(builtin.opacity,i);\r\n\t\t           
      #endif\r\n\t\t            \r\n\t\t            #if HAS_SHADERGRAPH_PARAM_SMOOTHNESS\r\n\t\t               
      surface.perceptualSmoothness = OUTSG.;\r\n\t\t            #endif\r\n\t\t           
      #if HAS_SHADERGRAPH_PARAM_METALLIC\r\n\t\t                surface.metallic
      = OUTSG.;\r\n\t\t            #endif\r\n\t\t            #if HAS_SHADERGRAPH_PARAM_BASECOLOR\r\n\t\t               
      surface.baseColor = OUTSG.;\r\n\t\t            #endif\r\n\t\t            \r\n\t\t           
      #if HAS_SHADERGRAPH_PARAM_NORMAL\r\n\t\t                float3 n =  OUTSG.;\r\n\t\t               
      normalWS = mul(n,tbn);\r\n\t\t            #endif\r\n\t\t            \r\n\t\t           
      surface.normalWS = normalWS;\r\n\t\t            \r\n\t\t            #if HAS_SHADERGRAPH_PARAM_EMISSIVE\r\n\t\t               
      builtin.emissiveColor = OUTSG.;\r\n\t\t            #endif\n\t\t\r\n\t\t           
      \r\n\t\t            VFXSetupBuiltin(builtin,surface,builtin.emissiveColor,
      i);\r\n\t\t            ENCODE_INTO_GBUFFER(surface, builtin, i.VFX_VARYING_POSCS.xy,
      outGBuffer);\r\n\t\t        #else\r\n\t\t            VFXComputePixelOutputToGBuffer(i,normalWS,uvData,outGBuffer);\r\n\t\t       
      #endif\r\n\t\t\t}\r\n\t\t\tENDHLSL\r\n\t\t}\r\n\t\t\n\r\n\t\tPass\r\n\t\t{\t\t\r\n\t\t\tTags
      { \"LightMode\"=\"Forward\"}\r\n\t\t\t\t\t\r\n\t\t\tHLSLPROGRAM\r\n\t\t\t#pragma
      target 4.5\r\n\t\t\t\r\n\t\t\t#define UNITY_MATERIAL_LIT\r\n\t\t\t#define LIGHTLOOP_TILE_PASS\r\n\t\t\t#define
      _ENABLE_FOG_ON_TRANSPARENT\n\t\t\t#define _DISABLE_DECALS\n\t\t\t\n\r\n\t\t\t#pragma
      multi_compile USE_FPTL_LIGHTLIST USE_CLUSTERED_LIGHTLIST\r\n\t\t\t#pragma multi_compile
      SHADOW_LOW SHADOW_MEDIUM SHADOW_HIGH\r\n\t\t\t#pragma multi_compile _ DEBUG_DISPLAY\r\n\t\t\t//#pragma
      enable_d3d11_debug_symbols\r\n\t\t\t\r\n\t\t\t#define HDRP_NEEDS_UVS (HDRP_USE_BASE_COLOR_MAP
      || HDRP_USE_MASK_MAP || USE_NORMAL_MAP || HDRP_USE_EMISSIVE_MAP)\r\n\t\t\t#define
      HDRP_USE_EMISSIVE (HDRP_USE_EMISSIVE_MAP || HDRP_USE_EMISSIVE_COLOR || HDRP_USE_ADDITIONAL_EMISSIVE_COLOR)\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\n\t\t\t\r\n\t\t\t\r\n\t\t\tstruct
      ps_input\r\n\t\t\t{\r\n\t\t\t\tfloat4 pos : SV_POSITION;\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t#if
      (VFX_NEEDS_COLOR_INTERPOLATOR && HDRP_USE_BASE_COLOR) || HDRP_USE_ADDITIONAL_BASE_COLOR\r\n\t\t\t\t\t\t\tVFX_OPTIONAL_INTERPOLATION
      float4 color : COLOR0;\r\n\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t#if HDRP_MATERIAL_TYPE_SPECULAR\r\n\t\t\t\t\t\t\tVFX_OPTIONAL_INTERPOLATION
      float3 specularColor : COLOR1;\r\n\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t#if
      HDRP_USE_EMISSIVE\t\r\n\t\t\t\t\t\t\tVFX_OPTIONAL_INTERPOLATION float4 emissiveColor
      : COLOR2;\r\n\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// x:
      smoothness\r\n\t\t\t\t\t\t\t// y: metallic/thickness\r\n\t\t\t\t\t\t\t// z:
      normal scale\r\n\t\t\t\t\t\t\t// w: emissive scale\r\n\t\t\t\t\t\t\tVFX_OPTIONAL_INTERPOLATION
      float4 materialProperties : TEXCOORD0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t#if
      USE_FLIPBOOK_INTERPOLATION\r\n\t\t\t\tfloat4 uv : TEXCOORD1;\r\n\t\t\t\t#else\r\n\t\t\t\tfloat2
      uv : TEXCOORD1;\t\r\n\t\t\t\t#endif\r\n\t\t        #if VFX_SHADERGRAPH_HAS_UV1\r\n\t\t       
      float4 uv1 : COLOR2;\r\n\t\t        #endif\r\n\t\t        #if VFX_SHADERGRAPH_HAS_UV2\r\n\t\t       
      float4 uv2 : COLOR3;\r\n\t\t        #endif\r\n\t\t        #if VFX_SHADERGRAPH_HAS_UV3\r\n\t\t       
      float4 uv3 : COLOR4;\r\n\t\t        #endif\r\n\t\t        #if VFX_SHADERGRAPH_HAS_COLOR\r\n\t\t       
      float4 vertexColor : COLOR1;\r\n\t\t        #endif\r\n\t\t\t\tfloat3 normal
      : TEXCOORD2;\r\n\t\t\t\t#if USE_NORMAL_MAP || SHADERGRAPH_NEEDS_TANGENT_FORWARD\r\n\t\t\t\tfloat4
      tangent : TEXCOORD3;\r\n\t\t\t\t#endif\r\n\t\t\t\t#if USE_SOFT_PARTICLE ||
      USE_ALPHA_TEST || USE_FLIPBOOK_INTERPOLATION || WRITE_MOTION_VECTOR_IN_FORWARD\r\n\t\t\t\t//
      x: inverse soft particles fade distance\r\n\t\t\t\t// y: alpha threshold\r\n\t\t\t\t//
      z: frame blending factor\r\n\t\t\t\tnointerpolation float3 builtInInterpolants
      : TEXCOORD4;\r\n\t\t\t\t#endif\r\n\t\t\t\t\r\n\t\t\t\t#if USE_FLIPBOOK_MOTIONVECTORS\r\n\t\t\t\t//
      x: motion vector scale u\r\n\t\t\t\t// y: motion vector scale v\r\n\t\t\t\tnointerpolation
      float2 builtInInterpolants2 : TEXCOORD5;\r\n\t\t\t\t#endif\r\n\t\t\t\t\r\n\t\t\t\t#if
      WRITE_MOTION_VECTOR_IN_FORWARD\r\n\t\t\t\tfloat4 cPosPrevious : TEXCOORD6;\r\n\t\t\t\tfloat4
      cPosNonJiterred : TEXCOORD7;\r\n\t\t\t\t#endif\r\n\t\t\r\n\t\t\t\tfloat3 posWS
      : TEXCOORD8; // Needed for fog\r\n\t\t        \r\n\t\t        \r\n\t\t\t\t\r\n\t\t\t\tUNITY_VERTEX_OUTPUT_STEREO\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tstruct
      ps_output\r\n\t\t\t{\r\n\t\t\t\tfloat4 color : SV_Target0;\r\n\t\t\t};\r\n\t\t\r\n\t\t\r\n\t\t\t\t\t#if
      (VFX_NEEDS_COLOR_INTERPOLATOR && HDRP_USE_BASE_COLOR) || HDRP_USE_ADDITIONAL_BASE_COLOR\r\n\t\t\t\t\t#define
      VFX_VARYING_COLOR color.rgb\r\n\t\t\t\t\t#define VFX_VARYING_ALPHA color.a\r\n\t\t\t\t\t#endif\r\n\t\t\t\t\t\r\n\t\t\t\t\t#define
      VFX_VARYING_SMOOTHNESS materialProperties.x\r\n\t\t\t\t\t\r\n\t\t\t\t\t#if
      HDRP_MATERIAL_TYPE_STANDARD\r\n\t\t\t\t\t#define VFX_VARYING_METALLIC materialProperties.y\r\n\t\t\t\t\t#elif
      HDRP_MATERIAL_TYPE_SPECULAR\r\n\t\t\t\t\t#define VFX_VARYING_SPECULAR specularColor\r\n\t\t\t\t\t#elif
      HDRP_MATERIAL_TYPE_TRANSLUCENT\r\n\t\t\t\t\t#define VFX_VARYING_THICKNESS materialProperties.y\r\n\t\t\t\t\t#endif\r\n\t\t\t\t\t\r\n\t\t\t\t\t#if
      USE_NORMAL_MAP\r\n\t\t\t\t\t#define VFX_VARYING_NORMALSCALE materialProperties.z\r\n\t\t\t\t\t#endif\r\n\t\t\t\t\t\r\n\t\t\t\t\t#if
      HDRP_USE_EMISSIVE_MAP\r\n\t\t\t\t\t#define VFX_VARYING_EMISSIVESCALE materialProperties.w\r\n\t\t\t\t\t#endif\r\n\t\t\t\t\t\r\n\t\t\t\t\t#if
      HDRP_USE_EMISSIVE_COLOR || HDRP_USE_ADDITIONAL_EMISSIVE_COLOR\r\n\t\t\t\t\t#define
      VFX_VARYING_EMISSIVE emissiveColor.rgb\r\n\t\t\t\t\t#endif\r\n\t\t\t\t\t\r\n\t\t\t\t\t#if
      USE_EXPOSURE_WEIGHT\r\n\t\t\t\t\t#define VFX_VARYING_EXPOSUREWEIGHT emissiveColor.a\r\n\t\t\t\t\t#endif\r\n\t\t\t\t\t\r\n\t\t\r\n\t\t#define
      VFX_VARYING_PS_INPUTS ps_input\r\n\t\t#define VFX_VARYING_POSCS pos\r\n\t\t#define
      VFX_VARYING_UV uv\r\n\t\t#define VFX_VARYING_INVSOFTPARTICLEFADEDISTANCE builtInInterpolants.x\r\n\t\t#define
      VFX_VARYING_ALPHATHRESHOLD builtInInterpolants.y\r\n\t\t#define VFX_VARYING_FRAMEBLEND
      builtInInterpolants.z\r\n\t\t#define VFX_VARYING_MOTIONVECTORSCALE builtInInterpolants2.xy\r\n\t\t#define
      VFX_VARYING_NORMAL normal\r\n\t\t#if USE_NORMAL_MAP || SHADERGRAPH_NEEDS_TANGENT_FORWARD\r\n\t\t#define
      VFX_VARYING_TANGENT tangent\r\n\t\t#endif\r\n\t\t#define VFX_VARYING_POSWS
      posWS\r\n\t\t\r\n\t\t#if WRITE_MOTION_VECTOR_IN_FORWARD\r\n\t\t#define VFX_VARYING_VELOCITY_CPOS
      cPosNonJiterred\r\n\t\t#define VFX_VARYING_VELOCITY_CPOS_PREVIOUS cPosPrevious\r\n\t\t#endif\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\t#if
      !(defined(VFX_VARYING_PS_INPUTS) && defined(VFX_VARYING_POSCS))\r\n\t\t\t#error
      VFX_VARYING_PS_INPUTS, VFX_VARYING_POSCS and VFX_VARYING_UV must be defined.\r\n\t\t\t#endif\r\n\t\t\t\r\n\t\t\t#include
      \"Packages/com.unity.render-pipelines.high-definition/Runtime/VFXGraph/Shaders/VFXCommon.hlsl\"\n\t\t\t#include
      \"Packages/com.unity.visualeffectgraph/Shaders/VFXCommon.hlsl\"\n\t\t\t\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tstruct
      vs_input\r\n\t\t\t{\r\n\t\t\t\tfloat3 pos : POSITION;\r\n\t\t\t\tfloat2 uv
      : TEXCOORD0;\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_UV1\r\n\t\t\t    float4 uv1
      : TEXCOORD1;\r\n\t\t\t    #endif\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_UV2\r\n\t\t\t   
      float4 uv2 : TEXCOORD2;\r\n\t\t\t    #endif\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_UV3\r\n\t\t\t   
      float4 uv3 : TEXCOORD3;\r\n\t\t\t    #endif\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_COLOR\r\n\t\t\t   
      float4 vertexColor : COLOR;\r\n\t\t\t    #endif\r\n\t\t\t\tfloat3 normal :
      NORMAL;\r\n\t\t\t\t#if defined(VFX_VARYING_TANGENT) || SHADERGRAPH_HAS_NORMAL\r\n\t\t\t\tfloat4
      tangent : TANGENT;\r\n\t\t\t\t#endif\r\n\t\t\t\tVFX_DECLARE_INSTANCE_ID\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t#pragma
      vertex vert\r\n\t\t\tVFX_VARYING_PS_INPUTS vert(vs_input i)\r\n\t\t\t{\r\n\t\t\t   
      VFX_VARYING_PS_INPUTS o = (VFX_VARYING_PS_INPUTS)0;\r\n\t\t\t\r\n\t\t\t\tUNITY_SETUP_INSTANCE_ID(i);\r\n\t\t\t\tUNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(o);\r\n\t\t\t\r\n\t\t\t\tuint
      index = VFX_GET_INSTANCE_ID(i);\t\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\tuint
      deadCount = 0;\r\n\t\t\t\t\t\t#if USE_DEAD_LIST_COUNT\r\n\t\t\t\t\t\tdeadCount
      = deadListCount.Load(0);\r\n\t\t\t\t\t\t#endif\t\r\n\t\t\t\t\t\tif (index >=
      asuint(nbMax) - deadCount)\r\n\t\t\t\t\t\t#if USE_GEOMETRY_SHADER\r\n\t\t\t\t\t\t\treturn;
      // cull\r\n\t\t\t\t\t\t#else\r\n\t\t\t\t\t\t\treturn o; // cull\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tAttributes
      attributes = (Attributes)0;\r\n\t\t\t\t\t\tSourceAttributes sourceAttributes
      = (SourceAttributes)0;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#if VFX_HAS_INDIRECT_DRAW\r\n\t\t\t\t\t\tindex
      = indirectBuffer[index];\r\n\t\t\t\t\t\tattributes.size = asfloat(attributeBuffer.Load((index
      * 0x1 + 0x0) << 2));\n\t\t\t\t\t\tattributes.position = asfloat(attributeBuffer.Load3((index
      * 0x8 + 0x10000) << 2));\n\t\t\t\t\t\tattributes.color = asfloat(attributeBuffer.Load3((index
      * 0x8 + 0x10004) << 2));\n\t\t\t\t\t\tattributes.alpha = asfloat(attributeBuffer.Load((index
      * 0x8 + 0x10003) << 2));\n\t\t\t\t\t\tattributes.alive = (bool)true;\n\t\t\t\t\t\tattributes.axisX
      = float3(1, 0, 0);\n\t\t\t\t\t\tattributes.axisY = float3(0, 1, 0);\n\t\t\t\t\t\tattributes.axisZ
      = float3(0, 0, 1);\n\t\t\t\t\t\tattributes.angleX = (float)0;\n\t\t\t\t\t\tattributes.angleY
      = (float)0;\n\t\t\t\t\t\tattributes.angleZ = (float)0;\n\t\t\t\t\t\tattributes.pivotX
      = (float)0;\n\t\t\t\t\t\tattributes.pivotY = (float)0;\n\t\t\t\t\t\tattributes.pivotZ
      = (float)0;\n\t\t\t\t\t\tattributes.scaleX = (float)1;\n\t\t\t\t\t\tattributes.scaleY
      = (float)1;\n\t\t\t\t\t\tattributes.scaleZ = (float)1;\n\t\t\t\t\t\t\n\t\t\t\t\r\n\t\t\t\t\t\t#else\r\n\t\t\t\t\t\tattributes.alive
      = (bool)true;\n\t\t\t\t\t\t\n\t\t\t\t\r\n\t\t\t\t\t\t#if !HAS_STRIPS\r\n\t\t\t\t\t\tif
      (!attributes.alive)\r\n\t\t\t\t\t\t\treturn o;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tattributes.size
      = asfloat(attributeBuffer.Load((index * 0x1 + 0x0) << 2));\n\t\t\t\t\t\tattributes.position
      = asfloat(attributeBuffer.Load3((index * 0x8 + 0x10000) << 2));\n\t\t\t\t\t\tattributes.color
      = asfloat(attributeBuffer.Load3((index * 0x8 + 0x10004) << 2));\n\t\t\t\t\t\tattributes.alpha
      = asfloat(attributeBuffer.Load((index * 0x8 + 0x10003) << 2));\n\t\t\t\t\t\tattributes.axisX
      = float3(1, 0, 0);\n\t\t\t\t\t\tattributes.axisY = float3(0, 1, 0);\n\t\t\t\t\t\tattributes.axisZ
      = float3(0, 0, 1);\n\t\t\t\t\t\tattributes.angleX = (float)0;\n\t\t\t\t\t\tattributes.angleY
      = (float)0;\n\t\t\t\t\t\tattributes.angleZ = (float)0;\n\t\t\t\t\t\tattributes.pivotX
      = (float)0;\n\t\t\t\t\t\tattributes.pivotY = (float)0;\n\t\t\t\t\t\tattributes.pivotZ
      = (float)0;\n\t\t\t\t\t\tattributes.scaleX = (float)1;\n\t\t\t\t\t\tattributes.scaleY
      = (float)1;\n\t\t\t\t\t\tattributes.scaleZ = (float)1;\n\t\t\t\t\t\t\n\t\t\t\t\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//
      Initialize built-in needed attributes\r\n\t\t\t\t\t\t#if HAS_STRIPS\r\n\t\t\t\t\t\tInitStripAttributes(index,
      attributes, stripData);\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\tif
      (!attributes.alive)\r\n\t\t\t\t\treturn o;\r\n\t\t\t\t\r\n\t\t\t\to.VFX_VARYING_UV.xy
      = i.uv;\r\n\t\t\t    \r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_UV1\r\n\t\t\t   
      o.uv1 = i.uv1;\r\n\t\t\t    #endif\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_UV2\r\n\t\t\t   
      o.uv2 = i.uv2;\r\n\t\t\t    #endif\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_UV3\r\n\t\t\t   
      o.uv3 = i.uv3;\r\n\t\t\t    #endif\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_COLOR\r\n\t\t\t   
      o.vertexColor = i.vertexColor;\r\n\t\t\t    #endif\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\tfloat3
      size3 = float3(attributes.size,attributes.size,attributes.size);\r\n\t\t\t\t\t\t#if
      VFX_USE_SCALEX_CURRENT\r\n\t\t\t\t\t\tsize3.x *= attributes.scaleX;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t#if
      VFX_USE_SCALEY_CURRENT\r\n\t\t\t\t\t\tsize3.y *= attributes.scaleY;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t#if
      VFX_USE_SCALEZ_CURRENT\r\n\t\t\t\t\t\tsize3.z *= attributes.scaleZ;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tfloat3
      inputVertexPosition = i.pos;\r\n\t\t\t\tfloat4x4 elementToVFX = GetElementToVFXMatrix(\r\n\t\t\t\t\tattributes.axisX,\r\n\t\t\t\t\tattributes.axisY,\r\n\t\t\t\t\tattributes.axisZ,\r\n\t\t\t\t\tfloat3(attributes.angleX,attributes.angleY,attributes.angleZ),\r\n\t\t\t\t\tfloat3(attributes.pivotX,attributes.pivotY,attributes.pivotZ),\r\n\t\t\t\t\tsize3,\r\n\t\t\t\t\tattributes.position);\r\n\t\t\t\t\t\r\n\t\t\t\tfloat3
      vPos = mul(elementToVFX,float4(inputVertexPosition,1.0f)).xyz;\r\n\t\t\t\tfloat4
      csPos = TransformPositionVFXToClip(vPos);\r\n\t\t\t\to.VFX_VARYING_POSCS =
      csPos;\r\n\t\t\t\t\r\n\t\t\t\tfloat3 normalWS = normalize(TransformDirectionVFXToWorld(mul((float3x3)elementToVFX,
      i.normal)));\r\n\t\t\t\t#ifdef VFX_VARYING_NORMAL // TODO Should use inverse
      transpose\r\n\t\t\t\to.VFX_VARYING_NORMAL = normalWS;\r\n\t\t\t\t#endif\r\n\t\t\t\t#ifdef
      VFX_VARYING_TANGENT\r\n\t\t\t\to.VFX_VARYING_TANGENT = float4(normalize(TransformDirectionVFXToWorld(mul((float3x3)elementToVFX,i.tangent.xyz))),i.tangent.w);\r\n\t\t\t\t#endif\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\t#if
      defined(VFX_VARYING_VELOCITY_CPOS) && defined(VFX_VARYING_VELOCITY_CPOS_PREVIOUS)\r\n\t\t\t\t\t\tfloat4x4
      previousElementToVFX = (float4x4)0;\r\n\t\t\t\t\t\tpreviousElementToVFX[3]
      = float4(0,0,0,1);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tUNITY_UNROLL\r\n\t\t\t\t\t\tfor
      (int itIndexMatrixRow = 0; itIndexMatrixRow < 3; ++itIndexMatrixRow)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tUNITY_UNROLL\r\n\t\t\t\t\t\t\tfor
      (int itIndexMatrixCol = 0; itIndexMatrixCol < 4; ++itIndexMatrixCol)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tuint
      itIndexMatrix = itIndexMatrixCol * 4 + itIndexMatrixRow;\r\n\t\t\t\t\t\t\t\tuint
      read = elementToVFXBufferPrevious.Load((index * 16 + itIndexMatrix) << 2);\r\n\t\t\t\t\t\t\t\tpreviousElementToVFX[itIndexMatrixRow][itIndexMatrixCol]
      = asfloat(read);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tuint
      previousFrameIndex = elementToVFXBufferPrevious.Load((index * 16 + 15) << 2);\r\n\t\t\t\t\t\to.VFX_VARYING_VELOCITY_CPOS
      = o.VFX_VARYING_VELOCITY_CPOS_PREVIOUS = float4(0.0f, 0.0f, 0.0f, 1.0f);\r\n\t\t\t\t\t\tif
      (asuint(currentFrameIndex) - previousFrameIndex == 1u)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tfloat3
      oldvPos = mul(previousElementToVFX,float4(inputVertexPosition, 1.0f)).xyz;\r\n\t\t\t\t\t\t\to.VFX_VARYING_VELOCITY_CPOS_PREVIOUS
      = TransformPositionVFXToPreviousClip(oldvPos);\r\n\t\t\t\t\t\t\to.VFX_VARYING_VELOCITY_CPOS
      = TransformPositionVFXToNonJitteredClip(vPos);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\t#if
      VFX_USE_COLOR_CURRENT && defined(VFX_VARYING_COLOR)\r\n\t\t\t\t\t\to.VFX_VARYING_COLOR
      = attributes.color;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t#if VFX_USE_ALPHA_CURRENT
      && defined(VFX_VARYING_ALPHA) \r\n\t\t\t\t\t\to.VFX_VARYING_ALPHA = attributes.alpha;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#ifdef
      VFX_VARYING_EXPOSUREWEIGHT\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\to.VFX_VARYING_EXPOSUREWEIGHT
      = exposureWeight;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#if
      USE_SOFT_PARTICLE && defined(VFX_VARYING_INVSOFTPARTICLEFADEDISTANCE)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\to.VFX_VARYING_INVSOFTPARTICLEFADEDISTANCE
      = invSoftParticlesFadeDistance;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#if
      (USE_ALPHA_TEST || WRITE_MOTION_VECTOR_IN_FORWARD) && (!VFX_SHADERGRAPH ||
      !HAS_SHADERGRAPH_PARAM_ALPHATHRESHOLD) && defined(VFX_VARYING_ALPHATHRESHOLD)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\to.VFX_VARYING_ALPHATHRESHOLD
      = alphaThreshold;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#if
      USE_UV_SCALE_BIAS\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#if defined
      (VFX_VARYING_UV)\r\n\t\t\t\t\t\to.VFX_VARYING_UV.xy = o.VFX_VARYING_UV.xy *
      uvScale + uvBias;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#if
      defined(VFX_VARYING_POSWS)\r\n\t\t\t\t\t\to.VFX_VARYING_POSWS = TransformPositionVFXToWorld(vPos);\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\t#if
      USE_FLIPBOOK && defined(VFX_VARYING_UV)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tVFXUVData
      uvData = GetUVData(flipBookSize, invFlipBookSize, o.VFX_VARYING_UV.xy, attributes.texIndex);\r\n\t\t\t\t\t\to.VFX_VARYING_UV.xy
      = uvData.uvs.xy;\r\n\t\t\t\t\t\t#if USE_FLIPBOOK_INTERPOLATION && defined(VFX_VARYING_UV)
      && defined (VFX_VARYING_FRAMEBLEND)\r\n\t\t\t\t\t\to.VFX_VARYING_UV.zw = uvData.uvs.zw;\r\n\t\t\t\t\t\to.VFX_VARYING_FRAMEBLEND
      = uvData.blend;\r\n\t\t\t\t\t\t#if USE_FLIPBOOK_MOTIONVECTORS && defined(VFX_VARYING_MOTIONVECTORSCALE)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\to.VFX_VARYING_MOTIONVECTORSCALE
      = motionVectorScale * invFlipBookSize;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t#ifndef
      VFX_SHADERGRAPH\r\n\t\t\t\t\t\t\t\t\t#ifdef VFX_VARYING_SMOOTHNESS\r\n\t\t\t\t\t\t\t\t\tfloat
      smoothness = (float)0;\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t    \n\t\t\t\t\t\t\t\t\t   
      smoothness = (float)0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\to.VFX_VARYING_SMOOTHNESS
      = smoothness;\r\n\t\t\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\t\t#if HDRP_MATERIAL_TYPE_STANDARD\r\n\t\t\t\t\t\t\t\t\t#ifdef
      VFX_VARYING_METALLIC\r\n\t\t\t\t\t\t\t\t\tfloat metallic = (float)0;\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t   
      \n\t\t\t\t\t\t\t\t\t    metallic = (float)0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\to.VFX_VARYING_METALLIC
      = metallic;\r\n\t\t\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\t\t#elif HDRP_MATERIAL_TYPE_SPECULAR\r\n\t\t\t\t\t\t\t\t\t#ifdef
      VFX_VARYING_SPECULAR\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\to.VFX_VARYING_SPECULAR
      = specularColor;\r\n\t\t\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\t\t#elif HDRP_MATERIAL_TYPE_TRANSLUCENT\r\n\t\t\t\t\t\t\t\t\t#ifdef
      VFX_VARYING_THICKNESS\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\to.VFX_VARYING_THICKNESS
      = thickness;\r\n\t\t\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\t\t#if
      USE_NORMAL_MAP\r\n\t\t\t\t\t\t\t\t\t#ifdef VFX_VARYING_NORMALSCALE\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\to.VFX_VARYING_NORMALSCALE
      = normalScale;\r\n\t\t\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\t\t#if
      HDRP_USE_EMISSIVE_MAP\r\n\t\t\t\t\t\t\t\t\t#ifdef VFX_VARYING_EMISSIVESCALE\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\to.VFX_VARYING_EMISSIVESCALE
      = emissiveScale;\r\n\t\t\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\t\t#ifdef
      VFX_VARYING_EMISSIVE\r\n\t\t\t\t\t\t\t\t\t#if HDRP_USE_EMISSIVE_COLOR\r\n\t\t\t\t\t\t\t\t\to.VFX_VARYING_EMISSIVE
      = attributes.color;\r\n\t\t\t\t\t\t\t\t\t#elif HDRP_USE_ADDITIONAL_EMISSIVE_COLOR\r\n\t\t\t\t\t\t\t\t\tfloat4
      emissiveColor = (float4)0;\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t    float
      tmp_t = attributes.color[0];\n\t\t\t\t\t\t\t\t\t    float tmp_u = saturate(tmp_t);\n\t\t\t\t\t\t\t\t\t   
      float4 tmp_v = SampleGradient(uniform_b,tmp_u);\n\t\t\t\t\t\t\t\t\t    \n\t\t\t\t\t\t\t\t\t   
      emissiveColor = tmp_v;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\to.VFX_VARYING_EMISSIVE
      = emissiveColor;\r\n\t\t\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\t\t#if
      HDRP_USE_ADDITIONAL_BASE_COLOR\r\n\t\t\t\t\t\t\t\t\t#ifdef VFX_VARYING_COLOR\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\to.VFX_VARYING_COLOR
      = baseColor;\r\n\t\t\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t   
      \r\n\t\t\t    \r\n\t\t\t\t\r\n\t\t\t\treturn o;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t#include
      \"Packages/com.unity.visualeffectgraph/Shaders/VFXCommonOutput.hlsl\"\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\n\t\t\r\n\t\t\t#define
      SHADERPASS SHADERPASS_FORWARD\r\n\t\t\t#include \"Packages/com.unity.render-pipelines.high-definition/Runtime/VFXGraph/Shaders/VFXLit.hlsl\"\r\n\t\t\t\r\n\t\t\t#ifndef
      VFX_SHADERGRAPH\r\n\t\t\t\r\n\t\t\tvoid VFXGetHDRPLitData(out SurfaceData surfaceData,
      out BuiltinData builtinData, out BSDFData bsdfData, out PreLightData preLightData,
      VFX_VARYING_PS_INPUTS i, float3 normalWS, const VFXUVData uvData, uint2 tileIndex)\r\n\t\t\t{\t\r\n\t\t\t\t#if
      HDRP_MATERIAL_TYPE_TRANSLUCENT\r\n\t\t\t\t // Loads diffusion profile\r\n\t\t\t\t#else\r\n\t\t\t\tconst
      uint diffusionProfileHash = 0;\r\n\t\t\t\t#endif\r\n\t\t\t\t\r\n\t\t\t\tfloat3
      posRWS = VFXGetPositionRWS(i);\r\n\t\t\t\tfloat4 posSS = i.VFX_VARYING_POSCS;\r\n\t\t\t\tPositionInputs
      posInput = GetPositionInput(posSS.xy, _ScreenSize.zw, posSS.z, posSS.w, posRWS,
      tileIndex);\r\n\t\t\t\t\r\n\t\t\t\tfloat alpha;\r\n\t\t\t\tsurfaceData = VFXGetSurfaceData(i,normalWS,uvData,diffusionProfileHash,alpha);\t\r\n\t\t\t\tbsdfData
      = ConvertSurfaceDataToBSDFData(posSS.xy, surfaceData);\r\n\t\t\t\r\n\t\t\t\tpreLightData
      = GetPreLightData(GetWorldSpaceNormalizeViewDir(posRWS),posInput,bsdfData);\r\n\t\t\t\t\r\n\t\t\t\tpreLightData.diffuseFGD
      = 1.0f;\r\n\t\t\t    //TODO: investigate why this is needed\r\n\t\t\t    preLightData.coatPartLambdaV
      = 0;\r\n\t\t\t    preLightData.coatIblR = 0;\r\n\t\t\t    preLightData.coatIblF
      = 0;\r\n\t\t\t    \r\n\t\t\t\tbuiltinData = VFXGetBuiltinData(i,posInput,surfaceData,uvData,alpha);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvoid
      VFXGetHDRPLitData(out SurfaceData surfaceData, out BuiltinData builtinData,
      VFX_VARYING_PS_INPUTS i, float3 normalWS, const VFXUVData uvData)\r\n\t\t\t{\r\n\t\t\t\tBSDFData
      bsdfData = (BSDFData)0;\r\n\t\t\t\tPreLightData preLightData = (PreLightData)0;\r\n\t\t\t\tpreLightData.diffuseFGD
      = 1.0f;\r\n\t\t\t\tVFXGetHDRPLitData(surfaceData,builtinData,bsdfData,preLightData,i,normalWS,uvData,uint2(0,0));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t#endif\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t#include
      \"Packages/com.unity.render-pipelines.high-definition/Runtime/VFXGraph/Shaders/VFXLitPixelOutput.hlsl\"\r\n\t\t\t\r\n\t\t\t\n\t\t\t\r\n\t\t\t\t\r\n\t\t   
      \r\n\t\t\r\n\t\t\t#pragma fragment frag\r\n\t\t\tvoid frag(ps_input i\r\n\t\t\t,
      out float4 outColor : SV_Target0\r\n\t\t#if USE_DOUBLE_SIDED\r\n\t\t\t, bool
      frontFace : SV_IsFrontFace\r\n\t\t#endif\r\n\t\t#if WRITE_MOTION_VECTOR_IN_FORWARD\r\n\t\t\t,
      out float4 outMotionVector : SV_Target1\r\n\t\t#endif\r\n\t\t\t)\r\n\t\t\t{\r\n\t\t\t\tUNITY_SETUP_STEREO_EYE_INDEX_POST_VERTEX(i);\r\n\t\t\t\tVFXTransformPSInputs(i);\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t#ifdef
      VFX_VARYING_NORMAL\r\n\t\t\t\t\t\t\t#if USE_DOUBLE_SIDED\r\n\t\t\t\t\t\t\tconst
      float faceMul = frontFace ? 1.0f : -1.0f;\r\n\t\t\t\t\t\t\t#else\r\n\t\t\t\t\t\t\tconst
      float faceMul = 1.0f;\r\n\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tfloat3
      normalWS = normalize(i.VFX_VARYING_NORMAL * faceMul);\r\n\t\t\t\t\t\t\tconst
      VFXUVData uvData = GetUVData(i);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t#ifdef
      VFX_VARYING_TANGENT\r\n\t\t\t\t\t\t\tfloat3 tangentWS = normalize(i.VFX_VARYING_TANGENT.xyz);\r\n\t\t\t\t\t\t\tfloat3
      bitangentWS = cross(normalWS,tangentWS) * (i.VFX_VARYING_TANGENT.w * faceMul);\r\n\t\t\t\t\t\t\tfloat3x3
      tbn = float3x3(tangentWS,bitangentWS,normalWS);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t#if
      USE_NORMAL_MAP\r\n\t\t\t\t\t\t\tfloat3 n = SampleNormalMap(VFX_SAMPLER(normalMap),uvData);\r\n\t\t\t\t\t\t\tfloat
      normalScale = 1.0f;\r\n\t\t\t\t\t\t\t#ifdef VFX_VARYING_NORMALSCALE\r\n\t\t\t\t\t\t\tnormalScale
      = i.VFX_VARYING_NORMALSCALE;\r\n\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\tnormalWS
      = normalize(lerp(normalWS,mul(n,tbn),normalScale));\r\n\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\r\n\t\t       
      \r\n\t\t        #ifdef VFX_SHADERGRAPH\r\n\t\t            \r\n\t\t           
      \r\n\t\t            \r\n\t\t            SurfaceData surface;\r\n\t\t           
      BuiltinData builtin;\r\n\t\t            surface = (SurfaceData)0;\r\n\t\t           
      builtin = (BuiltinData)0;\r\n\t\t            \r\n\t\t            surface.materialFeatures
      = MATERIALFEATUREFLAGS_LIT_STANDARD;\r\n\t\t            surface.specularOcclusion
      = 1.0f;\r\n\t\t            surface.ambientOcclusion = 1.0f;\r\n\t\t           
      surface.subsurfaceMask = 1.0f;\r\n\t\t            \r\n\t\t            #if HAS_SHADERGRAPH_PARAM_ALPHA\r\n\t\t               
      builtin.opacity = OUTSG.;\r\n\t\t                VFXClipFragmentColor(builtin.opacity,i);\r\n\t\t           
      #endif\r\n\t\t            \r\n\t\t            #if HAS_SHADERGRAPH_PARAM_SMOOTHNESS\r\n\t\t               
      surface.perceptualSmoothness = OUTSG.;\r\n\t\t            #endif\r\n\t\t           
      #if HAS_SHADERGRAPH_PARAM_METALLIC\r\n\t\t                surface.metallic
      = OUTSG.;\r\n\t\t            #endif\r\n\t\t            #if HAS_SHADERGRAPH_PARAM_BASECOLOR\r\n\t\t               
      surface.baseColor = OUTSG.;\r\n\t\t            #endif\r\n\t\t            \r\n\t\t           
      #if HAS_SHADERGRAPH_PARAM_NORMAL\r\n\t\t                float3 n =  OUTSG.;\r\n\t\t               
      normalWS = mul(n,tbn);\r\n\t\t            #endif\r\n\t\t            \r\n\t\t           
      surface.normalWS = normalWS;\r\n\t\t            \r\n\t\t            #if HAS_SHADERGRAPH_PARAM_EMISSIVE\r\n\t\t               
      builtin.emissiveColor = OUTSG.;\r\n\t\t            #endif\n\t\t\r\n\t\t           
      \r\n\t\t            outColor = VFXGetPixelOutputForwardShaderGraph(surface,
      builtin,i);\r\n\t\t        #else\r\n\t\t            outColor = VFXGetPixelOutputForward(i,normalWS,uvData);\r\n\t\t       
      #endif\r\n\t\t\t\t\r\n\t\t\t\t#if WRITE_MOTION_VECTOR_IN_FORWARD\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\tfloat2
      velocity = (i.VFX_VARYING_VELOCITY_CPOS.xy/i.VFX_VARYING_VELOCITY_CPOS.w) -
      (i.VFX_VARYING_VELOCITY_CPOS_PREVIOUS.xy/i.VFX_VARYING_VELOCITY_CPOS_PREVIOUS.w);\r\n\t\t\t\t\t\t\t#if
      UNITY_UV_STARTS_AT_TOP\r\n\t\t\t\t\t\t\t\tvelocity.y = -velocity.y;\r\n\t\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\tfloat4
      encodedMotionVector = 0.0f;\r\n\t\t\t\t\t\t\tVFXEncodeMotionVector(velocity
      * 0.5f, encodedMotionVector);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\toutMotionVector
      = encodedMotionVector;\r\n\t\t\t\t\toutMotionVector.a = outColor.a < i.VFX_VARYING_ALPHATHRESHOLD
      ? 0.0f : 1.0f; //Independant clipping for motion vector pass\r\n\t\t\t\t#endif\r\n\t\t\t}\r\n\t\t\tENDHLSL\r\n\t\t}\r\n\t\t\n\r\n\t\t//
      Shadow pass\r\n\t\tPass\r\n\t\t{\t\t\r\n\t\t\tTags { \"LightMode\"=\"ShadowCaster\"
      }\r\n\t\t\r\n\t\t\tZWrite On\r\n\t\t\tBlend Off\r\n\t\t\t\r\n\t\t\tHLSLPROGRAM\r\n\t\t\t#pragma
      target 4.5\r\n\t\t\t#if !USE_ALPHA_TEST && IS_TRANSPARENT_PARTICLE\r\n\t\t\t#define
      USE_ALPHA_TEST 1\r\n\t\t\t#endif\r\n\t\t\r\n\t\t\tstruct ps_input\r\n\t\t\t{\r\n\t\t\t\tfloat4
      pos : SV_POSITION;\r\n\t\t\t\tfloat2 uv : TEXCOORD0;\t\r\n\t\t\t\t#if USE_ALPHA_TEST
      || USE_FLIPBOOK_INTERPOLATION || VFX_USE_ALPHA_CURRENT\r\n\t\t\t\t// x: alpha
      threshold\r\n\t\t\t\t// y: frame blending factor\r\n\t\t\t\t// z: alpha\r\n\t\t\t\tnointerpolation
      float3 builtInInterpolants : TEXCOORD1;\r\n\t\t\t\t#endif\r\n\t\t        #if
      VFX_SHADERGRAPH_HAS_UV1\r\n\t\t        float4 uv1 : COLOR2;\r\n\t\t       
      #endif\r\n\t\t        #if VFX_SHADERGRAPH_HAS_UV2\r\n\t\t        float4 uv2
      : COLOR3;\r\n\t\t        #endif\r\n\t\t        #if VFX_SHADERGRAPH_HAS_UV3\r\n\t\t       
      float4 uv3 : COLOR4;\r\n\t\t        #endif\r\n\t\t        #if VFX_SHADERGRAPH_HAS_COLOR\r\n\t\t       
      float4 vertexColor : COLOR1;\r\n\t\t        #endif\r\n\t\t\t\t#if USE_FLIPBOOK_MOTIONVECTORS\r\n\t\t\t\t//
      x: motion vector scale u\r\n\t\t\t\t// y: motion vector scale v\r\n\t\t\t\tnointerpolation
      float2 builtInInterpolants2 : TEXCOORD2;\r\n\t\t\t\t#endif\r\n\t\t        \r\n\t\t       
      \r\n\t\t\r\n\t\t\t\tUNITY_VERTEX_OUTPUT_STEREO\r\n\t\t\t};\r\n\t\t\r\n\t\t#define
      VFX_VARYING_PS_INPUTS ps_input\r\n\t\t#define VFX_VARYING_POSCS pos\r\n\t\t#define
      VFX_VARYING_ALPHA builtInInterpolants.z\r\n\t\t#define VFX_VARYING_ALPHATHRESHOLD
      builtInInterpolants.x\r\n\t\t#define VFX_VARYING_FRAMEBLEND builtInInterpolants.y\r\n\t\t#define
      VFX_VARYING_MOTIONVECTORSCALE builtInInterpolants2.xy\r\n\t\t#define VFX_VARYING_UV
      uv\r\n\t\t\t\t\r\n\t\t\r\n\t\t\r\n\t\t// Needed for HDRP\r\n\t\t#define SHADERPASS
      SHADERPASS_SHADOWS\r\n\t\t\t\t\r\n\t\t\t#if !(defined(VFX_VARYING_PS_INPUTS)
      && defined(VFX_VARYING_POSCS))\r\n\t\t\t#error VFX_VARYING_PS_INPUTS, VFX_VARYING_POSCS
      and VFX_VARYING_UV must be defined.\r\n\t\t\t#endif\r\n\t\t\t\r\n\t\t\t#include
      \"Packages/com.unity.render-pipelines.high-definition/Runtime/VFXGraph/Shaders/VFXCommon.hlsl\"\n\t\t\t#include
      \"Packages/com.unity.visualeffectgraph/Shaders/VFXCommon.hlsl\"\n\t\t\t\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tstruct
      vs_input\r\n\t\t\t{\r\n\t\t\t\tfloat3 pos : POSITION;\r\n\t\t\t\tfloat2 uv
      : TEXCOORD0;\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_UV1\r\n\t\t\t    float4 uv1
      : TEXCOORD1;\r\n\t\t\t    #endif\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_UV2\r\n\t\t\t   
      float4 uv2 : TEXCOORD2;\r\n\t\t\t    #endif\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_UV3\r\n\t\t\t   
      float4 uv3 : TEXCOORD3;\r\n\t\t\t    #endif\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_COLOR\r\n\t\t\t   
      float4 vertexColor : COLOR;\r\n\t\t\t    #endif\r\n\t\t\t\tfloat3 normal :
      NORMAL;\r\n\t\t\t\t#if defined(VFX_VARYING_TANGENT) || SHADERGRAPH_HAS_NORMAL\r\n\t\t\t\tfloat4
      tangent : TANGENT;\r\n\t\t\t\t#endif\r\n\t\t\t\tVFX_DECLARE_INSTANCE_ID\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t#pragma
      vertex vert\r\n\t\t\tVFX_VARYING_PS_INPUTS vert(vs_input i)\r\n\t\t\t{\r\n\t\t\t   
      VFX_VARYING_PS_INPUTS o = (VFX_VARYING_PS_INPUTS)0;\r\n\t\t\t\r\n\t\t\t\tUNITY_SETUP_INSTANCE_ID(i);\r\n\t\t\t\tUNITY_INITIALIZE_VERTEX_OUTPUT_STEREO(o);\r\n\t\t\t\r\n\t\t\t\tuint
      index = VFX_GET_INSTANCE_ID(i);\t\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\tuint
      deadCount = 0;\r\n\t\t\t\t\t\t#if USE_DEAD_LIST_COUNT\r\n\t\t\t\t\t\tdeadCount
      = deadListCount.Load(0);\r\n\t\t\t\t\t\t#endif\t\r\n\t\t\t\t\t\tif (index >=
      asuint(nbMax) - deadCount)\r\n\t\t\t\t\t\t#if USE_GEOMETRY_SHADER\r\n\t\t\t\t\t\t\treturn;
      // cull\r\n\t\t\t\t\t\t#else\r\n\t\t\t\t\t\t\treturn o; // cull\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tAttributes
      attributes = (Attributes)0;\r\n\t\t\t\t\t\tSourceAttributes sourceAttributes
      = (SourceAttributes)0;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#if VFX_HAS_INDIRECT_DRAW\r\n\t\t\t\t\t\tindex
      = indirectBuffer[index];\r\n\t\t\t\t\t\tattributes.size = asfloat(attributeBuffer.Load((index
      * 0x1 + 0x0) << 2));\n\t\t\t\t\t\tattributes.position = asfloat(attributeBuffer.Load3((index
      * 0x8 + 0x10000) << 2));\n\t\t\t\t\t\tattributes.color = asfloat(attributeBuffer.Load3((index
      * 0x8 + 0x10004) << 2));\n\t\t\t\t\t\tattributes.alpha = asfloat(attributeBuffer.Load((index
      * 0x8 + 0x10003) << 2));\n\t\t\t\t\t\tattributes.alive = (bool)true;\n\t\t\t\t\t\tattributes.axisX
      = float3(1, 0, 0);\n\t\t\t\t\t\tattributes.axisY = float3(0, 1, 0);\n\t\t\t\t\t\tattributes.axisZ
      = float3(0, 0, 1);\n\t\t\t\t\t\tattributes.angleX = (float)0;\n\t\t\t\t\t\tattributes.angleY
      = (float)0;\n\t\t\t\t\t\tattributes.angleZ = (float)0;\n\t\t\t\t\t\tattributes.pivotX
      = (float)0;\n\t\t\t\t\t\tattributes.pivotY = (float)0;\n\t\t\t\t\t\tattributes.pivotZ
      = (float)0;\n\t\t\t\t\t\tattributes.scaleX = (float)1;\n\t\t\t\t\t\tattributes.scaleY
      = (float)1;\n\t\t\t\t\t\tattributes.scaleZ = (float)1;\n\t\t\t\t\t\t\n\t\t\t\t\r\n\t\t\t\t\t\t#else\r\n\t\t\t\t\t\tattributes.alive
      = (bool)true;\n\t\t\t\t\t\t\n\t\t\t\t\r\n\t\t\t\t\t\t#if !HAS_STRIPS\r\n\t\t\t\t\t\tif
      (!attributes.alive)\r\n\t\t\t\t\t\t\treturn o;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tattributes.size
      = asfloat(attributeBuffer.Load((index * 0x1 + 0x0) << 2));\n\t\t\t\t\t\tattributes.position
      = asfloat(attributeBuffer.Load3((index * 0x8 + 0x10000) << 2));\n\t\t\t\t\t\tattributes.color
      = asfloat(attributeBuffer.Load3((index * 0x8 + 0x10004) << 2));\n\t\t\t\t\t\tattributes.alpha
      = asfloat(attributeBuffer.Load((index * 0x8 + 0x10003) << 2));\n\t\t\t\t\t\tattributes.axisX
      = float3(1, 0, 0);\n\t\t\t\t\t\tattributes.axisY = float3(0, 1, 0);\n\t\t\t\t\t\tattributes.axisZ
      = float3(0, 0, 1);\n\t\t\t\t\t\tattributes.angleX = (float)0;\n\t\t\t\t\t\tattributes.angleY
      = (float)0;\n\t\t\t\t\t\tattributes.angleZ = (float)0;\n\t\t\t\t\t\tattributes.pivotX
      = (float)0;\n\t\t\t\t\t\tattributes.pivotY = (float)0;\n\t\t\t\t\t\tattributes.pivotZ
      = (float)0;\n\t\t\t\t\t\tattributes.scaleX = (float)1;\n\t\t\t\t\t\tattributes.scaleY
      = (float)1;\n\t\t\t\t\t\tattributes.scaleZ = (float)1;\n\t\t\t\t\t\t\n\t\t\t\t\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//
      Initialize built-in needed attributes\r\n\t\t\t\t\t\t#if HAS_STRIPS\r\n\t\t\t\t\t\tInitStripAttributes(index,
      attributes, stripData);\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\tif
      (!attributes.alive)\r\n\t\t\t\t\treturn o;\r\n\t\t\t\t\r\n\t\t\t\to.VFX_VARYING_UV.xy
      = i.uv;\r\n\t\t\t    \r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_UV1\r\n\t\t\t   
      o.uv1 = i.uv1;\r\n\t\t\t    #endif\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_UV2\r\n\t\t\t   
      o.uv2 = i.uv2;\r\n\t\t\t    #endif\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_UV3\r\n\t\t\t   
      o.uv3 = i.uv3;\r\n\t\t\t    #endif\r\n\t\t\t    #if VFX_SHADERGRAPH_HAS_COLOR\r\n\t\t\t   
      o.vertexColor = i.vertexColor;\r\n\t\t\t    #endif\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\tfloat3
      size3 = float3(attributes.size,attributes.size,attributes.size);\r\n\t\t\t\t\t\t#if
      VFX_USE_SCALEX_CURRENT\r\n\t\t\t\t\t\tsize3.x *= attributes.scaleX;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t#if
      VFX_USE_SCALEY_CURRENT\r\n\t\t\t\t\t\tsize3.y *= attributes.scaleY;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t#if
      VFX_USE_SCALEZ_CURRENT\r\n\t\t\t\t\t\tsize3.z *= attributes.scaleZ;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tfloat3
      inputVertexPosition = i.pos;\r\n\t\t\t\tfloat4x4 elementToVFX = GetElementToVFXMatrix(\r\n\t\t\t\t\tattributes.axisX,\r\n\t\t\t\t\tattributes.axisY,\r\n\t\t\t\t\tattributes.axisZ,\r\n\t\t\t\t\tfloat3(attributes.angleX,attributes.angleY,attributes.angleZ),\r\n\t\t\t\t\tfloat3(attributes.pivotX,attributes.pivotY,attributes.pivotZ),\r\n\t\t\t\t\tsize3,\r\n\t\t\t\t\tattributes.position);\r\n\t\t\t\t\t\r\n\t\t\t\tfloat3
      vPos = mul(elementToVFX,float4(inputVertexPosition,1.0f)).xyz;\r\n\t\t\t\tfloat4
      csPos = TransformPositionVFXToClip(vPos);\r\n\t\t\t\to.VFX_VARYING_POSCS =
      csPos;\r\n\t\t\t\t\r\n\t\t\t\tfloat3 normalWS = normalize(TransformDirectionVFXToWorld(mul((float3x3)elementToVFX,
      i.normal)));\r\n\t\t\t\t#ifdef VFX_VARYING_NORMAL // TODO Should use inverse
      transpose\r\n\t\t\t\to.VFX_VARYING_NORMAL = normalWS;\r\n\t\t\t\t#endif\r\n\t\t\t\t#ifdef
      VFX_VARYING_TANGENT\r\n\t\t\t\to.VFX_VARYING_TANGENT = float4(normalize(TransformDirectionVFXToWorld(mul((float3x3)elementToVFX,i.tangent.xyz))),i.tangent.w);\r\n\t\t\t\t#endif\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\t#if
      defined(VFX_VARYING_VELOCITY_CPOS) && defined(VFX_VARYING_VELOCITY_CPOS_PREVIOUS)\r\n\t\t\t\t\t\tfloat4x4
      previousElementToVFX = (float4x4)0;\r\n\t\t\t\t\t\tpreviousElementToVFX[3]
      = float4(0,0,0,1);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tUNITY_UNROLL\r\n\t\t\t\t\t\tfor
      (int itIndexMatrixRow = 0; itIndexMatrixRow < 3; ++itIndexMatrixRow)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tUNITY_UNROLL\r\n\t\t\t\t\t\t\tfor
      (int itIndexMatrixCol = 0; itIndexMatrixCol < 4; ++itIndexMatrixCol)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tuint
      itIndexMatrix = itIndexMatrixCol * 4 + itIndexMatrixRow;\r\n\t\t\t\t\t\t\t\tuint
      read = elementToVFXBufferPrevious.Load((index * 16 + itIndexMatrix) << 2);\r\n\t\t\t\t\t\t\t\tpreviousElementToVFX[itIndexMatrixRow][itIndexMatrixCol]
      = asfloat(read);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tuint
      previousFrameIndex = elementToVFXBufferPrevious.Load((index * 16 + 15) << 2);\r\n\t\t\t\t\t\to.VFX_VARYING_VELOCITY_CPOS
      = o.VFX_VARYING_VELOCITY_CPOS_PREVIOUS = float4(0.0f, 0.0f, 0.0f, 1.0f);\r\n\t\t\t\t\t\tif
      (asuint(currentFrameIndex) - previousFrameIndex == 1u)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tfloat3
      oldvPos = mul(previousElementToVFX,float4(inputVertexPosition, 1.0f)).xyz;\r\n\t\t\t\t\t\t\to.VFX_VARYING_VELOCITY_CPOS_PREVIOUS
      = TransformPositionVFXToPreviousClip(oldvPos);\r\n\t\t\t\t\t\t\to.VFX_VARYING_VELOCITY_CPOS
      = TransformPositionVFXToNonJitteredClip(vPos);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\t#if
      VFX_USE_COLOR_CURRENT && defined(VFX_VARYING_COLOR)\r\n\t\t\t\t\t\to.VFX_VARYING_COLOR
      = attributes.color;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t#if VFX_USE_ALPHA_CURRENT
      && defined(VFX_VARYING_ALPHA) \r\n\t\t\t\t\t\to.VFX_VARYING_ALPHA = attributes.alpha;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#ifdef
      VFX_VARYING_EXPOSUREWEIGHT\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\to.VFX_VARYING_EXPOSUREWEIGHT
      = exposureWeight;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#if
      USE_SOFT_PARTICLE && defined(VFX_VARYING_INVSOFTPARTICLEFADEDISTANCE)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\to.VFX_VARYING_INVSOFTPARTICLEFADEDISTANCE
      = invSoftParticlesFadeDistance;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#if
      (USE_ALPHA_TEST || WRITE_MOTION_VECTOR_IN_FORWARD) && (!VFX_SHADERGRAPH ||
      !HAS_SHADERGRAPH_PARAM_ALPHATHRESHOLD) && defined(VFX_VARYING_ALPHATHRESHOLD)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\to.VFX_VARYING_ALPHATHRESHOLD
      = alphaThreshold;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#if
      USE_UV_SCALE_BIAS\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#if defined
      (VFX_VARYING_UV)\r\n\t\t\t\t\t\to.VFX_VARYING_UV.xy = o.VFX_VARYING_UV.xy *
      uvScale + uvBias;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#if
      defined(VFX_VARYING_POSWS)\r\n\t\t\t\t\t\to.VFX_VARYING_POSWS = TransformPositionVFXToWorld(vPos);\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\t#if
      USE_FLIPBOOK && defined(VFX_VARYING_UV)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tVFXUVData
      uvData = GetUVData(flipBookSize, invFlipBookSize, o.VFX_VARYING_UV.xy, attributes.texIndex);\r\n\t\t\t\t\t\to.VFX_VARYING_UV.xy
      = uvData.uvs.xy;\r\n\t\t\t\t\t\t#if USE_FLIPBOOK_INTERPOLATION && defined(VFX_VARYING_UV)
      && defined (VFX_VARYING_FRAMEBLEND)\r\n\t\t\t\t\t\to.VFX_VARYING_UV.zw = uvData.uvs.zw;\r\n\t\t\t\t\t\to.VFX_VARYING_FRAMEBLEND
      = uvData.blend;\r\n\t\t\t\t\t\t#if USE_FLIPBOOK_MOTIONVECTORS && defined(VFX_VARYING_MOTIONVECTORSCALE)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\to.VFX_VARYING_MOTIONVECTORSCALE
      = motionVectorScale * invFlipBookSize;\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t   
      \r\n\t\t\t    \r\n\t\t\t\t\r\n\t\t\t\treturn o;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t#include
      \"Packages/com.unity.visualeffectgraph/Shaders/VFXCommonOutput.hlsl\"\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\n\t\t\t\r\n\t\t\t\t\r\n\t\t   
      \r\n\t\t    \r\n\t\t\t#pragma fragment frag\r\n\t\t\tfloat frag(ps_input i)
      : SV_TARGET\r\n\t\t\t{\r\n\t\t\t\tUNITY_SETUP_STEREO_EYE_INDEX_POST_VERTEX(i);\r\n\t\t\t\tVFXTransformPSInputs(i);\r\n\t\t   
      #ifdef VFX_SHADERGRAPH\r\n\t\t        \r\n\t\t        \r\n\t\t\t\r\n\t\t       
      float alpha = OUTSG.;\r\n\t\t    #else\r\n\t\t\t\tfloat alpha = VFXGetFragmentColor(i).a;\r\n\t\t       
      #if HDRP_USE_BASE_COLOR_MAP_ALPHA\r\n\t\t            alpha *= VFXGetTextureColor(VFX_SAMPLER(baseColorMap),i).a;\r\n\t\t       
      #endif\t\r\n\t\t    #endif\r\n\t\t\t\tVFXClipFragmentColor(alpha,i);\r\n\t\t\t\treturn
      0;\r\n\t\t\t}\r\n\t\t\tENDHLSL\r\n\t\t}\r\n\t\t\n\r\n\t}\r\n}\r\n"
  m_Infos:
    m_Expressions:
      m_Expressions:
      - op: 1
        valueIndex: 0
        data[0]: -1
        data[1]: -1
        data[2]: -1
        data[3]: 2
      - op: 5
        valueIndex: 2
        data[0]: 0
        data[1]: -1
        data[2]: 0
        data[3]: 2
      - op: 66
        valueIndex: 3
        data[0]: 1
        data[1]: -1
        data[2]: -1
        data[3]: -1
      - op: 1
        valueIndex: 4
        data[0]: -1
        data[1]: -1
        data[2]: -1
        data[3]: 1
      - op: 20
        valueIndex: 5
        data[0]: 3
        data[1]: -1
        data[2]: -1
        data[3]: 1
      - op: 1
        valueIndex: 6
        data[0]: -1
        data[1]: -1
        data[2]: -1
        data[3]: 1
      - op: 5
        valueIndex: 7
        data[0]: 0
        data[1]: -1
        data[2]: 1
        data[3]: 2
      - op: 1
        valueIndex: 8
        data[0]: -1
        data[1]: -1
        data[2]: -1
        data[3]: 1
      - op: 29
        valueIndex: 9
        data[0]: 7
        data[1]: 4
        data[2]: -1
        data[3]: 1
      - op: 27
        valueIndex: 10
        data[0]: 6
        data[1]: 5
        data[2]: -1
        data[3]: 1
      - op: 26
        valueIndex: 11
        data[0]: 8
        data[1]: 9
        data[2]: -1
        data[3]: 1
      - op: 24
        valueIndex: 12
        data[0]: 10
        data[1]: -1
        data[2]: -1
        data[3]: 1
      - op: 1
        valueIndex: 13
        data[0]: -1
        data[1]: -1
        data[2]: -1
        data[3]: 2
      - op: 27
        valueIndex: 15
        data[0]: 11
        data[1]: 9
        data[2]: -1
        data[3]: 1
      - op: 1
        valueIndex: 16
        data[0]: -1
        data[1]: -1
        data[2]: -1
        data[3]: 1
      - op: 1
        valueIndex: 17
        data[0]: -1
        data[1]: -1
        data[2]: -1
        data[3]: 1
      - op: 1
        valueIndex: 18
        data[0]: -1
        data[1]: -1
        data[2]: -1
        data[3]: 1
      - op: 1
        valueIndex: 19
        data[0]: -1
        data[1]: -1
        data[2]: -1
        data[3]: 2
      - op: 2
        valueIndex: 21
        data[0]: 14
        data[1]: 13
        data[2]: -1
        data[3]: -1
      - op: 2
        valueIndex: 23
        data[0]: 15
        data[1]: 16
        data[2]: -1
        data[3]: -1
      - op: 1
        valueIndex: 25
        data[0]: -1
        data[1]: -1
        data[2]: -1
        data[3]: 7
      - op: 26
        valueIndex: 26
        data[0]: 19
        data[1]: 17
        data[2]: -1
        data[3]: 2
      - op: 5
        valueIndex: 28
        data[0]: 21
        data[1]: -1
        data[2]: 0
        data[3]: 2
      - op: 5
        valueIndex: 29
        data[0]: 21
        data[1]: -1
        data[2]: 1
        data[3]: 2
      - op: 3
        valueIndex: 30
        data[0]: 23
        data[1]: 23
        data[2]: 23
        data[3]: -1
      - op: 3
        valueIndex: 33
        data[0]: 22
        data[1]: 22
        data[2]: 22
        data[3]: -1
      - op: 1
        valueIndex: 36
        data[0]: -1
        data[1]: -1
        data[2]: -1
        data[3]: 7
      - op: 29
        valueIndex: 37
        data[0]: 24
        data[1]: 25
        data[2]: -1
        data[3]: 3
      - op: 1
        valueIndex: 40
        data[0]: -1
        data[1]: -1
        data[2]: -1
        data[3]: 14
      - op: 26
        valueIndex: 41
        data[0]: 1
        data[1]: 5
        data[2]: -1
        data[3]: 1
      - op: 31
        valueIndex: 42
        data[0]: 29
        data[1]: 14
        data[2]: -1
        data[3]: 1
      - op: 57
        valueIndex: 43
        data[0]: 28
        data[1]: -1
        data[2]: -1
        data[3]: 0
      - op: 1
        valueIndex: 44
        data[0]: -1
        data[1]: -1
        data[2]: -1
        data[3]: 1
      - op: 1
        valueIndex: 45
        data[0]: -1
        data[1]: -1
        data[2]: -1
        data[3]: 6
      - op: 1
        valueIndex: 46
        data[0]: -1
        data[1]: -1
        data[2]: -1
        data[3]: 15
      - op: 1
        valueIndex: 47
        data[0]: -1
        data[1]: -1
        data[2]: -1
        data[3]: 3
      - op: 1
        valueIndex: 50
        data[0]: -1
        data[1]: -1
        data[2]: -1
        data[3]: 3
      - op: 1
        valueIndex: 53
        data[0]: -1
        data[1]: -1
        data[2]: -1
        data[3]: 2
      - op: 2
        valueIndex: 55
        data[0]: 30
        data[1]: 30
        data[2]: -1
        data[3]: -1
      m_NeedsLocalToWorld: 0
      m_NeedsWorldToLocal: 0
      m_NeededMainCameraBuffers: 0
    m_PropertySheet:
      m_Float:
        m_Array:
        - m_ExpressionIndex: 3
          m_Value: 1
        - m_ExpressionIndex: 5
          m_Value: 3
        - m_ExpressionIndex: 7
          m_Value: 1
        - m_ExpressionIndex: 14
          m_Value: 0
        - m_ExpressionIndex: 15
          m_Value: -227.9119
        - m_ExpressionIndex: 16
          m_Value: 240.0912
        - m_ExpressionIndex: 32
          m_Value: 0.16
      m_Vector2f:
        m_Array:
        - m_ExpressionIndex: 0
          m_Value: {x: 2048, y: 573}
        - m_ExpressionIndex: 12
          m_Value: {x: 0.5, y: 0.5}
        - m_ExpressionIndex: 17
          m_Value: {x: 0.01, y: 0.01}
        - m_ExpressionIndex: 37
          m_Value: {x: 0, y: 0}
      m_Vector3f:
        m_Array:
        - m_ExpressionIndex: 35
          m_Value: {x: 10, y: 10, z: 10}
        - m_ExpressionIndex: 36
          m_Value: {x: 0, y: 0, z: 0}
      m_Vector4f:
        m_Array: []
      m_Uint:
        m_Array:
        - m_ExpressionIndex: 33
          m_Value: 4294967295
      m_Int:
        m_Array: []
      m_Matrix4x4f:
        m_Array: []
      m_AnimationCurve:
        m_Array: []
      m_Gradient:
        m_Array:
        - m_ExpressionIndex: 28
          m_Value:
            serializedVersion: 2
            key0: {r: 0, g: 0, b: 0, a: 1}
            key1: {r: 1, g: 0, b: 0, a: 1}
            key2: {r: 10.680627, g: 7.24182, b: 3.2747207, a: 0}
            key3: {r: 0, g: 0, b: 0, a: 0}
            key4: {r: 0, g: 0, b: 0, a: 0}
            key5: {r: 0, g: 0, b: 0, a: 0}
            key6: {r: 0, g: 0, b: 0, a: 0}
            key7: {r: 0, g: 0, b: 0, a: 0}
            ctime0: 0
            ctime1: 46795
            ctime2: 65535
            ctime3: 0
            ctime4: 0
            ctime5: 0
            ctime6: 0
            ctime7: 0
            atime0: 0
            atime1: 65535
            atime2: 0
            atime3: 0
            atime4: 0
            atime5: 0
            atime6: 0
            atime7: 0
            m_Mode: 0
            m_NumColorKeys: 3
            m_NumAlphaKeys: 2
      m_NamedObject:
        m_Array:
        - m_ExpressionIndex: 20
          m_Value: {fileID: 2800000, guid: 9e3a6c2a6197ced2089a19d171616e45, type: 3}
        - m_ExpressionIndex: 26
          m_Value: {fileID: 2800000, guid: 30889caeccb0bf753b00a4067eab9e40, type: 3}
        - m_ExpressionIndex: 34
          m_Value: {fileID: 289301614986012343, guid: 71570a94aa698d236a530af90e27d8b1,
            type: 3}
      m_Bool:
        m_Array: []
    m_ExposedExpressions:
    - nameId: BBox Max
      index: 16
    - nameId: BBox Min
      index: 15
    - nameId: ColorTexture
      index: 26
    - nameId: PositionTexture
      index: 20
    - nameId: TextureDimensions
      index: 0
    - nameId: Time
      index: 3
    m_Buffers:
    - type: 1
      size: 655360
      layout:
      - name: size
        type: 1
        offset:
          bucket: 0
          structure: 1
          element: 0
      - name: position
        type: 3
        offset:
          bucket: 65536
          structure: 8
          element: 0
      - name: alpha
        type: 1
        offset:
          bucket: 65536
          structure: 8
          element: 3
      - name: color
        type: 3
        offset:
          bucket: 65536
          structure: 8
          element: 4
      - name: particleId
        type: 6
        offset:
          bucket: 589824
          structure: 1
          element: 0
      capacity: 65536
      stride: 4
    - type: 1
      size: 1
      layout:
      - name: spawnCount
        type: 1
        offset:
          bucket: 0
          structure: 1
          element: 0
      capacity: 1
      stride: 4
    m_TemporaryBuffers: []
    m_CPUBuffers:
    - capacity: 1
      stride: 1
      layout:
      - name: spawnCount
        type: 1
        offset:
          bucket: 0
          structure: 1
          element: 0
      initialData:
        data: 00000000
    - capacity: 1
      stride: 1
      layout:
      - name: spawnCount
        type: 1
        offset:
          bucket: 0
          structure: 1
          element: 0
      initialData:
        data: 00000000
    m_Events:
    - name: OnPlay
      playSystems: 00000000
      stopSystems: 
    - name: OnStop
      playSystems: 
      stopSystems: 00000000
    m_RuntimeVersion: 10
    m_RendererSettings:
      motionVectorGenerationMode: 0
      shadowCastingMode: 1
      receiveShadows: 0
      reflectionProbeUsage: 0
      lightProbeUsage: 0
    m_CullingFlags: 3
    m_UpdateMode: 0
    m_PreWarmDeltaTime: 0.05
    m_PreWarmStepCount: 0
    m_InitialEventName: OnPlay
  m_Systems:
  - type: 0
    flags: 0
    capacity: 0
    layer: 4294967295
    buffers:
    - nameId: spawner_output
      index: 1
    values: []
    tasks:
    - type: 268435457
      buffers: []
      temporaryBuffers: []
      values:
      - nameId: Count
        index: 38
      - nameId: Delay
        index: 37
      params: []
      processor: {fileID: 0}
      shaderSourceIndex: -1
  - type: 1
    flags: 0
    capacity: 65536
    layer: 4294967295
    buffers:
    - nameId: attributeBuffer
      index: 0
    - nameId: sourceAttributeBuffer
      index: 1
    - nameId: spawner_input
      index: 1
    values:
    - nameId: bounds_center
      index: 36
    - nameId: bounds_size
      index: 35
    tasks:
    - type: 536870912
      buffers:
      - nameId: attributeBuffer
        index: 0
      - nameId: sourceAttributeBuffer
        index: 1
      temporaryBuffers: []
      values: []
      params:
      - nameId: bounds_center
        index: 36
      - nameId: bounds_size
        index: 35
      processor: {fileID: 0}
      shaderSourceIndex: 0
    - type: 805306368
      buffers:
      - nameId: attributeBuffer
        index: 0
      temporaryBuffers: []
      values:
      - nameId: uniform_b
        index: 25
      - nameId: uniform_c
        index: 2
      - nameId: uniform_d
        index: 0
      - nameId: uniform_e
        index: 18
      - nameId: uniform_f
        index: 27
      - nameId: texture_b
        index: 20
      - nameId: texture_c
        index: 26
      params: []
      processor: {fileID: 0}
      shaderSourceIndex: 1
    - type: 1073741828
      buffers:
      - nameId: attributeBuffer
        index: 0
      temporaryBuffers: []
      values:
      - nameId: uniform_b
        index: 31
      params:
      - nameId: mesh
        index: 34
      - nameId: subMeshMask
        index: 33
      - nameId: sortPriority
        index: 0
      processor: {fileID: 0}
      shaderSourceIndex: 2
--- !u!114 &8926484042661614555
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 73a13919d81fb7444849bae8b5c812a2, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 114350483966674976}
  m_Children:
  - {fileID: 8926484042661614739}
  m_UIPosition: {x: 936, y: -133}
  m_UICollapsed: 0
  m_UISuperCollapsed: 0
  m_InputSlots: []
  m_OutputSlots: []
  m_Label: 
  m_Data: {fileID: 0}
  m_InputFlowSlot:
  - link: []
  - link: []
  m_OutputFlowSlot:
  - link:
    - context: {fileID: 8926484042661614558}
      slotIndex: 0
  loopDuration: 0
  loopCount: 0
  delayBeforeLoop: 0
  delayAfterLoop: 0
--- !u!114 &8926484042661614558
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 9dfea48843f53fc438eabc12a3a30abc, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 114350483966674976}
  m_Children:
  - {fileID: 8926484042661614643}
  m_UIPosition: {x: 935, y: 217}
  m_UICollapsed: 0
  m_UISuperCollapsed: 0
  m_InputSlots:
  - {fileID: 8926484042661614559}
  m_OutputSlots: []
  m_Label: 
  m_Data: {fileID: 8926484042661614568}
  m_InputFlowSlot:
  - link:
    - context: {fileID: 8926484042661614555}
      slotIndex: 0
  m_OutputFlowSlot:
  - link:
    - context: {fileID: 8926484042661614583}
      slotIndex: 0
--- !u!114 &8926484042661614559
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 1b605c022ee79394a8a776c0869b3f9a, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 0}
  m_Children:
  - {fileID: 8926484042661614560}
  - {fileID: 8926484042661614564}
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661614559}
  m_MasterData:
    m_Owner: {fileID: 8926484042661614558}
    m_Value:
      m_Type:
        m_SerializableType: UnityEditor.VFX.AABox, Unity.VisualEffectGraph.Editor,
          Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
      m_SerializableObject: '{"center":{"x":0.0,"y":0.0,"z":0.0},"size":{"x":10.0,"y":10.0,"z":10.0}}'
    m_Space: 0
  m_Property:
    name: bounds
    m_serializedType:
      m_SerializableType: UnityEditor.VFX.AABox, Unity.VisualEffectGraph.Editor,
        Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
    attributes:
    - m_Type: 3
      m_Min: -Infinity
      m_Max: Infinity
      m_Tooltip: The culling bounds of this system. The Visual Effect is only visible
        if the bounding box specified here is visible to the camera.
      m_Regex: 
      m_RegexMaxLength: 0
  m_Direction: 0
  m_LinkedSlots: []
--- !u!114 &8926484042661614560
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: ac39bd03fca81b849929b9c966f1836a, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 8926484042661614559}
  m_Children:
  - {fileID: 8926484042661614561}
  - {fileID: 8926484042661614562}
  - {fileID: 8926484042661614563}
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661614559}
  m_MasterData:
    m_Owner: {fileID: 0}
    m_Value:
      m_Type:
        m_SerializableType: 
      m_SerializableObject: 
    m_Space: 2147483647
  m_Property:
    name: center
    m_serializedType:
      m_SerializableType: UnityEngine.Vector3, UnityEngine.CoreModule, Version=0.0.0.0,
        Culture=neutral, PublicKeyToken=null
    attributes:
    - m_Type: 3
      m_Min: -Infinity
      m_Max: Infinity
      m_Tooltip: Sets the center of the box.
      m_Regex: 
      m_RegexMaxLength: 0
  m_Direction: 0
  m_LinkedSlots: []
--- !u!114 &8926484042661614561
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f780aa281814f9842a7c076d436932e7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 8926484042661614560}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661614559}
  m_MasterData:
    m_Owner: {fileID: 0}
    m_Value:
      m_Type:
        m_SerializableType: 
      m_SerializableObject: 
    m_Space: 2147483647
  m_Property:
    name: x
    m_serializedType:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes: []
  m_Direction: 0
  m_LinkedSlots: []
--- !u!114 &8926484042661614562
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f780aa281814f9842a7c076d436932e7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 8926484042661614560}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661614559}
  m_MasterData:
    m_Owner: {fileID: 0}
    m_Value:
      m_Type:
        m_SerializableType: 
      m_SerializableObject: 
    m_Space: 2147483647
  m_Property:
    name: y
    m_serializedType:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes: []
  m_Direction: 0
  m_LinkedSlots: []
--- !u!114 &8926484042661614563
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f780aa281814f9842a7c076d436932e7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 8926484042661614560}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661614559}
  m_MasterData:
    m_Owner: {fileID: 0}
    m_Value:
      m_Type:
        m_SerializableType: 
      m_SerializableObject: 
    m_Space: 2147483647
  m_Property:
    name: z
    m_serializedType:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes: []
  m_Direction: 0
  m_LinkedSlots: []
--- !u!114 &8926484042661614564
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: ac39bd03fca81b849929b9c966f1836a, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 8926484042661614559}
  m_Children:
  - {fileID: 8926484042661614565}
  - {fileID: 8926484042661614566}
  - {fileID: 8926484042661614567}
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661614559}
  m_MasterData:
    m_Owner: {fileID: 0}
    m_Value:
      m_Type:
        m_SerializableType: 
      m_SerializableObject: 
    m_Space: 2147483647
  m_Property:
    name: size
    m_serializedType:
      m_SerializableType: UnityEngine.Vector3, UnityEngine.CoreModule, Version=0.0.0.0,
        Culture=neutral, PublicKeyToken=null
    attributes:
    - m_Type: 3
      m_Min: -Infinity
      m_Max: Infinity
      m_Tooltip: Sets the size of the box along each axis.
      m_Regex: 
      m_RegexMaxLength: 0
  m_Direction: 0
  m_LinkedSlots: []
--- !u!114 &8926484042661614565
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f780aa281814f9842a7c076d436932e7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 8926484042661614564}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661614559}
  m_MasterData:
    m_Owner: {fileID: 0}
    m_Value:
      m_Type:
        m_SerializableType: 
      m_SerializableObject: 
    m_Space: 2147483647
  m_Property:
    name: x
    m_serializedType:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes: []
  m_Direction: 0
  m_LinkedSlots: []
--- !u!114 &8926484042661614566
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f780aa281814f9842a7c076d436932e7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 8926484042661614564}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661614559}
  m_MasterData:
    m_Owner: {fileID: 0}
    m_Value:
      m_Type:
        m_SerializableType: 
      m_SerializableObject: 
    m_Space: 2147483647
  m_Property:
    name: y
    m_serializedType:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes: []
  m_Direction: 0
  m_LinkedSlots: []
--- !u!114 &8926484042661614567
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f780aa281814f9842a7c076d436932e7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 8926484042661614564}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661614559}
  m_MasterData:
    m_Owner: {fileID: 0}
    m_Value:
      m_Type:
        m_SerializableType: 
      m_SerializableObject: 
    m_Space: 2147483647
  m_Property:
    name: z
    m_serializedType:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes: []
  m_Direction: 0
  m_LinkedSlots: []
--- !u!114 &8926484042661614568
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: d78581a96eae8bf4398c282eb0b098bd, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 114350483966674976}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  title: 
  m_Owners:
  - {fileID: 8926484042661614558}
  - {fileID: 8926484042661614583}
  - {fileID: 8926484042661614866}
  dataType: 0
  capacity: 65536
  stripCapacity: 16
  particlePerStripCount: 16
  m_Space: 0
--- !u!114 &8926484042661614583
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 2dc095764ededfa4bb32fa602511ea4b, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 114350483966674976}
  m_Children:
  - {fileID: 8926484042661615041}
  m_UIPosition: {x: 933, y: 559}
  m_UICollapsed: 0
  m_UISuperCollapsed: 0
  m_InputSlots: []
  m_OutputSlots: []
  m_Label: 
  m_Data: {fileID: 8926484042661614568}
  m_InputFlowSlot:
  - link:
    - context: {fileID: 8926484042661614558}
      slotIndex: 0
  m_OutputFlowSlot:
  - link:
    - context: {fileID: 8926484042661614866}
      slotIndex: 0
  integration: 0
  angularIntegration: 0
  ageParticles: 1
  reapParticles: 1
--- !u!114 &8926484042661614643
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: a971fa2e110a0ac42ac1d8dae408704b, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 8926484042661614558}
  m_Children: []
  m_UIPosition: {x: 0, y: 96}
  m_UICollapsed: 0
  m_UISuperCollapsed: 0
  m_InputSlots:
  - {fileID: 8926484042661614644}
  m_OutputSlots: []
  m_Disabled: 0
  attribute: size
  Composition: 0
  Source: 0
  Random: 0
  channels: 6
--- !u!114 &8926484042661614644
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f780aa281814f9842a7c076d436932e7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 0}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661614644}
  m_MasterData:
    m_Owner: {fileID: 8926484042661614643}
    m_Value:
      m_Type:
        m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
          PublicKeyToken=b77a5c561934e089
      m_SerializableObject: 0.16
    m_Space: 2147483647
  m_Property:
    name: Size
    m_serializedType:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes:
    - m_Type: 3
      m_Min: -Infinity
      m_Max: Infinity
      m_Tooltip: The uniform size of the particle.
      m_Regex: 
      m_RegexMaxLength: 0
  m_Direction: 0
  m_LinkedSlots: []
--- !u!114 &8926484042661614739
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 5e382412bb691334bb79457a6c127924, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 8926484042661614555}
  m_Children: []
  m_UIPosition: {x: 0, y: 2}
  m_UICollapsed: 0
  m_UISuperCollapsed: 0
  m_InputSlots:
  - {fileID: 8926484042661614740}
  - {fileID: 8926484042661614741}
  m_OutputSlots: []
  m_Disabled: 0
  repeat: 0
  spawnMode: 0
  delayMode: 0
--- !u!114 &8926484042661614740
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f780aa281814f9842a7c076d436932e7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 0}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661614740}
  m_MasterData:
    m_Owner: {fileID: 8926484042661614739}
    m_Value:
      m_Type:
        m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
          PublicKeyToken=b77a5c561934e089
      m_SerializableObject: 6144
    m_Space: 2147483647
  m_Property:
    name: Count
    m_serializedType:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes:
    - m_Type: 3
      m_Min: -Infinity
      m_Max: Infinity
      m_Tooltip: Sets the number of particles to be spawned with each burst.
      m_Regex: 
      m_RegexMaxLength: 0
    - m_Type: 1
      m_Min: 0
      m_Max: Infinity
      m_Tooltip: 
      m_Regex: 
      m_RegexMaxLength: 0
  m_Direction: 0
  m_LinkedSlots:
  - {fileID: 8926484042661614890}
--- !u!114 &8926484042661614741
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f780aa281814f9842a7c076d436932e7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 0}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661614741}
  m_MasterData:
    m_Owner: {fileID: 8926484042661614739}
    m_Value:
      m_Type:
        m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
          PublicKeyToken=b77a5c561934e089
      m_SerializableObject: 0
    m_Space: 2147483647
  m_Property:
    name: Delay
    m_serializedType:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes:
    - m_Type: 3
      m_Min: -Infinity
      m_Max: Infinity
      m_Tooltip: Sets the delay in seconds between each burst.
      m_Regex: 
      m_RegexMaxLength: 0
    - m_Type: 1
      m_Min: 0
      m_Max: Infinity
      m_Tooltip: 
      m_Regex: 
      m_RegexMaxLength: 0
  m_Direction: 0
  m_LinkedSlots: []
--- !u!114 &8926484042661614842
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 486e063e1ed58c843942ea4122829ab1, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 114350483966674976}
  m_Children: []
  m_UIPosition: {x: 373, y: 1147}
  m_UICollapsed: 0
  m_UISuperCollapsed: 1
  m_InputSlots: []
  m_OutputSlots:
  - {fileID: 8926484042661614843}
  attribute: color
  location: 0
  mask: xyz
--- !u!114 &8926484042661614843
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: ac39bd03fca81b849929b9c966f1836a, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 0}
  m_Children:
  - {fileID: 8926484042661614844}
  - {fileID: 8926484042661614845}
  - {fileID: 8926484042661614846}
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 0
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661614843}
  m_MasterData:
    m_Owner: {fileID: 8926484042661614842}
    m_Value:
      m_Type:
        m_SerializableType: UnityEngine.Vector3, UnityEngine.CoreModule, Version=0.0.0.0,
          Culture=neutral, PublicKeyToken=null
      m_SerializableObject: 
    m_Space: 2147483647
  m_Property:
    name: color
    m_serializedType:
      m_SerializableType: UnityEngine.Vector3, UnityEngine.CoreModule, Version=0.0.0.0,
        Culture=neutral, PublicKeyToken=null
    attributes:
    - m_Type: 3
      m_Min: -Infinity
      m_Max: Infinity
      m_Tooltip: The color of the particle.
      m_Regex: 
      m_RegexMaxLength: 0
  m_Direction: 1
  m_LinkedSlots:
  - {fileID: 8926484042661615035}
--- !u!114 &8926484042661614844
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f780aa281814f9842a7c076d436932e7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 8926484042661614843}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661614843}
  m_MasterData:
    m_Owner: {fileID: 0}
    m_Value:
      m_Type:
        m_SerializableType: 
      m_SerializableObject: 
    m_Space: 2147483647
  m_Property:
    name: x
    m_serializedType:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes: []
  m_Direction: 1
  m_LinkedSlots: []
--- !u!114 &8926484042661614845
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f780aa281814f9842a7c076d436932e7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 8926484042661614843}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661614843}
  m_MasterData:
    m_Owner: {fileID: 0}
    m_Value:
      m_Type:
        m_SerializableType: 
      m_SerializableObject: 
    m_Space: 2147483647
  m_Property:
    name: y
    m_serializedType:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes: []
  m_Direction: 1
  m_LinkedSlots: []
--- !u!114 &8926484042661614846
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f780aa281814f9842a7c076d436932e7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 8926484042661614843}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661614843}
  m_MasterData:
    m_Owner: {fileID: 0}
    m_Value:
      m_Type:
        m_SerializableType: 
      m_SerializableObject: 
    m_Space: 2147483647
  m_Property:
    name: z
    m_serializedType:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes: []
  m_Direction: 1
  m_LinkedSlots: []
--- !u!114 &8926484042661614866
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: c6841bdef989b6d408d7298703cfde75, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 114350483966674976}
  m_Children: []
  m_UIPosition: {x: 933, y: 932}
  m_UICollapsed: 0
  m_UISuperCollapsed: 0
  m_InputSlots:
  - {fileID: 8926484042661614867}
  - {fileID: 8926484042661614868}
  - {fileID: 8926484042661614869}
  - {fileID: 8926484042661614870}
  - {fileID: 8926484042661614874}
  m_OutputSlots: []
  m_Label: 
  m_Data: {fileID: 8926484042661614568}
  m_InputFlowSlot:
  - link:
    - context: {fileID: 8926484042661614583}
      slotIndex: 0
  m_OutputFlowSlot:
  - link: []
  blendMode: 3
  useAlphaClipping: 0
  generateMotionVector: 0
  m_SubOutputs:
  - {fileID: 8926484042661614873}
  cullMode: 0
  zWriteMode: 0
  zTestMode: 0
  colorMapping: 0
  uvMode: 0
  useSoftParticle: 0
  sortPriority: 0
  sort: 0
  indirectDraw: 0
  castShadows: 1
  useExposureWeight: 0
  shaderGraph: {fileID: 0}
  shadergraphGUID: 
  materialType: 0
  onlyAmbientLighting: 0
  diffusionProfileAsset: {fileID: 0}
  multiplyThicknessWithAlpha: 0
  useBaseColorMap: 0
  useMaskMap: 0
  useNormalMap: 0
  useEmissiveMap: 0
  colorMode: 1
  useEmissive: 1
  doubleSided: 0
  preserveSpecularLighting: 0
  enableShadows: 1
  enableSpecular: 1
  enableCookie: 1
  enableEnvLight: 1
--- !u!114 &8926484042661614867
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: b47b8679b468b7347a00cdd50589bc9f, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 0}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661614867}
  m_MasterData:
    m_Owner: {fileID: 8926484042661614866}
    m_Value:
      m_Type:
        m_SerializableType: UnityEngine.Mesh, UnityEngine.CoreModule, Version=0.0.0.0,
          Culture=neutral, PublicKeyToken=null
      m_SerializableObject: '{"obj":{"fileID":289301614986012343,"guid":"71570a94aa698d236a530af90e27d8b1","type":3}}'
    m_Space: 2147483647
  m_Property:
    name: mesh
    m_serializedType:
      m_SerializableType: UnityEngine.Mesh, UnityEngine.CoreModule, Version=0.0.0.0,
        Culture=neutral, PublicKeyToken=null
    attributes:
    - m_Type: 3
      m_Min: -Infinity
      m_Max: Infinity
      m_Tooltip: Specifies the mesh used to render the particle.
      m_Regex: 
      m_RegexMaxLength: 0
  m_Direction: 0
  m_LinkedSlots: []
--- !u!114 &8926484042661614868
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: c52d920e7fff73b498050a6b3c4404ca, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 0}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661614868}
  m_MasterData:
    m_Owner: {fileID: 8926484042661614866}
    m_Value:
      m_Type:
        m_SerializableType: System.UInt32, mscorlib, Version=4.0.0.0, Culture=neutral,
          PublicKeyToken=b77a5c561934e089
      m_SerializableObject: 4294967295
    m_Space: 2147483647
  m_Property:
    name: subMeshMask
    m_serializedType:
      m_SerializableType: System.UInt32, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes:
    - m_Type: 3
      m_Min: -Infinity
      m_Max: Infinity
      m_Tooltip: Defines a bitmask to control which submeshes are rendered.
      m_Regex: 
      m_RegexMaxLength: 0
    - m_Type: 8
      m_Min: -Infinity
      m_Max: Infinity
      m_Tooltip: 
      m_Regex: 
      m_RegexMaxLength: 0
  m_Direction: 0
  m_LinkedSlots: []
--- !u!114 &8926484042661614869
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f780aa281814f9842a7c076d436932e7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 0}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661614869}
  m_MasterData:
    m_Owner: {fileID: 8926484042661614866}
    m_Value:
      m_Type:
        m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
          PublicKeyToken=b77a5c561934e089
      m_SerializableObject: 0
    m_Space: 2147483647
  m_Property:
    name: smoothness
    m_serializedType:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes:
    - m_Type: 0
      m_Min: 0
      m_Max: 1
      m_Tooltip: 
      m_Regex: 
      m_RegexMaxLength: 0
    - m_Type: 3
      m_Min: -Infinity
      m_Max: Infinity
      m_Tooltip: "Controls the scale factor for the particle\u2019s smoothness."
      m_Regex: 
      m_RegexMaxLength: 0
  m_Direction: 0
  m_LinkedSlots: []
--- !u!114 &8926484042661614870
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f780aa281814f9842a7c076d436932e7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 0}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661614870}
  m_MasterData:
    m_Owner: {fileID: 8926484042661614866}
    m_Value:
      m_Type:
        m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
          PublicKeyToken=b77a5c561934e089
      m_SerializableObject: 0
    m_Space: 2147483647
  m_Property:
    name: metallic
    m_serializedType:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes:
    - m_Type: 0
      m_Min: 0
      m_Max: 1
      m_Tooltip: 
      m_Regex: 
      m_RegexMaxLength: 0
    - m_Type: 3
      m_Min: -Infinity
      m_Max: Infinity
      m_Tooltip: "Controls the scale factor for the particle\u2019s metallicity."
      m_Regex: 
      m_RegexMaxLength: 0
  m_Direction: 0
  m_LinkedSlots: []
--- !u!114 &8926484042661614873
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 081ffb0090424ba4cb05370a42ead6b9, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 0}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  opaqueRenderQueue: 0
  transparentRenderQueue: 1
--- !u!114 &8926484042661614874
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: c82227d5759e296488798b1554a72a15, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 0}
  m_Children:
  - {fileID: 8926484042661614875}
  - {fileID: 8926484042661614876}
  - {fileID: 8926484042661614877}
  - {fileID: 8926484042661614878}
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661614874}
  m_MasterData:
    m_Owner: {fileID: 8926484042661614866}
    m_Value:
      m_Type:
        m_SerializableType: UnityEngine.Color, UnityEngine.CoreModule, Version=0.0.0.0,
          Culture=neutral, PublicKeyToken=null
      m_SerializableObject: '{"r":0.0,"g":0.0,"b":0.0,"a":1.0}'
    m_Space: 2147483647
  m_Property:
    name: emissiveColor
    m_serializedType:
      m_SerializableType: UnityEngine.Color, UnityEngine.CoreModule, Version=0.0.0.0,
        Culture=neutral, PublicKeyToken=null
    attributes:
    - m_Type: 3
      m_Min: -Infinity
      m_Max: Infinity
      m_Tooltip: Sets the emissive color to make particles glow.
      m_Regex: 
      m_RegexMaxLength: 0
  m_Direction: 0
  m_LinkedSlots:
  - {fileID: 8926484042661615036}
--- !u!114 &8926484042661614875
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f780aa281814f9842a7c076d436932e7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 8926484042661614874}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661614874}
  m_MasterData:
    m_Owner: {fileID: 0}
    m_Value:
      m_Type:
        m_SerializableType: 
      m_SerializableObject: 
    m_Space: 2147483647
  m_Property:
    name: r
    m_serializedType:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes: []
  m_Direction: 0
  m_LinkedSlots: []
--- !u!114 &8926484042661614876
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f780aa281814f9842a7c076d436932e7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 8926484042661614874}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661614874}
  m_MasterData:
    m_Owner: {fileID: 0}
    m_Value:
      m_Type:
        m_SerializableType: 
      m_SerializableObject: 
    m_Space: 2147483647
  m_Property:
    name: g
    m_serializedType:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes: []
  m_Direction: 0
  m_LinkedSlots: []
--- !u!114 &8926484042661614877
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f780aa281814f9842a7c076d436932e7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 8926484042661614874}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661614874}
  m_MasterData:
    m_Owner: {fileID: 0}
    m_Value:
      m_Type:
        m_SerializableType: 
      m_SerializableObject: 
    m_Space: 2147483647
  m_Property:
    name: b
    m_serializedType:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes: []
  m_Direction: 0
  m_LinkedSlots: []
--- !u!114 &8926484042661614878
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f780aa281814f9842a7c076d436932e7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 8926484042661614874}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661614874}
  m_MasterData:
    m_Owner: {fileID: 0}
    m_Value:
      m_Type:
        m_SerializableType: 
      m_SerializableObject: 
    m_Space: 2147483647
  m_Property:
    name: a
    m_serializedType:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes: []
  m_Direction: 0
  m_LinkedSlots: []
--- !u!114 &8926484042661614879
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 330e0fca1717dde4aaa144f48232aa64, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 114350483966674976}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 0
  m_UISuperCollapsed: 0
  m_InputSlots: []
  m_OutputSlots:
  - {fileID: 8926484042661614880}
  m_ExposedName: PositionTexture
  m_Exposed: 1
  m_Order: 0
  m_Category: 
  m_Min:
    m_Type:
      m_SerializableType: 
    m_SerializableObject: 
  m_Max:
    m_Type:
      m_SerializableType: 
    m_SerializableObject: 
  m_IsOutput: 0
  m_Tooltip: 
  m_Nodes:
  - m_Id: 0
    linkedSlots:
    - outputSlot: {fileID: 8926484042661614880}
      inputSlot: {fileID: 8926484042661615048}
    position: {x: 686, y: 770}
    expandedSlots: []
    expanded: 0
--- !u!114 &8926484042661614880
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 70a331b1d86cc8d4aa106ccbe0da5852, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 0}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661614880}
  m_MasterData:
    m_Owner: {fileID: 8926484042661614879}
    m_Value:
      m_Type:
        m_SerializableType: UnityEngine.Texture2D, UnityEngine.CoreModule, Version=0.0.0.0,
          Culture=neutral, PublicKeyToken=null
      m_SerializableObject: '{"obj":{"fileID":2800000,"guid":"9e3a6c2a6197ced2089a19d171616e45","type":3}}'
    m_Space: 2147483647
  m_Property:
    name: o
    m_serializedType:
      m_SerializableType: UnityEngine.Texture2D, UnityEngine.CoreModule, Version=0.0.0.0,
        Culture=neutral, PublicKeyToken=null
    attributes: []
  m_Direction: 1
  m_LinkedSlots:
  - {fileID: 8926484042661615048}
--- !u!114 &8926484042661614881
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 330e0fca1717dde4aaa144f48232aa64, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 114350483966674976}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 0
  m_UISuperCollapsed: 0
  m_InputSlots: []
  m_OutputSlots:
  - {fileID: 8926484042661614882}
  m_ExposedName: ColorTexture
  m_Exposed: 1
  m_Order: 1
  m_Category: 
  m_Min:
    m_Type:
      m_SerializableType: 
    m_SerializableObject: 
  m_Max:
    m_Type:
      m_SerializableType: 
    m_SerializableObject: 
  m_IsOutput: 0
  m_Tooltip: 
  m_Nodes:
  - m_Id: 0
    linkedSlots:
    - outputSlot: {fileID: 8926484042661614882}
      inputSlot: {fileID: 8926484042661615049}
    position: {x: 702, y: 814}
    expandedSlots: []
    expanded: 0
--- !u!114 &8926484042661614882
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 70a331b1d86cc8d4aa106ccbe0da5852, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 0}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661614882}
  m_MasterData:
    m_Owner: {fileID: 8926484042661614881}
    m_Value:
      m_Type:
        m_SerializableType: UnityEngine.Texture2D, UnityEngine.CoreModule, Version=0.0.0.0,
          Culture=neutral, PublicKeyToken=null
      m_SerializableObject: '{"obj":{"fileID":2800000,"guid":"30889caeccb0bf753b00a4067eab9e40","type":3}}'
    m_Space: 2147483647
  m_Property:
    name: o
    m_serializedType:
      m_SerializableType: UnityEngine.Texture2D, UnityEngine.CoreModule, Version=0.0.0.0,
        Culture=neutral, PublicKeyToken=null
    attributes: []
  m_Direction: 1
  m_LinkedSlots:
  - {fileID: 8926484042661615049}
--- !u!114 &8926484042661614883
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 330e0fca1717dde4aaa144f48232aa64, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 114350483966674976}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 0
  m_UISuperCollapsed: 0
  m_InputSlots: []
  m_OutputSlots:
  - {fileID: 8926484042661614884}
  m_ExposedName: TextureDimensions
  m_Exposed: 1
  m_Order: 2
  m_Category: 
  m_Min:
    m_Type:
      m_SerializableType: 
    m_SerializableObject: 
  m_Max:
    m_Type:
      m_SerializableType: 
    m_SerializableObject: 
  m_IsOutput: 0
  m_Tooltip: Input dimensions of PositionTexture.
  m_Nodes:
  - m_Id: 0
    linkedSlots:
    - outputSlot: {fileID: 8926484042661614885}
      inputSlot: {fileID: 8926484042661614888}
    position: {x: 506, y: -29}
    expandedSlots: []
    expanded: 1
  - m_Id: 5
    linkedSlots:
    - outputSlot: {fileID: 8926484042661614884}
      inputSlot: {fileID: 8926484042661615042}
    position: {x: 667, y: 597}
    expandedSlots: []
    expanded: 0
--- !u!114 &8926484042661614884
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 1b2b751071c7fc14f9fa503163991826, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 0}
  m_Children:
  - {fileID: 8926484042661614885}
  - {fileID: 8926484042661614886}
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661614884}
  m_MasterData:
    m_Owner: {fileID: 8926484042661614883}
    m_Value:
      m_Type:
        m_SerializableType: UnityEngine.Vector2, UnityEngine.CoreModule, Version=0.0.0.0,
          Culture=neutral, PublicKeyToken=null
      m_SerializableObject: '{"x":2048.0,"y":573.0}'
    m_Space: 2147483647
  m_Property:
    name: o
    m_serializedType:
      m_SerializableType: UnityEngine.Vector2, UnityEngine.CoreModule, Version=0.0.0.0,
        Culture=neutral, PublicKeyToken=null
    attributes: []
  m_Direction: 1
  m_LinkedSlots:
  - {fileID: 8926484042661615042}
--- !u!114 &8926484042661614885
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f780aa281814f9842a7c076d436932e7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 8926484042661614884}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661614884}
  m_MasterData:
    m_Owner: {fileID: 0}
    m_Value:
      m_Type:
        m_SerializableType: 
      m_SerializableObject: 
    m_Space: 2147483647
  m_Property:
    name: x
    m_serializedType:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes: []
  m_Direction: 1
  m_LinkedSlots:
  - {fileID: 8926484042661614888}
--- !u!114 &8926484042661614886
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f780aa281814f9842a7c076d436932e7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 8926484042661614884}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661614884}
  m_MasterData:
    m_Owner: {fileID: 0}
    m_Value:
      m_Type:
        m_SerializableType: 
      m_SerializableObject: 
    m_Space: 2147483647
  m_Property:
    name: y
    m_serializedType:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes: []
  m_Direction: 1
  m_LinkedSlots: []
--- !u!114 &8926484042661614887
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: b8ee8a7543fa09e42a7c8616f60d2ad7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 114350483966674976}
  m_Children: []
  m_UIPosition: {x: 747, y: -24}
  m_UICollapsed: 0
  m_UISuperCollapsed: 0
  m_InputSlots:
  - {fileID: 8926484042661614888}
  - {fileID: 8926484042661614889}
  m_OutputSlots:
  - {fileID: 8926484042661614890}
  m_Operands:
  - name: a
    type:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
  - name: b
    type:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
--- !u!114 &8926484042661614888
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f780aa281814f9842a7c076d436932e7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 0}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661614888}
  m_MasterData:
    m_Owner: {fileID: 8926484042661614887}
    m_Value:
      m_Type:
        m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
          PublicKeyToken=b77a5c561934e089
      m_SerializableObject: 1
    m_Space: 2147483647
  m_Property:
    name: a
    m_serializedType:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes: []
  m_Direction: 0
  m_LinkedSlots:
  - {fileID: 8926484042661614885}
--- !u!114 &8926484042661614889
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f780aa281814f9842a7c076d436932e7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 0}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661614889}
  m_MasterData:
    m_Owner: {fileID: 8926484042661614887}
    m_Value:
      m_Type:
        m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
          PublicKeyToken=b77a5c561934e089
      m_SerializableObject: 3
    m_Space: 2147483647
  m_Property:
    name: b
    m_serializedType:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes: []
  m_Direction: 0
  m_LinkedSlots: []
--- !u!114 &8926484042661614890
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f780aa281814f9842a7c076d436932e7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 0}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661614890}
  m_MasterData:
    m_Owner: {fileID: 8926484042661614887}
    m_Value:
      m_Type:
        m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
          PublicKeyToken=b77a5c561934e089
      m_SerializableObject: 
    m_Space: 2147483647
  m_Property:
    name: 
    m_serializedType:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes: []
  m_Direction: 1
  m_LinkedSlots:
  - {fileID: 8926484042661614740}
--- !u!114 &8926484042661614893
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 330e0fca1717dde4aaa144f48232aa64, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 114350483966674976}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 0
  m_UISuperCollapsed: 0
  m_InputSlots: []
  m_OutputSlots:
  - {fileID: 8926484042661614894}
  m_ExposedName: Time
  m_Exposed: 1
  m_Order: 5
  m_Category: 
  m_Min:
    m_Type:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    m_SerializableObject: 
  m_Max:
    m_Type:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    m_SerializableObject: 1
  m_IsOutput: 0
  m_Tooltip: 
  m_Nodes:
  - m_Id: 1
    linkedSlots:
    - outputSlot: {fileID: 8926484042661614894}
      inputSlot: {fileID: 8926484042661615045}
    position: {x: 739, y: 637}
    expandedSlots: []
    expanded: 0
--- !u!114 &8926484042661614894
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f780aa281814f9842a7c076d436932e7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 0}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661614894}
  m_MasterData:
    m_Owner: {fileID: 8926484042661614893}
    m_Value:
      m_Type:
        m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
          PublicKeyToken=b77a5c561934e089
      m_SerializableObject: 1
    m_Space: 2147483647
  m_Property:
    name: o
    m_serializedType:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes: []
  m_Direction: 1
  m_LinkedSlots:
  - {fileID: 8926484042661615045}
--- !u!114 &8926484042661615019
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 330e0fca1717dde4aaa144f48232aa64, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 114350483966674976}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 0
  m_UISuperCollapsed: 0
  m_InputSlots: []
  m_OutputSlots:
  - {fileID: 8926484042661615020}
  m_ExposedName: BBox Min
  m_Exposed: 1
  m_Order: 3
  m_Category: 
  m_Min:
    m_Type:
      m_SerializableType: 
    m_SerializableObject: 
  m_Max:
    m_Type:
      m_SerializableType: 
    m_SerializableObject: 
  m_IsOutput: 0
  m_Tooltip: Input BBOX MIN value shown in the VAT exporter.
  m_Nodes:
  - m_Id: 0
    linkedSlots:
    - outputSlot: {fileID: 8926484042661615020}
      inputSlot: {fileID: 8926484042661615046}
    position: {x: 724, y: 680}
    expandedSlots: []
    expanded: 0
--- !u!114 &8926484042661615020
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f780aa281814f9842a7c076d436932e7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 0}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661615020}
  m_MasterData:
    m_Owner: {fileID: 8926484042661615019}
    m_Value:
      m_Type:
        m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
          PublicKeyToken=b77a5c561934e089
      m_SerializableObject: -227.9119
    m_Space: 2147483647
  m_Property:
    name: o
    m_serializedType:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes: []
  m_Direction: 1
  m_LinkedSlots:
  - {fileID: 8926484042661615046}
--- !u!114 &8926484042661615021
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 330e0fca1717dde4aaa144f48232aa64, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 114350483966674976}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 0
  m_UISuperCollapsed: 0
  m_InputSlots: []
  m_OutputSlots:
  - {fileID: 8926484042661615022}
  m_ExposedName: BBox Max
  m_Exposed: 1
  m_Order: 4
  m_Category: 
  m_Min:
    m_Type:
      m_SerializableType: 
    m_SerializableObject: 
  m_Max:
    m_Type:
      m_SerializableType: 
    m_SerializableObject: 
  m_IsOutput: 0
  m_Tooltip: Input BBOX MAX value shown in the VAT exporter.
  m_Nodes:
  - m_Id: 0
    linkedSlots:
    - outputSlot: {fileID: 8926484042661615022}
      inputSlot: {fileID: 8926484042661615047}
    position: {x: 718, y: 724}
    expandedSlots: []
    expanded: 0
--- !u!114 &8926484042661615022
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f780aa281814f9842a7c076d436932e7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 0}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661615022}
  m_MasterData:
    m_Owner: {fileID: 8926484042661615021}
    m_Value:
      m_Type:
        m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
          PublicKeyToken=b77a5c561934e089
      m_SerializableObject: 240.0912
    m_Space: 2147483647
  m_Property:
    name: o
    m_serializedType:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes: []
  m_Direction: 1
  m_LinkedSlots:
  - {fileID: 8926484042661615047}
--- !u!114 &8926484042661615033
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: a07d13b909432284193a1aeec3c9f533, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 114350483966674976}
  m_Children: []
  m_UIPosition: {x: 644, y: 1109}
  m_UICollapsed: 0
  m_UISuperCollapsed: 0
  m_InputSlots:
  - {fileID: 8926484042661615034}
  - {fileID: 8926484042661615035}
  m_OutputSlots:
  - {fileID: 8926484042661615036}
--- !u!114 &8926484042661615034
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 76f778ff57c4e8145b9681fe3268d8e9, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 0}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661615034}
  m_MasterData:
    m_Owner: {fileID: 8926484042661615033}
    m_Value:
      m_Type:
        m_SerializableType: UnityEngine.Gradient, UnityEngine.CoreModule, Version=0.0.0.0,
          Culture=neutral, PublicKeyToken=null
      m_SerializableObject: '{"colorKeys":[{"color":{"r":0.0,"g":0.0,"b":0.0,"a":1.0},"time":0.0},{"color":{"r":1.0,"g":0.0,"b":0.0,"a":1.0},"time":0.7140459418296814},{"color":{"r":10.68062686920166,"g":7.241819858551025,"b":3.2747206687927248,"a":1.0},"time":1.0}],"alphaKeys":[{"alpha":1.0,"time":0.0},{"alpha":1.0,"time":1.0}],"gradientMode":0}'
    m_Space: 2147483647
  m_Property:
    name: gradient
    m_serializedType:
      m_SerializableType: UnityEngine.Gradient, UnityEngine.CoreModule, Version=0.0.0.0,
        Culture=neutral, PublicKeyToken=null
    attributes:
    - m_Type: 3
      m_Min: -Infinity
      m_Max: Infinity
      m_Tooltip: Sets the gradient to sample from.
      m_Regex: 
      m_RegexMaxLength: 0
  m_Direction: 0
  m_LinkedSlots: []
--- !u!114 &8926484042661615035
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f780aa281814f9842a7c076d436932e7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 0}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661615035}
  m_MasterData:
    m_Owner: {fileID: 8926484042661615033}
    m_Value:
      m_Type:
        m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
          PublicKeyToken=b77a5c561934e089
      m_SerializableObject: 0
    m_Space: 2147483647
  m_Property:
    name: time
    m_serializedType:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes:
    - m_Type: 0
      m_Min: 0
      m_Max: 1
      m_Tooltip: 
      m_Regex: 
      m_RegexMaxLength: 0
    - m_Type: 3
      m_Min: -Infinity
      m_Max: Infinity
      m_Tooltip: Sets the time along the gradient to take a sample from.
      m_Regex: 
      m_RegexMaxLength: 0
  m_Direction: 0
  m_LinkedSlots:
  - {fileID: 8926484042661614843}
--- !u!114 &8926484042661615036
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: c499060cea9bbb24b8d723eafa343303, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 0}
  m_Children:
  - {fileID: 8926484042661615037}
  - {fileID: 8926484042661615038}
  - {fileID: 8926484042661615039}
  - {fileID: 8926484042661615040}
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661615036}
  m_MasterData:
    m_Owner: {fileID: 8926484042661615033}
    m_Value:
      m_Type:
        m_SerializableType: UnityEngine.Vector4, UnityEngine.CoreModule, Version=0.0.0.0,
          Culture=neutral, PublicKeyToken=null
      m_SerializableObject: '{"x":0.0,"y":0.0,"z":0.0,"w":0.0}'
    m_Space: 2147483647
  m_Property:
    name: s
    m_serializedType:
      m_SerializableType: UnityEngine.Vector4, UnityEngine.CoreModule, Version=0.0.0.0,
        Culture=neutral, PublicKeyToken=null
    attributes:
    - m_Type: 3
      m_Min: -Infinity
      m_Max: Infinity
      m_Tooltip: Outputs the sampled value from the gradient at the specified time.
      m_Regex: 
      m_RegexMaxLength: 0
  m_Direction: 1
  m_LinkedSlots:
  - {fileID: 8926484042661614874}
--- !u!114 &8926484042661615037
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f780aa281814f9842a7c076d436932e7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 8926484042661615036}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661615036}
  m_MasterData:
    m_Owner: {fileID: 0}
    m_Value:
      m_Type:
        m_SerializableType: 
      m_SerializableObject: 
    m_Space: 2147483647
  m_Property:
    name: x
    m_serializedType:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes: []
  m_Direction: 1
  m_LinkedSlots: []
--- !u!114 &8926484042661615038
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f780aa281814f9842a7c076d436932e7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 8926484042661615036}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661615036}
  m_MasterData:
    m_Owner: {fileID: 0}
    m_Value:
      m_Type:
        m_SerializableType: 
      m_SerializableObject: 
    m_Space: 2147483647
  m_Property:
    name: y
    m_serializedType:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes: []
  m_Direction: 1
  m_LinkedSlots: []
--- !u!114 &8926484042661615039
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f780aa281814f9842a7c076d436932e7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 8926484042661615036}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661615036}
  m_MasterData:
    m_Owner: {fileID: 0}
    m_Value:
      m_Type:
        m_SerializableType: 
      m_SerializableObject: 
    m_Space: 2147483647
  m_Property:
    name: z
    m_serializedType:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes: []
  m_Direction: 1
  m_LinkedSlots: []
--- !u!114 &8926484042661615040
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f780aa281814f9842a7c076d436932e7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 8926484042661615036}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661615036}
  m_MasterData:
    m_Owner: {fileID: 0}
    m_Value:
      m_Type:
        m_SerializableType: 
      m_SerializableObject: 
    m_Space: 2147483647
  m_Property:
    name: w
    m_serializedType:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes: []
  m_Direction: 1
  m_LinkedSlots: []
--- !u!114 &8926484042661615041
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 45fdf0bbbd1d59d4e883e734442050d7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 8926484042661614583}
  m_Children: []
  m_UIPosition: {x: 0, y: 2}
  m_UICollapsed: 0
  m_UISuperCollapsed: 0
  m_InputSlots:
  - {fileID: 8926484042661615042}
  - {fileID: 8926484042661615045}
  - {fileID: 8926484042661615046}
  - {fileID: 8926484042661615047}
  - {fileID: 8926484042661615048}
  - {fileID: 8926484042661615049}
  m_OutputSlots: []
  m_Disabled: 0
  m_Subgraph: {fileID: 5371698748595113096, guid: e7ef0664bfe29194ea86c7690aa09e40,
    type: 3}
--- !u!114 &8926484042661615042
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 1b2b751071c7fc14f9fa503163991826, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 0}
  m_Children:
  - {fileID: 8926484042661615043}
  - {fileID: 8926484042661615044}
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661615042}
  m_MasterData:
    m_Owner: {fileID: 8926484042661615041}
    m_Value:
      m_Type:
        m_SerializableType: UnityEngine.Vector2, UnityEngine.CoreModule, Version=0.0.0.0,
          Culture=neutral, PublicKeyToken=null
      m_SerializableObject: '{"x":2048.0,"y":573.0}'
    m_Space: 2147483647
  m_Property:
    name: TextureDimensions
    m_serializedType:
      m_SerializableType: UnityEngine.Vector2, UnityEngine.CoreModule, Version=0.0.0.0,
        Culture=neutral, PublicKeyToken=null
    attributes:
    - m_Type: 3
      m_Min: -Infinity
      m_Max: Infinity
      m_Tooltip: Input dimensions of PositionTexture.
      m_Regex: 
      m_RegexMaxLength: 0
  m_Direction: 0
  m_LinkedSlots:
  - {fileID: 8926484042661614884}
--- !u!114 &8926484042661615043
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f780aa281814f9842a7c076d436932e7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 8926484042661615042}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661615042}
  m_MasterData:
    m_Owner: {fileID: 0}
    m_Value:
      m_Type:
        m_SerializableType: 
      m_SerializableObject: 
    m_Space: 2147483647
  m_Property:
    name: x
    m_serializedType:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes: []
  m_Direction: 0
  m_LinkedSlots: []
--- !u!114 &8926484042661615044
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f780aa281814f9842a7c076d436932e7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 8926484042661615042}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661615042}
  m_MasterData:
    m_Owner: {fileID: 0}
    m_Value:
      m_Type:
        m_SerializableType: 
      m_SerializableObject: 
    m_Space: 2147483647
  m_Property:
    name: y
    m_serializedType:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes: []
  m_Direction: 0
  m_LinkedSlots: []
--- !u!114 &8926484042661615045
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f780aa281814f9842a7c076d436932e7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 0}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661615045}
  m_MasterData:
    m_Owner: {fileID: 8926484042661615041}
    m_Value:
      m_Type:
        m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
          PublicKeyToken=b77a5c561934e089
      m_SerializableObject: 1
    m_Space: 2147483647
  m_Property:
    name: Time
    m_serializedType:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes:
    - m_Type: 0
      m_Min: 0
      m_Max: 1
      m_Tooltip: 
      m_Regex: 
      m_RegexMaxLength: 0
  m_Direction: 0
  m_LinkedSlots:
  - {fileID: 8926484042661614894}
--- !u!114 &8926484042661615046
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f780aa281814f9842a7c076d436932e7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 0}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661615046}
  m_MasterData:
    m_Owner: {fileID: 8926484042661615041}
    m_Value:
      m_Type:
        m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
          PublicKeyToken=b77a5c561934e089
      m_SerializableObject: -227.9119
    m_Space: 2147483647
  m_Property:
    name: BBox Min
    m_serializedType:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes:
    - m_Type: 3
      m_Min: -Infinity
      m_Max: Infinity
      m_Tooltip: Input BBOX MIN value shown in the VAT exporter.
      m_Regex: 
      m_RegexMaxLength: 0
  m_Direction: 0
  m_LinkedSlots:
  - {fileID: 8926484042661615020}
--- !u!114 &8926484042661615047
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: f780aa281814f9842a7c076d436932e7, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 0}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661615047}
  m_MasterData:
    m_Owner: {fileID: 8926484042661615041}
    m_Value:
      m_Type:
        m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
          PublicKeyToken=b77a5c561934e089
      m_SerializableObject: 240.0912
    m_Space: 2147483647
  m_Property:
    name: BBox Max
    m_serializedType:
      m_SerializableType: System.Single, mscorlib, Version=4.0.0.0, Culture=neutral,
        PublicKeyToken=b77a5c561934e089
    attributes:
    - m_Type: 3
      m_Min: -Infinity
      m_Max: Infinity
      m_Tooltip: Input BBOX MAX value shown in the VAT exporter.
      m_Regex: 
      m_RegexMaxLength: 0
  m_Direction: 0
  m_LinkedSlots:
  - {fileID: 8926484042661615022}
--- !u!114 &8926484042661615048
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 70a331b1d86cc8d4aa106ccbe0da5852, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 0}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661615048}
  m_MasterData:
    m_Owner: {fileID: 8926484042661615041}
    m_Value:
      m_Type:
        m_SerializableType: UnityEngine.Texture2D, UnityEngine.CoreModule, Version=0.0.0.0,
          Culture=neutral, PublicKeyToken=null
      m_SerializableObject: '{"obj":{"fileID":2800000,"guid":"9e3a6c2a6197ced2089a19d171616e45","type":3}}'
    m_Space: 2147483647
  m_Property:
    name: PositionTexture
    m_serializedType:
      m_SerializableType: UnityEngine.Texture2D, UnityEngine.CoreModule, Version=0.0.0.0,
        Culture=neutral, PublicKeyToken=null
    attributes: []
  m_Direction: 0
  m_LinkedSlots:
  - {fileID: 8926484042661614880}
--- !u!114 &8926484042661615049
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 70a331b1d86cc8d4aa106ccbe0da5852, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_Parent: {fileID: 0}
  m_Children: []
  m_UIPosition: {x: 0, y: 0}
  m_UICollapsed: 1
  m_UISuperCollapsed: 0
  m_MasterSlot: {fileID: 8926484042661615049}
  m_MasterData:
    m_Owner: {fileID: 8926484042661615041}
    m_Value:
      m_Type:
        m_SerializableType: UnityEngine.Texture2D, UnityEngine.CoreModule, Version=0.0.0.0,
          Culture=neutral, PublicKeyToken=null
      m_SerializableObject: '{"obj":{"fileID":2800000,"guid":"30889caeccb0bf753b00a4067eab9e40","type":3}}'
    m_Space: 2147483647
  m_Property:
    name: ColorTexture
    m_serializedType:
      m_SerializableType: UnityEngine.Texture2D, UnityEngine.CoreModule, Version=0.0.0.0,
        Culture=neutral, PublicKeyToken=null
    attributes: []
  m_Direction: 0
  m_LinkedSlots:
  - {fileID: 8926484042661614882}
